{
  "metadata": {
    "id": 4164482,
    "node_id": "MDEwOlJlcG9zaXRvcnk0MTY0NDgy",
    "name": "django",
    "full_name": "django/django",
    "private": false,
    "owner": {
      "login": "django",
      "id": 27804,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjI3ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/27804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/django",
      "html_url": "https://github.com/django",
      "followers_url": "https://api.github.com/users/django/followers",
      "following_url": "https://api.github.com/users/django/following{/other_user}",
      "gists_url": "https://api.github.com/users/django/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/django/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/django/subscriptions",
      "organizations_url": "https://api.github.com/users/django/orgs",
      "repos_url": "https://api.github.com/users/django/repos",
      "events_url": "https://api.github.com/users/django/events{/privacy}",
      "received_events_url": "https://api.github.com/users/django/received_events",
      "type": "Organization",
      "user_view_type": "public",
      "site_admin": false
    },
    "html_url": "https://github.com/django/django",
    "description": "The Web framework for perfectionists with deadlines.",
    "fork": false,
    "url": "https://api.github.com/repos/django/django",
    "forks_url": "https://api.github.com/repos/django/django/forks",
    "keys_url": "https://api.github.com/repos/django/django/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/django/django/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/django/django/teams",
    "hooks_url": "https://api.github.com/repos/django/django/hooks",
    "issue_events_url": "https://api.github.com/repos/django/django/issues/events{/number}",
    "events_url": "https://api.github.com/repos/django/django/events",
    "assignees_url": "https://api.github.com/repos/django/django/assignees{/user}",
    "branches_url": "https://api.github.com/repos/django/django/branches{/branch}",
    "tags_url": "https://api.github.com/repos/django/django/tags",
    "blobs_url": "https://api.github.com/repos/django/django/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/django/django/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/django/django/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/django/django/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/django/django/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/django/django/languages",
    "stargazers_url": "https://api.github.com/repos/django/django/stargazers",
    "contributors_url": "https://api.github.com/repos/django/django/contributors",
    "subscribers_url": "https://api.github.com/repos/django/django/subscribers",
    "subscription_url": "https://api.github.com/repos/django/django/subscription",
    "commits_url": "https://api.github.com/repos/django/django/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/django/django/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/django/django/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/django/django/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/django/django/contents/{+path}",
    "compare_url": "https://api.github.com/repos/django/django/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/django/django/merges",
    "archive_url": "https://api.github.com/repos/django/django/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/django/django/downloads",
    "issues_url": "https://api.github.com/repos/django/django/issues{/number}",
    "pulls_url": "https://api.github.com/repos/django/django/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/django/django/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/django/django/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/django/django/labels{/name}",
    "releases_url": "https://api.github.com/repos/django/django/releases{/id}",
    "deployments_url": "https://api.github.com/repos/django/django/deployments",
    "created_at": "2012-04-28T02:47:18Z",
    "updated_at": "2025-07-20T23:52:16Z",
    "pushed_at": "2025-07-20T19:12:46Z",
    "git_url": "git://github.com/django/django.git",
    "ssh_url": "git@github.com:django/django.git",
    "clone_url": "https://github.com/django/django.git",
    "svn_url": "https://github.com/django/django",
    "homepage": "https://www.djangoproject.com/",
    "size": 268502,
    "stargazers_count": 84290,
    "watchers_count": 84290,
    "language": "Python",
    "has_issues": false,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "has_discussions": false,
    "forks_count": 32729,
    "mirror_url": null,
    "archived": false,
    "disabled": false,
    "open_issues_count": 358,
    "license": {
      "key": "bsd-3-clause",
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "spdx_id": "BSD-3-Clause",
      "url": "https://api.github.com/licenses/bsd-3-clause",
      "node_id": "MDc6TGljZW5zZTU="
    },
    "allow_forking": true,
    "is_template": false,
    "web_commit_signoff_required": false,
    "topics": [
      "apps",
      "django",
      "framework",
      "models",
      "orm",
      "python",
      "templates",
      "views",
      "web"
    ],
    "visibility": "public",
    "forks": 32729,
    "open_issues": 358,
    "watchers": 84290,
    "default_branch": "main",
    "permissions": {
      "admin": false,
      "maintain": false,
      "push": false,
      "triage": false,
      "pull": true
    },
    "score": 1.0
  },
  "scraped_at": "2025-07-20T20:34:07.862028",
  "issues": [
    {
      "url": "https://api.github.com/repos/django/django/issues/2692",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/2692/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/2692/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/2692/events",
      "html_url": "https://github.com/django/django/pull/2692",
      "id": 33905438,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxMTc0MzA=",
      "number": 2692,
      "title": "#22667 replaced occurrences of master/slave terminology with leader/follower",
      "user": {
        "login": "fcurella",
        "id": 89607,
        "node_id": "MDQ6VXNlcjg5NjA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/89607?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fcurella",
        "html_url": "https://github.com/fcurella",
        "followers_url": "https://api.github.com/users/fcurella/followers",
        "following_url": "https://api.github.com/users/fcurella/following{/other_user}",
        "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions",
        "organizations_url": "https://api.github.com/users/fcurella/orgs",
        "repos_url": "https://api.github.com/users/fcurella/repos",
        "events_url": "https://api.github.com/users/fcurella/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fcurella/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": true,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 717,
      "created_at": "2014-05-20T16:29:41Z",
      "updated_at": "2021-02-11T11:44:20Z",
      "closed_at": "2014-05-20T16:37:04Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/2692",
        "html_url": "https://github.com/django/django/pull/2692",
        "diff_url": "https://github.com/django/django/pull/2692.diff",
        "patch_url": "https://github.com/django/django/pull/2692.patch",
        "merged_at": "2014-05-20T16:37:04Z"
      },
      "body": "The docs and some tests contain references to a master/slave db configuration.\nWhile this terminology has been used for a long time, those terms may carry racially charged meanings to users.\nThis patch replaces all occurrences of master and slave with 'leader' and 'follower'\n",
      "closed_by": {
        "login": "alex",
        "id": 772,
        "node_id": "MDQ6VXNlcjc3Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alex",
        "html_url": "https://github.com/alex",
        "followers_url": "https://api.github.com/users/alex/followers",
        "following_url": "https://api.github.com/users/alex/following{/other_user}",
        "gists_url": "https://api.github.com/users/alex/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alex/subscriptions",
        "organizations_url": "https://api.github.com/users/alex/orgs",
        "repos_url": "https://api.github.com/users/alex/repos",
        "events_url": "https://api.github.com/users/alex/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alex/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/2692/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/2692/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/43650352",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-43650352",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 43650352,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjUwMzUy",
          "user": {
            "login": "alex",
            "id": 772,
            "node_id": "MDQ6VXNlcjc3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex",
            "html_url": "https://github.com/alex",
            "followers_url": "https://api.github.com/users/alex/followers",
            "following_url": "https://api.github.com/users/alex/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex/subscriptions",
            "organizations_url": "https://api.github.com/users/alex/orgs",
            "repos_url": "https://api.github.com/users/alex/repos",
            "events_url": "https://api.github.com/users/alex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-20T16:37:11Z",
          "updated_at": "2014-05-20T16:37:11Z",
          "author_association": "MEMBER",
          "body": "Thanks for taking the time to do this!\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/43650352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44216873",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44216873",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44216873,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE2ODcz",
          "user": {
            "login": "punkeel",
            "id": 1859135,
            "node_id": "MDQ6VXNlcjE4NTkxMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1859135?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/punkeel",
            "html_url": "https://github.com/punkeel",
            "followers_url": "https://api.github.com/users/punkeel/followers",
            "following_url": "https://api.github.com/users/punkeel/following{/other_user}",
            "gists_url": "https://api.github.com/users/punkeel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/punkeel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/punkeel/subscriptions",
            "organizations_url": "https://api.github.com/users/punkeel/orgs",
            "repos_url": "https://api.github.com/users/punkeel/repos",
            "events_url": "https://api.github.com/users/punkeel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/punkeel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T20:41:36Z",
          "updated_at": "2014-05-26T20:41:36Z",
          "author_association": "NONE",
          "body": "Are you serious ?\nThe meaning of a word is defined by its use, by the context.\nIn this case, _master_/_slave_ is used by every database server, in every documentation ([redis](http://redis.io/topics/replication), [mysql](http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html) \u2026)\n\nNB: I don't say I'm against this change. Just that I don't see the point of changing two words with two others just because they have been used somewhere else.\nFor example, your avatar is red. Red, like communism. You should use a black and white color. Oh no, that's linked to racism too. Well. Let's remove colors, too, then ? ;)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44216873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44217325",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44217325",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44217325,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE3MzI1",
          "user": {
            "login": "kamilogorek",
            "id": 1523305,
            "node_id": "MDQ6VXNlcjE1MjMzMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1523305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kamilogorek",
            "html_url": "https://github.com/kamilogorek",
            "followers_url": "https://api.github.com/users/kamilogorek/followers",
            "following_url": "https://api.github.com/users/kamilogorek/following{/other_user}",
            "gists_url": "https://api.github.com/users/kamilogorek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kamilogorek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kamilogorek/subscriptions",
            "organizations_url": "https://api.github.com/users/kamilogorek/orgs",
            "repos_url": "https://api.github.com/users/kamilogorek/repos",
            "events_url": "https://api.github.com/users/kamilogorek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kamilogorek/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T20:50:23Z",
          "updated_at": "2014-05-26T20:50:23Z",
          "author_association": "NONE",
          "body": "Is that a real life?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44217325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44218055",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44218055",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44218055,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE4MDU1",
          "user": {
            "login": "evildmp",
            "id": 86222,
            "node_id": "MDQ6VXNlcjg2MjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/86222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evildmp",
            "html_url": "https://github.com/evildmp",
            "followers_url": "https://api.github.com/users/evildmp/followers",
            "following_url": "https://api.github.com/users/evildmp/following{/other_user}",
            "gists_url": "https://api.github.com/users/evildmp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evildmp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evildmp/subscriptions",
            "organizations_url": "https://api.github.com/users/evildmp/orgs",
            "repos_url": "https://api.github.com/users/evildmp/repos",
            "events_url": "https://api.github.com/users/evildmp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evildmp/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T21:05:39Z",
          "updated_at": "2014-05-26T21:05:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "As you can see from https://github.com/django/django/commit/beec05686ccc3bee8461f9a5a02c607a02352ae1 the terminology we have actually used is \"primary/replica\". So thank you for your interest, but there's nothing to see here and you can move along now.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44218055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44218522",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44218522",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44218522,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE4NTIy",
          "user": {
            "login": "jonathan3",
            "id": 111785,
            "node_id": "MDQ6VXNlcjExMTc4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/111785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathan3",
            "html_url": "https://github.com/jonathan3",
            "followers_url": "https://api.github.com/users/jonathan3/followers",
            "following_url": "https://api.github.com/users/jonathan3/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathan3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathan3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathan3/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathan3/orgs",
            "repos_url": "https://api.github.com/users/jonathan3/repos",
            "events_url": "https://api.github.com/users/jonathan3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathan3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T21:15:53Z",
          "updated_at": "2014-05-26T21:16:30Z",
          "author_association": "NONE",
          "body": "Before the flood of white male HN dwellers truly kicks off and obliterates all reasonable discussion, I'd like to thank the Django team for taking the time to do this.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44218522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44219237",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44219237",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44219237,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5MjM3",
          "user": {
            "login": "wodim",
            "id": 1001553,
            "node_id": "MDQ6VXNlcjEwMDE1NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1001553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wodim",
            "html_url": "https://github.com/wodim",
            "followers_url": "https://api.github.com/users/wodim/followers",
            "following_url": "https://api.github.com/users/wodim/following{/other_user}",
            "gists_url": "https://api.github.com/users/wodim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wodim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wodim/subscriptions",
            "organizations_url": "https://api.github.com/users/wodim/orgs",
            "repos_url": "https://api.github.com/users/wodim/repos",
            "events_url": "https://api.github.com/users/wodim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wodim/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T21:31:45Z",
          "updated_at": "2014-05-26T21:31:45Z",
          "author_association": "NONE",
          "body": "i'm just here for the laughs. is IT becoming too stupid? has science gone too far?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44219237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44219526",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44219526",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44219526,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5NTI2",
          "user": {
            "login": "jleclanche",
            "id": 235410,
            "node_id": "MDQ6VXNlcjIzNTQxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/235410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jleclanche",
            "html_url": "https://github.com/jleclanche",
            "followers_url": "https://api.github.com/users/jleclanche/followers",
            "following_url": "https://api.github.com/users/jleclanche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions",
            "organizations_url": "https://api.github.com/users/jleclanche/orgs",
            "repos_url": "https://api.github.com/users/jleclanche/repos",
            "events_url": "https://api.github.com/users/jleclanche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jleclanche/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T21:38:46Z",
          "updated_at": "2014-05-27T08:42:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "Discussion on the ticket: https://code.djangoproject.com/ticket/22667\n\"Primary\" and \"Replica\" aren't especially bad choices, but they're also wrong. The correct terms are `master` and `slave`. They've been used in databases, hardware setups, server setups and god knows what else for god knows how long.\n\nI cannot f_ing believe this PR made it through and was given actual man hours when there are massive outstanding PRs and patches on trac that need real attention. And don't be surprised that this does make it on HN and probably later on the usual slashdot/phoronix and what not. This is stupid *and_ controversial which is exactly what tech media loves.\n\nAnd to the HN/whatever crowd, don't post stupid memes here. This isn't the place.\n\nHelp yourselves and revert this, guys. Django docs, or docs in general are not the place to make up new terms for stuff that already exists.\n\nPS: Quick heads up: This made it to 4chan and various other troll places. Do not be surprised if there's suddenly an influx of .. weird comments.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44219526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44219569",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44219569",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44219569,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5NTY5",
          "user": {
            "login": "jardaroh",
            "id": 809613,
            "node_id": "MDQ6VXNlcjgwOTYxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/809613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jardaroh",
            "html_url": "https://github.com/jardaroh",
            "followers_url": "https://api.github.com/users/jardaroh/followers",
            "following_url": "https://api.github.com/users/jardaroh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jardaroh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jardaroh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jardaroh/subscriptions",
            "organizations_url": "https://api.github.com/users/jardaroh/orgs",
            "repos_url": "https://api.github.com/users/jardaroh/repos",
            "events_url": "https://api.github.com/users/jardaroh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jardaroh/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T21:39:37Z",
          "updated_at": "2014-05-26T21:39:37Z",
          "author_association": "NONE",
          "body": "This is silly.\nNext we will remove all mention og objects because some people might feel objectified.\nOr classes, because of the poor people that feels they are being discriminated against.\n\nSure, I understand that the use of words can hurt, but words themselves carry no meaning outside of it's use. Saying a car is yellow and calling a person yellow are two very different statements. We seem to have a new round of book burnings going on today...\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44219569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44219968",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44219968",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44219968,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5OTY4",
          "user": {
            "login": "Gwildor",
            "id": 891584,
            "node_id": "MDQ6VXNlcjg5MTU4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/891584?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gwildor",
            "html_url": "https://github.com/Gwildor",
            "followers_url": "https://api.github.com/users/Gwildor/followers",
            "following_url": "https://api.github.com/users/Gwildor/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gwildor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gwildor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gwildor/subscriptions",
            "organizations_url": "https://api.github.com/users/Gwildor/orgs",
            "repos_url": "https://api.github.com/users/Gwildor/repos",
            "events_url": "https://api.github.com/users/Gwildor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gwildor/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T21:49:08Z",
          "updated_at": "2014-05-26T21:49:08Z",
          "author_association": "NONE",
          "body": "Guys, just ignore this. These are bots who do this automatically for projects, which have been circling around on Github lately. There are also ones about feminism etc. The Linux kernel also had a PR like this a few months ago with a massive amount of responses on it.\n\nDon't feed the trolls, and just continue to use `master` and `slave`.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44219968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44220754",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44220754",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44220754,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIwNzU0",
          "user": {
            "login": "ajgon",
            "id": 150545,
            "node_id": "MDQ6VXNlcjE1MDU0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/150545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajgon",
            "html_url": "https://github.com/ajgon",
            "followers_url": "https://api.github.com/users/ajgon/followers",
            "following_url": "https://api.github.com/users/ajgon/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajgon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajgon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajgon/subscriptions",
            "organizations_url": "https://api.github.com/users/ajgon/orgs",
            "repos_url": "https://api.github.com/users/ajgon/repos",
            "events_url": "https://api.github.com/users/ajgon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajgon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:07:55Z",
          "updated_at": "2014-05-26T22:07:55Z",
          "author_association": "NONE",
          "body": "Faith in humanity restored. Thank you guys. I just want to add, that this will also be bad for django itself, since almost every developer who is no aware of this will be confused, and trust me - he will be expecting that this is some bizarre django thing, not the well known pattern. Peace.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44220754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221332",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221332",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221332,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxMzMy",
          "user": {
            "login": "coilysiren",
            "id": 5768468,
            "node_id": "MDQ6VXNlcjU3Njg0Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5768468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coilysiren",
            "html_url": "https://github.com/coilysiren",
            "followers_url": "https://api.github.com/users/coilysiren/followers",
            "following_url": "https://api.github.com/users/coilysiren/following{/other_user}",
            "gists_url": "https://api.github.com/users/coilysiren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coilysiren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coilysiren/subscriptions",
            "organizations_url": "https://api.github.com/users/coilysiren/orgs",
            "repos_url": "https://api.github.com/users/coilysiren/repos",
            "events_url": "https://api.github.com/users/coilysiren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coilysiren/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:23:08Z",
          "updated_at": "2014-05-26T22:23:08Z",
          "author_association": "NONE",
          "body": "Thanks so much Django for doing this thing! <3\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221383",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221383",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221383,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxMzgz",
          "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:24:33Z",
          "updated_at": "2014-05-26T22:24:33Z",
          "author_association": "NONE",
          "body": "Good move. Thank you.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221515",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221515",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221515,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNTE1",
          "user": {
            "login": "Thesoro",
            "id": 3046572,
            "node_id": "MDQ6VXNlcjMwNDY1NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3046572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thesoro",
            "html_url": "https://github.com/Thesoro",
            "followers_url": "https://api.github.com/users/Thesoro/followers",
            "following_url": "https://api.github.com/users/Thesoro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thesoro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thesoro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thesoro/subscriptions",
            "organizations_url": "https://api.github.com/users/Thesoro/orgs",
            "repos_url": "https://api.github.com/users/Thesoro/repos",
            "events_url": "https://api.github.com/users/Thesoro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thesoro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:28:32Z",
          "updated_at": "2014-05-26T22:28:32Z",
          "author_association": "NONE",
          "body": "Excellent stuff. Thanks for doing that.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221563",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221563",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221563,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNTYz",
          "user": {
            "login": "coilysiren",
            "id": 5768468,
            "node_id": "MDQ6VXNlcjU3Njg0Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5768468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coilysiren",
            "html_url": "https://github.com/coilysiren",
            "followers_url": "https://api.github.com/users/coilysiren/followers",
            "following_url": "https://api.github.com/users/coilysiren/following{/other_user}",
            "gists_url": "https://api.github.com/users/coilysiren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coilysiren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coilysiren/subscriptions",
            "organizations_url": "https://api.github.com/users/coilysiren/orgs",
            "repos_url": "https://api.github.com/users/coilysiren/repos",
            "events_url": "https://api.github.com/users/coilysiren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coilysiren/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:30:18Z",
          "updated_at": "2014-05-26T22:30:18Z",
          "author_association": "NONE",
          "body": "I'm very glad for this change because as a PoC I felt very uncomfortable seeing and using this terminology in my code\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221576",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221576",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221576,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNTc2",
          "user": {
            "login": "Ragzouken",
            "id": 527158,
            "node_id": "MDQ6VXNlcjUyNzE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/527158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ragzouken",
            "html_url": "https://github.com/Ragzouken",
            "followers_url": "https://api.github.com/users/Ragzouken/followers",
            "following_url": "https://api.github.com/users/Ragzouken/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ragzouken/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ragzouken/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ragzouken/subscriptions",
            "organizations_url": "https://api.github.com/users/Ragzouken/orgs",
            "repos_url": "https://api.github.com/users/Ragzouken/repos",
            "events_url": "https://api.github.com/users/Ragzouken/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ragzouken/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:30:42Z",
          "updated_at": "2014-05-26T22:30:42Z",
          "author_association": "NONE",
          "body": "glad to see big projects taking this seriously\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221603",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221603",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221603,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNjAz",
          "user": {
            "login": "kittenpies",
            "id": 1156859,
            "node_id": "MDQ6VXNlcjExNTY4NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1156859?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kittenpies",
            "html_url": "https://github.com/kittenpies",
            "followers_url": "https://api.github.com/users/kittenpies/followers",
            "following_url": "https://api.github.com/users/kittenpies/following{/other_user}",
            "gists_url": "https://api.github.com/users/kittenpies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kittenpies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kittenpies/subscriptions",
            "organizations_url": "https://api.github.com/users/kittenpies/orgs",
            "repos_url": "https://api.github.com/users/kittenpies/repos",
            "events_url": "https://api.github.com/users/kittenpies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kittenpies/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:31:42Z",
          "updated_at": "2014-05-26T22:31:42Z",
          "author_association": "NONE",
          "body": "Thanks Django for making this important change to be more welcoming and inclusive to more members of the tech community. <3 \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221603/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221627",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221627",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221627,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNjI3",
          "user": {
            "login": "northofnormal",
            "id": 4441619,
            "node_id": "MDQ6VXNlcjQ0NDE2MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4441619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northofnormal",
            "html_url": "https://github.com/northofnormal",
            "followers_url": "https://api.github.com/users/northofnormal/followers",
            "following_url": "https://api.github.com/users/northofnormal/following{/other_user}",
            "gists_url": "https://api.github.com/users/northofnormal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northofnormal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northofnormal/subscriptions",
            "organizations_url": "https://api.github.com/users/northofnormal/orgs",
            "repos_url": "https://api.github.com/users/northofnormal/repos",
            "events_url": "https://api.github.com/users/northofnormal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northofnormal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:32:16Z",
          "updated_at": "2014-05-26T22:32:16Z",
          "author_association": "NONE",
          "body": "\"they've always been called that\" is a dumb reason to keep doing something, especially something that is hurtful or alienating. Kudos to Django for making this change! \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221638",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221638",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221638,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNjM4",
          "user": {
            "login": "dstaley",
            "id": 88163,
            "node_id": "MDQ6VXNlcjg4MTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/88163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dstaley",
            "html_url": "https://github.com/dstaley",
            "followers_url": "https://api.github.com/users/dstaley/followers",
            "following_url": "https://api.github.com/users/dstaley/following{/other_user}",
            "gists_url": "https://api.github.com/users/dstaley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dstaley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dstaley/subscriptions",
            "organizations_url": "https://api.github.com/users/dstaley/orgs",
            "repos_url": "https://api.github.com/users/dstaley/repos",
            "events_url": "https://api.github.com/users/dstaley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dstaley/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:32:38Z",
          "updated_at": "2014-05-26T22:32:38Z",
          "author_association": "NONE",
          "body": "The use of the terms `master` and `slave` in relation to databases (and hardware configurations) has always made me uncomfortable. I think the terms `leader` and `follower` are much more appropriate, and are actually more expressive. :heart: to the Django team for making this change!\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221642",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221642",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221642,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNjQy",
          "user": {
            "login": "tingley",
            "id": 641077,
            "node_id": "MDQ6VXNlcjY0MTA3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/641077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tingley",
            "html_url": "https://github.com/tingley",
            "followers_url": "https://api.github.com/users/tingley/followers",
            "following_url": "https://api.github.com/users/tingley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tingley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tingley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tingley/subscriptions",
            "organizations_url": "https://api.github.com/users/tingley/orgs",
            "repos_url": "https://api.github.com/users/tingley/repos",
            "events_url": "https://api.github.com/users/tingley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tingley/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:32:48Z",
          "updated_at": "2014-05-26T22:32:48Z",
          "author_association": "NONE",
          "body": "These terms have been in use forever, but that doesn't make them good. Fixing them has to start somewhere; good for Django for taking the lead.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44221649",
          "html_url": "https://github.com/django/django/pull/2692#issuecomment-44221649",
          "issue_url": "https://api.github.com/repos/django/django/issues/2692",
          "id": 44221649,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIxNjQ5",
          "user": {
            "login": "copumpkin",
            "id": 2623,
            "node_id": "MDQ6VXNlcjI2MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copumpkin",
            "html_url": "https://github.com/copumpkin",
            "followers_url": "https://api.github.com/users/copumpkin/followers",
            "following_url": "https://api.github.com/users/copumpkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions",
            "organizations_url": "https://api.github.com/users/copumpkin/orgs",
            "repos_url": "https://api.github.com/users/copumpkin/repos",
            "events_url": "https://api.github.com/users/copumpkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/copumpkin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-26T22:33:06Z",
          "updated_at": "2014-05-26T22:33:06Z",
          "author_association": "NONE",
          "body": ":+1:\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44221649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18056",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18056/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18056/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18056/events",
      "html_url": "https://github.com/django/django/pull/18056",
      "id": 2229556147,
      "node_id": "PR_kwDOAD-Lgs5r7IxF",
      "number": 18056,
      "title": "Fixed #373 -- Added CompositePrimaryKey.",
      "user": {
        "login": "csirmazbendeguz",
        "id": 19559023,
        "node_id": "MDQ6VXNlcjE5NTU5MDIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/csirmazbendeguz",
        "html_url": "https://github.com/csirmazbendeguz",
        "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
        "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
        "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
        "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
        "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
        "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [
        {
          "id": 4412565576,
          "node_id": "LA_kwDOAD-Lgs8AAAABBwJoSA",
          "url": "https://api.github.com/repos/django/django/labels/benchmark",
          "name": "benchmark",
          "color": "c2e0c6",
          "default": false,
          "description": "Apply to have ASV benchmarks run on a PR"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 60,
      "created_at": "2024-04-07T04:28:04Z",
      "updated_at": "2024-12-10T02:51:41Z",
      "closed_at": "2024-11-29T10:23:04Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18056",
        "html_url": "https://github.com/django/django/pull/18056",
        "diff_url": "https://github.com/django/django/pull/18056.diff",
        "patch_url": "https://github.com/django/django/pull/18056.patch",
        "merged_at": "2024-11-29T10:23:04Z"
      },
      "body": "# Trac ticket number\r\n\r\nticket-373\r\n\r\n# Branch description\r\n\r\nThis branch adds the `CompositePrimaryKey` field. If present, Django will create a composite primary key.\r\n\r\nPlease refer to the [docs](https://github.com/django/django/pull/18056/files#diff-cca8870fcaec19104d999f61553ba925c72e2eb19b4933068c4849f2ce58a6f6) for a more in-depth explanation.\r\n\r\n[Proposal](https://forum.djangoproject.com/t/gsoc-2024-proposal-django-orm-support-for-composite-primary-keys/29146)\r\n[Previous PR](https://github.com/django/django/pull/18031)\r\n\r\nRelated PRs:\r\n[Composite FK](https://github.com/django/django/pull/18868) \u231b \r\n[Admin](https://github.com/django/django/pull/18865) \u231b\r\n[Composite Generic FK](https://github.com/django/django/pull/18863) \u231b\r\n~~[Model._is_pk_set()](https://github.com/django/django/pull/18450)~~ \u2705 \r\n~~[Tuple Lookups](https://github.com/django/django/pull/18404)~~ \u2705 \r\n~~[Serial Fields](https://github.com/django/django/pull/18123)~~ \u274c \r\n\r\n```python\r\nclass Tenant(models.Model):\r\n    pass\r\n\r\n\r\nclass User(models.Model):\r\n    pk = models.CompositePrimaryKey(\"tenant_id\", \"id\", primary_key=True)\r\n    tenant = models.ForeignKey(Tenant, on_delete=models.CASCADE)\r\n    id = models.IntegerField()\r\n\r\n\r\nclass Comment(models.Model):\r\n    pk = models.CompositePrimaryKey(\"tenant_id\", \"id\")\r\n    tenant = models.ForeignKey(Tenant, on_delete=models.CASCADE)\r\n    id = models.IntegerField()\r\n    user_id = models.IntegerField()\r\n    user = models.ForeignObject(\r\n        User,\r\n        on_delete=models.CASCADE,\r\n        from_fields=(\"tenant_id\", \"user_id\"),\r\n        to_fields=(\"tenant_id\", \"id\"),\r\n        related_name=\"+\",\r\n    )\r\n```\r\n\r\n# Checklist\r\n- [X] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [X] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [X] I have checked the \"Has patch\" **ticket flag** in the Trac system.\r\n- [X] I have added or updated relevant **tests**.\r\n- [x] I have added or updated relevant **docs**, including release notes if applicable.\r\n- [x] For UI changes, I have attached **screenshots** in both light and dark modes.\r\n",
      "closed_by": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18056/reactions",
        "total_count": 52,
        "+1": 18,
        "-1": 0,
        "laugh": 0,
        "hooray": 15,
        "confused": 0,
        "heart": 11,
        "rocket": 8,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18056/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2062013314",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2062013314",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2062013314,
          "node_id": "IC_kwDOAD-Lgs5659OC",
          "user": {
            "login": "grjones",
            "id": 67890,
            "node_id": "MDQ6VXNlcjY3ODkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grjones",
            "html_url": "https://github.com/grjones",
            "followers_url": "https://api.github.com/users/grjones/followers",
            "following_url": "https://api.github.com/users/grjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/grjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grjones/subscriptions",
            "organizations_url": "https://api.github.com/users/grjones/orgs",
            "repos_url": "https://api.github.com/users/grjones/repos",
            "events_url": "https://api.github.com/users/grjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grjones/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-17T19:04:43Z",
          "updated_at": "2024-04-17T19:16:32Z",
          "author_association": "NONE",
          "body": "I was trying out this exciting branch and ran into this error when running a test:\r\n```\r\n<...>/lib/python3.12/site-packages/django/db/models/lookups.py:30: in __init__\r\n    self.rhs = self.get_prep_lookup()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = TupleIn(<django.db.models.fields.composite.Cols object at 0x107560980>, <django.db.models.sql.query.Query object at 0x1074e23f0>)\r\n\r\n    def get_prep_lookup(self):\r\n        if not isinstance(self.lhs, Cols):\r\n            raise ValueError(\r\n                \"The left-hand side of the 'in' lookup must be an instance of Cols\"\r\n            )\r\n        if not isinstance(self.rhs, Iterable):\r\n>           raise ValueError(\r\n                \"The right-hand side of the 'in' lookup must be an iterable\"\r\n            )\r\nE           ValueError: The right-hand side of the 'in' lookup must be an iterable\r\n```\r\n\r\nThe issue stems from the use of `isnull` like so:\r\n\r\n```\r\nMyModel.objects.filter(\r\n    type_override__severity__isnull=False\r\n).update(severity=\"high\")\r\n```\r\n\r\nCurious if anyone ran into this as well.\r\n\r\nEdited for traceback:\r\n\r\n```\r\n<...>\r\nlib/python3.12/site-packages/django/db/models/sql/compiler.py:2080: in pre_sql_setup\r\n    self.query.add_filter(\"pk__in\", query)\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1601: in add_filter\r\n    self.add_q(Q((filter_lhs, filter_rhs)))\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1617: in add_q\r\n    clause, _ = self._add_q(q_object, self.used_aliases)\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1649: in _add_q\r\n    child_clause, needed_inner = self.build_filter(\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1563: in build_filter\r\n    condition = self.build_lookup(lookups, col, value)\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1393: in build_lookup\r\n    lookup = lookup_class(lhs, rhs)\r\nlib/python3.12/site-packages/django/db/models/lookups.py:30: in __init__\r\n    self.rhs = self.get_prep_lookup()\r\n```\r\n\r\nSo, this is part of `SQLUpdateCompiler` and is coming from the `update` code path.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2062013314/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2062903864",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2062903864",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2062903864,
          "node_id": "IC_kwDOAD-Lgs569Wo4",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-18T02:58:00Z",
          "updated_at": "2024-04-18T02:59:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for testing and reporting the issue @grjones! Indeed, I forgot to handle this use case. I'll look into it this week.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2062903864/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2067459893",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2067459893",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2067459893,
          "node_id": "IC_kwDOAD-Lgs57Ou81",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-20T00:52:41Z",
          "updated_at": "2024-04-20T00:52:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "@grjones, FYI I pushed the fix",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2067459893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2067500451",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2067500451",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2067500451,
          "node_id": "IC_kwDOAD-Lgs57O42j",
          "user": {
            "login": "grjones",
            "id": 67890,
            "node_id": "MDQ6VXNlcjY3ODkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grjones",
            "html_url": "https://github.com/grjones",
            "followers_url": "https://api.github.com/users/grjones/followers",
            "following_url": "https://api.github.com/users/grjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/grjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grjones/subscriptions",
            "organizations_url": "https://api.github.com/users/grjones/orgs",
            "repos_url": "https://api.github.com/users/grjones/repos",
            "events_url": "https://api.github.com/users/grjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grjones/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-20T01:25:37Z",
          "updated_at": "2024-04-20T01:25:37Z",
          "author_association": "NONE",
          "body": "> @grjones, FYI I pushed the fix\r\n\r\nNice! I hope this gets merged in soon. Your branch has been working great for me.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2067500451/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2070223293",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2070223293",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2070223293,
          "node_id": "IC_kwDOAD-Lgs57ZRm9",
          "user": {
            "login": "grjones",
            "id": 67890,
            "node_id": "MDQ6VXNlcjY3ODkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grjones",
            "html_url": "https://github.com/grjones",
            "followers_url": "https://api.github.com/users/grjones/followers",
            "following_url": "https://api.github.com/users/grjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/grjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grjones/subscriptions",
            "organizations_url": "https://api.github.com/users/grjones/orgs",
            "repos_url": "https://api.github.com/users/grjones/repos",
            "events_url": "https://api.github.com/users/grjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grjones/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-22T16:54:36Z",
          "updated_at": "2024-04-22T16:54:36Z",
          "author_association": "NONE",
          "body": "I may have found one other small issue. When adding a regular `primary_key=True` on a single field, a unique constraint is added. But when using this branch, it becomes an `IntegrityError` instead. Adding a `UniqueConstraint` on the composite fields is a work-a-round but ideally would be captured in this PR. Imo, this PR is sooooo close. I'm excited for it to be merged in.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2070223293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2071398184",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2071398184",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2071398184,
          "node_id": "IC_kwDOAD-Lgs57dwco",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-23T04:44:18Z",
          "updated_at": "2024-04-23T04:44:18Z",
          "author_association": "CONTRIBUTOR",
          "body": "@grjones , thanks, I appreciate the feedback, I'll look into it. If a model defines `Meta.primary_key`, defining `primary_key=True` on a field should not be possible - could you give me a code example so I know how to reproduce the issue? I didn't know Django added unique constraints to primary keys, I'll check, but isn't that redundant?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2071398184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2071450354",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2071450354",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2071450354,
          "node_id": "IC_kwDOAD-Lgs57d9Ly",
          "user": {
            "login": "grjones",
            "id": 67890,
            "node_id": "MDQ6VXNlcjY3ODkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grjones",
            "html_url": "https://github.com/grjones",
            "followers_url": "https://api.github.com/users/grjones/followers",
            "following_url": "https://api.github.com/users/grjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/grjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grjones/subscriptions",
            "organizations_url": "https://api.github.com/users/grjones/orgs",
            "repos_url": "https://api.github.com/users/grjones/repos",
            "events_url": "https://api.github.com/users/grjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grjones/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-04-23T05:39:35Z",
          "updated_at": "2024-04-23T05:39:35Z",
          "author_association": "NONE",
          "body": "> @grjones , thanks, I appreciate the feedback, I'll look into it. If a model defines `Meta.primary_key`, defining `primary_key=True` on a field should not be possible - could you give me a code example so I know how to reproduce the issue? I didn't know Django added unique constraints to primary keys, I'll check, but isn't that redundant?\r\n\r\nI'll see if I can give you a solid failing test. My \"unique constraint\" phrasing might not be exactly right. But ultimately, I believe Django queries the DB first to see if the new object's PK already exists and throws a validation error. The composite key logic doesn't seem to be doing that and so an unhandled IntegrityError is raised instead.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2071450354/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2088167454",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2088167454",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2088167454,
          "node_id": "IC_kwDOAD-Lgs58duge",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-01T08:48:18Z",
          "updated_at": "2024-05-01T08:48:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "@grjones , sorry for the late reply, I've been busy last week. Could you give me more specifics? What's the error message you expect?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2088167454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2089452817",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2089452817",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2089452817,
          "node_id": "IC_kwDOAD-Lgs58ioUR",
          "user": {
            "login": "grjones",
            "id": 67890,
            "node_id": "MDQ6VXNlcjY3ODkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grjones",
            "html_url": "https://github.com/grjones",
            "followers_url": "https://api.github.com/users/grjones/followers",
            "following_url": "https://api.github.com/users/grjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/grjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grjones/subscriptions",
            "organizations_url": "https://api.github.com/users/grjones/orgs",
            "repos_url": "https://api.github.com/users/grjones/repos",
            "events_url": "https://api.github.com/users/grjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grjones/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-02T03:09:49Z",
          "updated_at": "2024-05-02T04:45:39Z",
          "author_association": "NONE",
          "body": "> @grjones , sorry for the late reply, I've been busy last week. Could you give me more specifics? What's the error message you expect?\r\n\r\nActually, I think it's mostly ok. I was using [Django Spanner](https://github.com/googleapis/python-spanner-django) and it's just not quite working with composite keys and will need to be fixed there. I wrote this and it passed. It probably shouldn't say `Id` though?\r\n\r\n```\r\nfrom django.core.exceptions import ValidationError\r\nfrom django.test import TestCase\r\n\r\nfrom .models import Tenant, User\r\n\r\n\r\nclass CompositePKCleanTests(TestCase):\r\n    \"\"\"\r\n    Test the .clean() method of composite_pk models.\r\n    \"\"\"\r\n\r\n    @classmethod\r\n    def setUpTestData(cls):\r\n        cls.tenant = Tenant.objects.create()\r\n\r\n    def test_validation_error_is_raised_when_pk_already_exists(self):\r\n        test_cases = [\r\n            {\"tenant\": self.tenant, \"id\": 2412, \"email\": \"user2412@example.com\"},\r\n            {\"tenant_id\": self.tenant.id, \"id\": 5316, \"email\": \"user5316@example.com\"},\r\n            {\"pk\": (self.tenant.id, 7424), \"email\": \"user7424@example.com\"},\r\n        ]\r\n        expected = \"{'id': ['User with this Id already exists.']}\"\r\n        for fields in test_cases:\r\n            User.objects.create(**fields)\r\n            with self.assertRaisesMessage(ValidationError, expected):\r\n                User(**fields).clean()\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2089452817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2093988072",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2093988072",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2093988072,
          "node_id": "IC_kwDOAD-Lgs58z7jo",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-04T03:31:50Z",
          "updated_at": "2024-05-04T03:31:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you so much for taking the time to review my changes @LilyFoote !\r\nI have two questions:\r\n\r\n1. If `Meta.primary_key` is defined, this PR will automatically add a composite field called `primary_key` to the model. What do you think about this approach? I felt like it was easier to handle the composite primary keys this way as we can run checks against the meta class instead of traversing the model's fields for a composite field.\r\n2. I wrote a lot of tests testing the underlying queries made by the ORM. It makes a lot of sense to me, but I haven't seen this type of tests that much in the Django source code - do these tests look okay to you?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2093988072/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2094143117",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2094143117",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2094143117,
          "node_id": "IC_kwDOAD-Lgs580haN",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-04T12:13:30Z",
          "updated_at": "2024-05-04T12:13:30Z",
          "author_association": "CONTRIBUTOR",
          "body": " \r\n> If `Meta.primary_key` is defined, this PR will automatically add a composite field called `primary_key` to the model. What do you think about this approach?\r\n\r\nI don't feel strongly that this is better or worse than another option here, so happy to go with what you think is best.\r\n\r\n> I wrote a lot of tests testing the underlying queries made by the ORM. It makes a lot of sense to me, but I haven't seen this type of tests that much in the Django source code - do these tests look okay to you?\r\n\r\nI like your tests quite a bit - they're pretty readable and comprehensive. The main issue I have with them is that they're written for specific databases instead of for generic database features. Where possible Django strongly prefers to test based on features because then the tests apply to as many databases as possible (including third party database libraries). I think the asserts of the actual SQL might be a bit tricky to adapt though, so we might need a different way to check what they're checking.\r\n\r\nAlso, after I reviewed yesterday, I thought of some more things:\r\n\r\n* We should add migrations tests to make sure that adding/removing `Meta.primary_key` works correctly and that removing a field that's part of a primary key also does something appropriate.\r\n* We might want tests for composite keys in forms and the admin. Maybe there's other areas too that we need to check the interactions.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2094143117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2116611606",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2116611606",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2116611606,
          "node_id": "IC_kwDOAD-Lgs5-KO4W",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-17T04:41:41Z",
          "updated_at": "2024-05-17T04:41:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @charettes !\r\n\r\n> Something that came through my mind while reviewing is that we likely want a plan to eventually deprecate `Options.pk` in favor of `Options.primary_key`?\r\n\r\nI'm not sure what you mean by that, I don't think we can, because `Options.pk` refers to the field, while `Options.primary_key` is the list of field names.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2116611606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2116639953",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2116639953",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2116639953,
          "node_id": "IC_kwDOAD-Lgs5-KVzR",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-17T05:09:34Z",
          "updated_at": "2024-05-17T05:09:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "So as far as I understand, at the moment `MultiColSource` is used by Django internally to represent `JOIN`s on multiple fields - that's why it has a `sources` field.\r\n\r\nI'm not sure it's the right decision to reuse this for composite fields, which on the other hand don't need `sources`, it just needs to represent a list of `Col`s as an expression.\r\n\r\nLet me know what you think!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2116639953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2117555406",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2117555406",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2117555406,
          "node_id": "IC_kwDOAD-Lgs5-N1TO",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-17T13:01:32Z",
          "updated_at": "2024-05-17T13:01:32Z",
          "author_association": "MEMBER",
          "body": "> I'm not sure what you mean by that, I don't think we can, because Options.pk refers to the field, while Options.primary_key is the list of field names.\r\n\r\nYou're completely right. In this case is `pk` set to `CompositePrimaryKey` when `Meta.primary_key` is defined and is `primary_key` set when a non-composite primary is used as well?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2117555406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2120747811",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2120747811",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2120747811,
          "node_id": "IC_kwDOAD-Lgs5-aAsj",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-20T16:01:58Z",
          "updated_at": "2024-05-20T16:02:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > I'm not sure what you mean by that, I don't think we can, because Options.pk refers to the field, while Options.primary_key is the list of field names.\r\n> \r\n> You're completely right. In this case is `pk` set to `CompositePrimaryKey` when `Meta.primary_key` is defined and is `primary_key` set when a non-composite primary is used as well?\r\n\r\nIt would not be set, if it's a regular primary key, `Meta.primary_key` is `None`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2120747811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2158820017",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2158820017",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2158820017,
          "node_id": "IC_kwDOAD-Lgs6ArPqx",
          "user": {
            "login": "omerfarukabaci",
            "id": 24718583,
            "node_id": "MDQ6VXNlcjI0NzE4NTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24718583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omerfarukabaci",
            "html_url": "https://github.com/omerfarukabaci",
            "followers_url": "https://api.github.com/users/omerfarukabaci/followers",
            "following_url": "https://api.github.com/users/omerfarukabaci/following{/other_user}",
            "gists_url": "https://api.github.com/users/omerfarukabaci/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omerfarukabaci/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omerfarukabaci/subscriptions",
            "organizations_url": "https://api.github.com/users/omerfarukabaci/orgs",
            "repos_url": "https://api.github.com/users/omerfarukabaci/repos",
            "events_url": "https://api.github.com/users/omerfarukabaci/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omerfarukabaci/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-10T16:27:27Z",
          "updated_at": "2024-06-10T16:28:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @csirmazbendeguz, thank you for the amazing work out there! I was trying to test this branch on my local with SQLite and realised a few things:\r\n\r\n1. If you run `makemigrations` for a model with a `CompositePrimaryKey`, the resulting migration file has erroneous imports. To fix this, I believe we need to add `django.db.models.fields.composite` path to the `if...elif` block [here](https://github.com/django/django/blob/main/django/db/models/fields/__init__.py#L645).\r\n2. Assume that I have the following models:\r\n\r\n    ```py\r\n    class Author(models.Model):\r\n    name = models.CharField(max_length=100)\r\n\r\n    class Book(models.Model):\r\n        id = models.CompositePrimaryKey(\"author\", \"title\")\r\n        author = models.ForeignKey(Author, on_delete=models.CASCADE, related_name=\"books\")\r\n        title = models.CharField(max_length=255)\r\n    ```\r\n\r\n    With the current implementation, following test fails:\r\n    ```py\r\n    class TestCompositeFks(TestCase):\r\n        def test_composite_fks(self):\r\n            author = Author.objects.create(name=\"Author\")\r\n            book = Book.objects.create(author=author, title=\"Title\")\r\n            list(Author.objects.filter(books__in=[book])) == book\r\n    ```\r\n    with an `OperationalError`, caused by a syntax error. Executed SQL is as following:\r\n    ```SQL\r\n    SELECT\r\n        \"books_author\".\"id\",\r\n        \"books_author\".\"name\"\r\n    FROM\r\n        \"books_author\"\r\n        INNER JOIN \"books_book\" ON (\"books_author\".\"id\" = \"books_book\".\"author_id\")\r\n    WHERE\r\n        \"books_book\".\"author_id\", \"books_book\".\"title\" IN ((1, 'Title'))\r\n    ```\r\n    because LHS in WHERE clause should have been wrapped with parantheses like this:\r\n    ```SQL\r\n    ...\r\n    WHERE\r\n        (\"books_book\".\"author_id\", \"books_book\".\"title\") IN ((1, 'Title'))\r\n    ```\r\n    Unfortunately I didn't have a time to deep-dive to this.\r\n3. Not a big issue but my code editor (VSCode) does not recognize `models.CompositePrimaryKey`, although the import is working fine. This is probably related with Pylance or something that VSCode uses to recognize fields under `models` module.\r\n\r\nAgain thanks for this amazing initiative! \ud83d\ude80 ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2158820017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2158947961",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2158947961",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2158947961,
          "node_id": "IC_kwDOAD-Lgs6Aru55",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-10T17:42:49Z",
          "updated_at": "2024-06-10T17:42:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks a lot for the review @omerfarukabaci ! I'll take a look",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2158947961/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2159865861",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2159865861",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2159865861,
          "node_id": "IC_kwDOAD-Lgs6AvPAF",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-11T06:04:55Z",
          "updated_at": "2024-06-11T06:10:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Author.objects.filter(books__in=[book])\r\n\r\n@omerfarukabaci , I pushed the changes to support this, but note that filtering on reverse relations is one of those \"gotchas\" in Django, it may not produce the results you expect.\r\n\r\n_EDIT: I mean it might return duplicates, you probably already know this, I'm just mentioning it just in case._",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2159865861/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2160236966",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2160236966",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2160236966,
          "node_id": "IC_kwDOAD-Lgs6Awpmm",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-11T09:27:49Z",
          "updated_at": "2024-06-11T09:27:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "> If you run makemigrations for a model with a CompositePrimaryKey, the resulting migration file has erroneous imports\r\n\r\nYes, I recently changed the API to `CompositePrimaryKey`, the migrations are not 100% yet. I'm working on sorting them out.\r\nI pushed the fix for the issue you mentioned, thanks \ud83d\udc4d ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2160236966/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2160843946",
          "html_url": "https://github.com/django/django/pull/18056#issuecomment-2160843946",
          "issue_url": "https://api.github.com/repos/django/django/issues/18056",
          "id": 2160843946,
          "node_id": "IC_kwDOAD-Lgs6Ay9yq",
          "user": {
            "login": "omerfarukabaci",
            "id": 24718583,
            "node_id": "MDQ6VXNlcjI0NzE4NTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24718583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omerfarukabaci",
            "html_url": "https://github.com/omerfarukabaci",
            "followers_url": "https://api.github.com/users/omerfarukabaci/followers",
            "following_url": "https://api.github.com/users/omerfarukabaci/following{/other_user}",
            "gists_url": "https://api.github.com/users/omerfarukabaci/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omerfarukabaci/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omerfarukabaci/subscriptions",
            "organizations_url": "https://api.github.com/users/omerfarukabaci/orgs",
            "repos_url": "https://api.github.com/users/omerfarukabaci/repos",
            "events_url": "https://api.github.com/users/omerfarukabaci/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omerfarukabaci/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-11T14:00:13Z",
          "updated_at": "2024-06-11T14:00:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "@csirmazbendeguz Thanks for your answers, now the above issues seem like fixed, created migration is correct and reverse relation lookup is working as expected. Thank you! \ud83d\ude80\r\n\r\nWhile I was testing it further with the exact [same models](https://github.com/django/django/pull/18056#issuecomment-2158820017), I realized another issue:\r\n\r\n```py\r\nclass TestCompositeFks(TestCase):\r\n    def test_composite_fks(self):\r\n        author = Author.objects.create(name=\"Author\")\r\n        Book.objects.create(author=author, title=\"Title\")\r\n        author = Author.objects.annotate(book_count=Count(\"books\")).get()\r\n        assert author.book_count == 1\r\n```\r\n\r\nThis test fails with the following error:\r\n\r\n```\r\ndjango.db.utils.OperationalError: wrong number of arguments to function COUNT()\r\n```\r\n\r\nExecuted SQL is as following:\r\n\r\n```SQL\r\nSELECT\r\n    \"books_author\".\"id\",\r\n    \"books_author\".\"name\",\r\n    COUNT(\"books_book\".\"author_id\", \"books_book\".\"title\") AS \"book_count\"\r\nFROM\r\n    \"books_author\"\r\n    LEFT OUTER JOIN \"books_book\" ON (\"books_author\".\"id\" = \"books_book\".\"author_id\")\r\nGROUP BY\r\n    \"books_author\".\"id\",\r\n    \"books_author\".\"name\"\r\n```\r\n\r\nIf we could change the parameter we pass to the `COUNT` function to a concatenation as below:\r\n\r\n```SQL\r\nCOUNT(\"books_book\".\"author_id\" || '-' || \"books_book\".\"title\")\r\n```\r\n\r\nit should work fine (if I am not missing something), with the exception that for some databases we need to use `CONCAT` function instead of `||` operator, which might be resolved using the existing `db.models.functions.Concat` function.\r\n\r\nNote: I am not sure if concatenation works between every data type that is allowed to be a primary key, although this could be considered as an edge case.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2160843946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/3114",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/3114/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/3114/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/3114/events",
      "html_url": "https://github.com/django/django/pull/3114",
      "id": 41011275,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyMjA1Njk=",
      "number": 3114,
      "title": "[Soc2014] Official meta API",
      "user": {
        "login": "PirosB3",
        "id": 847179,
        "node_id": "MDQ6VXNlcjg0NzE3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PirosB3",
        "html_url": "https://github.com/PirosB3",
        "followers_url": "https://api.github.com/users/PirosB3/followers",
        "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
        "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
        "organizations_url": "https://api.github.com/users/PirosB3/orgs",
        "repos_url": "https://api.github.com/users/PirosB3/repos",
        "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
        "received_events_url": "https://api.github.com/users/PirosB3/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 79,
      "created_at": "2014-08-24T15:04:36Z",
      "updated_at": "2015-01-07T00:59:49Z",
      "closed_at": "2015-01-07T00:59:49Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/3114",
        "html_url": "https://github.com/django/django/pull/3114",
        "diff_url": "https://github.com/django/django/pull/3114.diff",
        "patch_url": "https://github.com/django/django/pull/3114.patch",
        "merged_at": null
      },
      "body": "",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/3114/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/3114/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/54512777",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-54512777",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 54512777,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTEyNzc3",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-09-04T17:19:45Z",
          "updated_at": "2014-09-04T17:19:45Z",
          "author_association": "MEMBER",
          "body": "Here are some docs edits: http://dpaste.com/1X0TZB4\nLet me know if any changes look questionable.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/54512777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/54639644",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-54639644",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 54639644,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjM5NjQ0",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-09-05T15:24:56Z",
          "updated_at": "2014-09-05T15:24:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @timgraham thank you so much for the doc edits! I will have a look at them now.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/54639644/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/55829765",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-55829765",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 55829765,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI5NzY1",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-09-16T23:36:39Z",
          "updated_at": "2014-09-16T23:36:39Z",
          "author_association": "MEMBER",
          "body": "Daniel, I'd recommend to finish the docs and then I'll do another review. After that, we can put out a call for anyone else who wants to do a final review. We still have time before 1.8 feature freeze to make changes as needed after merge, but this way you won't have to keep resolving conflicts due to changes in master.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/55829765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/55884991",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-55884991",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 55884991,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODg0OTkx",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-09-17T12:17:20Z",
          "updated_at": "2014-09-17T12:17:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "Sounds great. I don't have access to a computer this week but will re-write\nall the docs as soon as I come back home.\n\nOn Wednesday, September 17, 2014, Tim Graham notifications@github.com\nwrote:\n\n> Daniel, I'd recommend to finish the docs and then I'll do another review.\n> After that, we can put out a call for anyone else who wants to do a final\n> review. We still have time before 1.8 feature freeze to make changes as\n> needed after merge, but this way you won't have to keep resolving conflicts\n> due to changes in master.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/django/django/pull/3114#issuecomment-55829765.\n\n## \n\n---\n\nPirosB3\n\nhttps://github.com/PirosB3\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/55884991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57105188",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57105188",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57105188,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTA1MTg4",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-09-28T23:53:21Z",
          "updated_at": "2014-09-28T23:53:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham @freakboy3742 I have done pull from master, and now I am finishing up the docs. I expect this to be all complete in the next 2 days. Then we can do a final review \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57105188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57507868",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57507868",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57507868,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTA3ODY4",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-01T17:58:34Z",
          "updated_at": "2014-10-01T17:58:34Z",
          "author_association": "MEMBER",
          "body": "I ran into this issue using the code from the tutorial:\n\n```\n$ python manage.py shell\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/tim/code/django/django/core/management/__init__.py\", line 336, in execute_from_command_line\n    utility.execute()\n  File \"/home/tim/code/django/django/core/management/__init__.py\", line 310, in execute\n    django.setup()\n  File \"/home/tim/code/django/django/__init__.py\", line 23, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/home/tim/code/django/django/apps/registry.py\", line 115, in populate\n    app_config.ready()\n  File \"/home/tim/code/django/django/contrib/admin/apps.py\", line 22, in ready\n    self.module.autodiscover()\n  File \"/home/tim/code/django/django/contrib/admin/__init__.py\", line 24, in autodiscover\n    autodiscover_modules('admin', register_to=site)\n  File \"/home/tim/code/django/django/utils/module_loading.py\", line 73, in autodiscover_modules\n    import_module('%s.%s' % (app_config.name, module_to_search))\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/home/tim/code/django/django/contrib/auth/admin.py\", line 182, in <module>\n    admin.site.register(Group, GroupAdmin)\n  File \"/home/tim/code/django/django/contrib/admin/sites.py\", line 101, in register\n    admin_class.check(model)\n  File \"/home/tim/code/django/django/contrib/admin/options.py\", line 149, in check\n    return cls.checks_class().check(cls, model, **kwargs)\n  File \"/home/tim/code/django/django/contrib/admin/checks.py\", line 492, in check\n    errors = super(ModelAdminChecks, self).check(cls, model=model, **kwargs)\n  File \"/home/tim/code/django/django/contrib/admin/checks.py\", line 32, in check\n    errors.extend(self._check_filter_horizontal(cls, model))\n  File \"/home/tim/code/django/django/contrib/admin/checks.py\", line 245, in _check_filter_horizontal\n    for index, field_name in enumerate(cls.filter_horizontal)\n  File \"/home/tim/code/django/django/contrib/admin/checks.py\", line 253, in _check_filter_item\n    field = model._meta.get_field(field_name)\n  File \"/home/tim/code/django/django/db/models/options.py\", line 434, in get_field\n    \"The Apps registry is still not ready, this means get_field() is not able \"\ndjango.core.exceptions.AppRegistryNotReady: The Apps registry is still not ready, this means get_field() is not able to find related objects that point to this model.\n```\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57507868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57509735",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57509735",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57509735,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTA5NzM1",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-01T18:11:17Z",
          "updated_at": "2014-10-01T18:11:17Z",
          "author_association": "MEMBER",
          "body": "There is still some usage of `get_field_by_name()` and other deprecated APIs in the tests. Run the tests with `python -Wall runtests.py` and ensure there are no errors.\n\nThere are also a fair number of flake8 errors -- some appear not related to your changes, but rather like you haven't merged in some commits from master. I think you could probably rebase and squash most of the commits now.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57509735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57612835",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57612835",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57612835,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjEyODM1",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-02T11:05:07Z",
          "updated_at": "2014-10-02T11:05:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham \nRE \"I ran into this issue using the code from the tutorial: ....\"\nTotally right, I added a fix for it, currently running unit tests. It looks like some admin checks are happening prior to the apps registry being ready. This should never happen actually, so I added a fix for it.\nI'll let you know once all tests pass with -Wall\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57612835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57657255",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57657255",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57657255,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjU3MjU1",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-02T16:31:27Z",
          "updated_at": "2014-10-02T16:31:27Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham I have just pushed the last changes with your comments fixed.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57657255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57789898",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57789898",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57789898,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzg5ODk4",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-03T12:27:34Z",
          "updated_at": "2014-10-03T12:27:34Z",
          "author_association": "MEMBER",
          "body": "There are still many flake8 errors on your branch aren't there? This is what I see:\n\n```\n./django/db/models/manager.py:6:1: F401 'FieldDoesNotExist' imported but unused\n./django/db/models/options.py:13:1: F401 'Field' imported but unused\n./django/db/models/options.py:500:17: E126 continuation line over-indented for hanging indent\n./django/db/models/base.py:1420:9: F401 'FieldDoesNotExist' imported but unused\n./django/db/models/fields/__init__.py:45:1: E302 expected 2 blank lines, found 1\n./django/contrib/contenttypes/fields.py:41:15: W291 trailing whitespace\n./django/contrib/admin/utils.py:462:1: E302 expected 2 blank lines, found 1\n./django/contrib/admin/utils.py:481:1: E302 expected 2 blank lines, found 1\n./tests/prefetch_related/tests.py:723:45: E127 continuation line over-indented for visual indent\n./tests/apps/tests.py:18:1: F401 'AbstractPerson' imported but unused\n./tests/apps/tests.py:18:1: F401 'BasePerson' imported but unused\n./tests/apps/tests.py:18:1: F401 'Relation' imported but unused\n./tests/apps/tests.py:18:1: F401 'new_apps_2' imported but unused\n./tests/test_client_regress/tests.py:997:31: E127 continuation line over-indented for visual indent\n./tests/introspection/tests.py:133:18: E127 continuation line over-indented for visual indent\n```\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57789898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/57790844",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-57790844",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 57790844,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzkwODQ0",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-03T12:33:36Z",
          "updated_at": "2014-10-03T12:33:36Z",
          "author_association": "MEMBER",
          "body": "@aaugustin - do you know if admin checks happening prior to the app registry being ready is expected? see https://github.com/django/django/pull/3114#issuecomment-57612835. Seems suspicious to me and the workaround adds more code which isn't ideal: 3a6a7131e020b49ae3c030adddf320b32d43f3a8.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/57790844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/58479690",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-58479690",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 58479690,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDc5Njkw",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-09T08:45:38Z",
          "updated_at": "2014-10-09T08:45:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/58479690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/58516555",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-58516555",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 58516555,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTE2NTU1",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-09T14:23:00Z",
          "updated_at": "2014-10-09T14:23:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, retest this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/58516555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/58678275",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-58678275",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 58678275,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc4Mjc1",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-10T16:14:46Z",
          "updated_at": "2014-10-10T16:14:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "@freakboy3742 @timgraham Latest fixes (documentation + style + implementation) have been pushed. I'm ready for a further review\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/58678275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/59081121",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-59081121",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 59081121,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDgxMTIx",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-14T17:11:39Z",
          "updated_at": "2014-10-14T17:11:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, retest this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/59081121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/59081228",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-59081228",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 59081228,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDgxMjI4",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-14T17:12:20Z",
          "updated_at": "2014-10-14T17:12:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "@collinanderson did the last fixes we spoke about, can you give me another rev?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/59081228/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/59087961",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-59087961",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 59087961,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDg3OTYx",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-14T17:55:50Z",
          "updated_at": "2014-10-14T17:55:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@PirosB3 It looks like most of comments on the PR have now been addressed.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/59087961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/59174071",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-59174071",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 59174071,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTc0MDcx",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-15T08:36:33Z",
          "updated_at": "2014-10-15T08:36:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @collinanderson \nLooking forward to hear comments from @timgraham @freakboy3742\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/59174071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/59275734",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-59275734",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 59275734,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjc1NzM0",
          "user": {
            "login": "aaugustin",
            "id": 788910,
            "node_id": "MDQ6VXNlcjc4ODkxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/788910?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaugustin",
            "html_url": "https://github.com/aaugustin",
            "followers_url": "https://api.github.com/users/aaugustin/followers",
            "following_url": "https://api.github.com/users/aaugustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaugustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaugustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaugustin/subscriptions",
            "organizations_url": "https://api.github.com/users/aaugustin/orgs",
            "repos_url": "https://api.github.com/users/aaugustin/repos",
            "events_url": "https://api.github.com/users/aaugustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaugustin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-15T21:02:42Z",
          "updated_at": "2014-10-15T21:02:42Z",
          "author_association": "MEMBER",
          "body": "@timgraham To me it looks like the admin checks should be triggered from `AdminAppConfig.ready()`.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/59275734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/59899528",
          "html_url": "https://github.com/django/django/pull/3114#issuecomment-59899528",
          "issue_url": "https://api.github.com/repos/django/django/issues/3114",
          "id": 59899528,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODk5NTI4",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-10-21T09:10:23Z",
          "updated_at": "2014-10-21T09:10:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "# Further API change\n\n### Properties changes\n- many_to_many becomes _many_to_many and is only used internally, as there should be no more external distinction between m2m and forward fields\n- fields, concrete_fields, local_concrete_fields become all internal, (with a _ before and not documented) , as there should be no more external distinction between m2m and forward fields\n- related_objects become reverse_fields, in order to keep the same name convention\n- we add another property called \"forward_fields\"\n- make get_fields() internal, but we don't change the endpoint name for legacy reasons (there was already a get_fields())\n\n### Final _meta API\n- field_names => [\"name\", \"surname\", ...]\n- get_field(field_name) => FieldInstance\n- forward_fields => [FieldInstance, FieldInstance, FieldInstance, .. ]\n- reverse_fields => [FieldInstance, FieldInstance, FieldInstance, .. ]\n\n### Final internal _meta API\n- _fields => [FieldInstance, FieldInstance, FieldInstance, .. ]\n- _concrete_fields => [FieldInstance, FieldInstance, FieldInstance, .. ]\n- _local_concrete_fields => [FieldInstance, FieldInstance, FieldInstance, .. ]\n- _many_to_many => [FieldInstance, FieldInstance, FieldInstance, .. ]\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/59899528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/6385",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/6385/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/6385/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/6385/events",
      "html_url": "https://github.com/django/django/pull/6385",
      "id": 145430457,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjUwNTM1MzQ=",
      "number": 6385,
      "title": "Fixed #14370 -- Added select2 widget for related object fields in admin.",
      "user": {
        "login": "codingjoe",
        "id": 1772890,
        "node_id": "MDQ6VXNlcjE3NzI4OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codingjoe",
        "html_url": "https://github.com/codingjoe",
        "followers_url": "https://api.github.com/users/codingjoe/followers",
        "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
        "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
        "organizations_url": "https://api.github.com/users/codingjoe/orgs",
        "repos_url": "https://api.github.com/users/codingjoe/repos",
        "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/codingjoe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 136,
      "created_at": "2016-04-02T23:27:18Z",
      "updated_at": "2018-06-19T13:08:29Z",
      "closed_at": "2017-09-18T18:04:01Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/6385",
        "html_url": "https://github.com/django/django/pull/6385",
        "diff_url": "https://github.com/django/django/pull/6385.diff",
        "patch_url": "https://github.com/django/django/pull/6385.patch",
        "merged_at": "2017-09-18T18:04:01Z"
      },
      "body": "Adds jQuery Select2 version 4 to support async select inputs\r\nincluding a search feature.\r\n\r\n**I split the PR in two commits, one is vendoring select2, one contains my code.**\r\n\r\n### Links & Discussions\r\n* [djangoproject#14370](https://code.djangoproject.com/ticket/14370)\r\n* https://groups.google.com/forum/#!topic/django-developers/tCNWnLP8jzM\r\n* https://groups.google.com/forum/#!topic/django-developers/Ip63Xqw01IA/discussion\r\n* https://groups.google.com/forum/#!topic/django-developers/jGgZngTq3Gw/discussion\r\n\r\n### Changes:\r\n- ~~jQuery noConflict is set to false, jQuery itself does not get removed form global~~\r\n- ~~the new select2 widget is automatically used if the related object\r\n  has a registered admin and defines search fields~~\r\n- only str representation is supported at this point\r\n- the search feature uses the same field as the model admin\r\n### Todo:\r\n- [x] ~~Possible deprecation of raw_id field?~~\r\n- [x] Release note. (Which release?)\r\n- [x] Selenium integration tests\r\n- [x] widget tests\r\n- [x] pagingnator and page tests\r\n- [x] view tests\r\n- [x] admin_site integration tests\r\n- [x] add `MODEL_change` permission to json view\r\n- [x] [system checks](https://docs.djangoproject.com/en/1.9/ref/checks/#admin)\r\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/6385/reactions",
        "total_count": 31,
        "+1": 15,
        "-1": 0,
        "laugh": 2,
        "hooray": 7,
        "confused": 0,
        "heart": 7,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/6385/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/204826391",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-204826391",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 204826391,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDgyNjM5MQ==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-02T23:29:15Z",
          "updated_at": "2016-04-02T23:29:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jpic this is a first draft, I tested it manually, it seems fine\n@timgraham I only added tests for the new json view, I'll add the widget tests in the sprint tomorrow\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/204826391/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/204909227",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-204909227",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 204909227,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkwOTIyNw==",
          "user": {
            "login": "jpic",
            "id": 94636,
            "node_id": "MDQ6VXNlcjk0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/94636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpic",
            "html_url": "https://github.com/jpic",
            "followers_url": "https://api.github.com/users/jpic/followers",
            "following_url": "https://api.github.com/users/jpic/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpic/subscriptions",
            "organizations_url": "https://api.github.com/users/jpic/orgs",
            "repos_url": "https://api.github.com/users/jpic/repos",
            "events_url": "https://api.github.com/users/jpic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-03T08:04:50Z",
          "updated_at": "2016-04-03T08:04:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "Nice !\n\nDid you try it on dynamically added formset rows ?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/204909227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/204920980",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-204920980",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 204920980,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkyMDk4MA==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-03T08:59:00Z",
          "updated_at": "2016-04-03T08:59:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jpic no that can't work yet, but I'm on it today!\nI also got a lot of documentation ahead of me, but it really depends where this is going. I'm gonna talk to a couple of people here about it.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/204920980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/204923008",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-204923008",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 204923008,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkyMzAwOA==",
          "user": {
            "login": "jpic",
            "id": 94636,
            "node_id": "MDQ6VXNlcjk0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/94636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpic",
            "html_url": "https://github.com/jpic",
            "followers_url": "https://api.github.com/users/jpic/followers",
            "following_url": "https://api.github.com/users/jpic/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpic/subscriptions",
            "organizations_url": "https://api.github.com/users/jpic/orgs",
            "repos_url": "https://api.github.com/users/jpic/repos",
            "events_url": "https://api.github.com/users/jpic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-03T09:12:21Z",
          "updated_at": "2016-04-03T09:12:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "@codingjoe we use DOMNodeInserted event for dynamically added selects: https://github.com/yourlabs/django-autocomplete-light/blob/master/src/dal/static/autocomplete_light/autocomplete.init.js#L25-L27\n\nWe also have a really small snippet for option renaming using the edit button which you might like: https://github.com/yourlabs/django-autocomplete-light/blob/master/src/dal_select2/static/autocomplete_light/select2.js#L100-L106\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/204923008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205009383",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205009383",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205009383,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTAwOTM4Mw==",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-03T16:58:05Z",
          "updated_at": "2016-04-03T16:58:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "I might be able to try test this out later this week. Seems to me we should give this a release or two in the real world before deprecating raw_id_fields. Like, make sure it's good enough in practice to replace raw_id_fields.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205009383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205010639",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205010639",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205010639,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTAxMDYzOQ==",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-03T17:08:04Z",
          "updated_at": "2016-04-03T17:12:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "Does `/foreignkey_json/` do permission checks? It seems to me it should require the same permissions as raw_id_fields (so if you're logged in to the admin, you can't just query that table unless you actually have permission, but maybe that's ok)\n\nEdit: Actually, maybe we just need to make sure that you have the change permission for the Model that has the foreign key. That way it follows the permissions of a normal ChoiceField.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205010639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205023309",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205023309",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205023309,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTAyMzMwOQ==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-03T18:05:23Z",
          "updated_at": "2016-04-03T18:05:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "@collinanderson good point, that's what I thought. Lets see how it performs.\nRegarding the permissions, you are correct, the change permission would the right thing to check. I'll put it on my list, thanks!\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205023309/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205150165",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205150165",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205150165,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTE1MDE2NQ==",
          "user": {
            "login": "guettli",
            "id": 414336,
            "node_id": "MDQ6VXNlcjQxNDMzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/414336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guettli",
            "html_url": "https://github.com/guettli",
            "followers_url": "https://api.github.com/users/guettli/followers",
            "following_url": "https://api.github.com/users/guettli/following{/other_user}",
            "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guettli/subscriptions",
            "organizations_url": "https://api.github.com/users/guettli/orgs",
            "repos_url": "https://api.github.com/users/guettli/repos",
            "events_url": "https://api.github.com/users/guettli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guettli/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-04T06:14:23Z",
          "updated_at": "2016-04-04T06:14:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "There is a small typo in the diff of docs/ref/models/fields.txt: you mean `admin` not `admon`.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205150165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205150363",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205150363",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205150363,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTE1MDM2Mw==",
          "user": {
            "login": "guettli",
            "id": 414336,
            "node_id": "MDQ6VXNlcjQxNDMzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/414336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guettli",
            "html_url": "https://github.com/guettli",
            "followers_url": "https://api.github.com/users/guettli/followers",
            "following_url": "https://api.github.com/users/guettli/following{/other_user}",
            "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guettli/subscriptions",
            "organizations_url": "https://api.github.com/users/guettli/orgs",
            "repos_url": "https://api.github.com/users/guettli/repos",
            "events_url": "https://api.github.com/users/guettli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guettli/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-04T06:16:20Z",
          "updated_at": "2016-04-04T06:16:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "@codingjoe  first: Thank you for this great improvement. Next: It would be nice if the autocomplete would be easily re-usable outside the admin, too. Do you plan to support this?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205150363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205357408",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205357408",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205357408,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTM1NzQwOA==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-04T15:42:45Z",
          "updated_at": "2016-04-04T15:42:45Z",
          "author_association": "CONTRIBUTOR",
          "body": "@guettli no, not really. We have `django-select2` and `django-autocomplete-light` for that.\nThe really tricky part is to know which queryset to server as a JSON. `django-select2` solves this by using the cache as a persistent storage shared by all application servers. In `django-autocomplete-light` you'll have to specify that explicitly.\n\nI don't see a way to get this into core. This should remain a admin only feature for now, just like the raw ID field.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205357408/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205845995",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205845995",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205845995,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTg0NTk5NQ==",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-05T14:58:59Z",
          "updated_at": "2016-04-05T14:58:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "@codingjoe btw, at some point we'll need to eventually get django-developers mailing list approval for vendoring select2.\n\nAlso, you've been mentioning raw_id_fields. I'm also hoping we can eventually use select2 to replace filter_horizontal/filter_vertical for m2m's.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205845995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205938324",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205938324",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205938324,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTkzODMyNA==",
          "user": {
            "login": "guettli",
            "id": 414336,
            "node_id": "MDQ6VXNlcjQxNDMzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/414336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guettli",
            "html_url": "https://github.com/guettli",
            "followers_url": "https://api.github.com/users/guettli/followers",
            "following_url": "https://api.github.com/users/guettli/following{/other_user}",
            "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guettli/subscriptions",
            "organizations_url": "https://api.github.com/users/guettli/orgs",
            "repos_url": "https://api.github.com/users/guettli/repos",
            "events_url": "https://api.github.com/users/guettli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guettli/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-05T18:35:59Z",
          "updated_at": "2016-04-05T18:35:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "@codingjoe you said:\n\n> The really tricky part is to know which queryset to server as a JSON\n\nYes, this is true, since the django admin interface needs a generic ajax server part.\n\nBut I still think it would be great to have a autocomplete component in django which can be used in django apps and the django admin.\n\nYou can make a BaseWidget available which gets subclassed once in the admin interface and once for the usage in custom apps.\n\nI like small systems and having select2 twice in my static directory gives me a bad feeling. Yes it works and does not hurt, but somehow I think \"less is more - avoid redundancy\".\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205938324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/205970083",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-205970083",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 205970083,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTk3MDA4Mw==",
          "user": {
            "login": "jpic",
            "id": 94636,
            "node_id": "MDQ6VXNlcjk0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/94636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpic",
            "html_url": "https://github.com/jpic",
            "followers_url": "https://api.github.com/users/jpic/followers",
            "following_url": "https://api.github.com/users/jpic/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpic/subscriptions",
            "organizations_url": "https://api.github.com/users/jpic/orgs",
            "repos_url": "https://api.github.com/users/jpic/repos",
            "events_url": "https://api.github.com/users/jpic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-05T20:02:28Z",
          "updated_at": "2016-04-05T20:02:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "You don't need to have it twice, you can reuse it. For example, this public\nfacing-app reuses admin scripts:\nhttps://github.com/jonashaag/django-addanother/blob/master/django_addanother/widgets.py#L44-L52\n\nCorrect me if I'm wrong but the idea here is to first incorporate\nautocompletion in the admin first and then perhaps extract it into\ndjango.forms.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/205970083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/206271424",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-206271424",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 206271424,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjI3MTQyNA==",
          "user": {
            "login": "guettli",
            "id": 414336,
            "node_id": "MDQ6VXNlcjQxNDMzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/414336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guettli",
            "html_url": "https://github.com/guettli",
            "followers_url": "https://api.github.com/users/guettli/followers",
            "following_url": "https://api.github.com/users/guettli/following{/other_user}",
            "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guettli/subscriptions",
            "organizations_url": "https://api.github.com/users/guettli/orgs",
            "repos_url": "https://api.github.com/users/guettli/repos",
            "events_url": "https://api.github.com/users/guettli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guettli/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-06T09:55:03Z",
          "updated_at": "2016-04-06T09:55:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jpic  nice to hear, that you want it in django.forms, too.\n\nI just ask myself if this is the best order for the steps for the implementation:\n1. in admin\n2. then in django.forms.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/206271424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/206341167",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-206341167",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 206341167,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjM0MTE2Nw==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-06T12:04:42Z",
          "updated_at": "2016-04-06T12:05:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@guettli @jpic I'd like to end the discussion about a feature beyond Django admin at this point. Please submit another ticket for that, it's beyond the scope of the current ticket and seems to need a longer discussion.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/206341167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/206341842",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-206341842",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 206341842,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjM0MTg0Mg==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-06T12:06:34Z",
          "updated_at": "2016-04-06T12:06:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "@collinanderson I'm not familiar with that process, can you help me out here?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/206341842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/206353424",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-206353424",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 206353424,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjM1MzQyNA==",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-06T12:45:22Z",
          "updated_at": "2016-04-06T12:45:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yeah, I also agree adding generally to forms is a lot more work, and it's something we could maybe do down the road. I think the next set is to run this all by django-developer's mailing list. Though maybe we should wait til the vendoring/dependency discussion plays out first. https://groups.google.com/d/topic/django-developers/Ip63Xqw01IA/discussion \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/206353424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/206371173",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-206371173",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 206371173,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjM3MTE3Mw==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-06T13:25:46Z",
          "updated_at": "2016-04-06T13:25:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "@collinanderson we'll need to vendor select2 anyways, it can't be a dependency for the sake of offline development and I had to manually add a wrapper to support the jQuery's `noConflict`.\n[I posted into the mailing list.](https://groups.google.com/forum/#!topic/django-developers/tCNWnLP8jzM)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/206371173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/206979940",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-206979940",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 206979940,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjk3OTk0MA==",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-07T16:24:08Z",
          "updated_at": "2016-04-07T16:24:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "I was able to try out a little and added some notes. Super cool. :)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/206979940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/207441449",
          "html_url": "https://github.com/django/django/pull/6385#issuecomment-207441449",
          "issue_url": "https://api.github.com/repos/django/django/issues/6385",
          "id": 207441449,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzQ0MTQ0OQ==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-08T13:54:39Z",
          "updated_at": "2016-04-08T13:54:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "@kevin-brown thanks for the review, good the have some feedback form a select2 dev\n@collinanderson thanks to you too of course :)\nI'll try to get your these changes in this weekend and add some of the tests that I'm still missing.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/207441449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/376",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/376/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/376/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/376/events",
      "html_url": "https://github.com/django/django/pull/376",
      "id": 6935776,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjM2NzU1MQ==",
      "number": 376,
      "title": "Schema alteration",
      "user": {
        "login": "andrewgodwin",
        "id": 36182,
        "node_id": "MDQ6VXNlcjM2MTgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewgodwin",
        "html_url": "https://github.com/andrewgodwin",
        "followers_url": "https://api.github.com/users/andrewgodwin/followers",
        "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
        "repos_url": "https://api.github.com/users/andrewgodwin/repos",
        "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 18,
      "created_at": "2012-09-17T23:10:33Z",
      "updated_at": "2022-02-25T08:00:59Z",
      "closed_at": "2013-08-23T11:41:23Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/376",
        "html_url": "https://github.com/django/django/pull/376",
        "diff_url": "https://github.com/django/django/pull/376.diff",
        "patch_url": "https://github.com/django/django/pull/376.patch",
        "merged_at": "2013-08-23T11:41:23Z"
      },
      "body": "To accompany the mailing list thread here: https://groups.google.com/forum/?fromgroups=#!topic/django-developers/esCFLLXwIOY\n",
      "closed_by": {
        "login": "mjtamlyn",
        "id": 389581,
        "node_id": "MDQ6VXNlcjM4OTU4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/389581?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjtamlyn",
        "html_url": "https://github.com/mjtamlyn",
        "followers_url": "https://api.github.com/users/mjtamlyn/followers",
        "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}",
        "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions",
        "organizations_url": "https://api.github.com/users/mjtamlyn/orgs",
        "repos_url": "https://api.github.com/users/mjtamlyn/repos",
        "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mjtamlyn/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/376/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/376/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/9347516",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-9347516",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 9347516,
          "node_id": "MDEyOklzc3VlQ29tbWVudDkzNDc1MTY=",
          "user": {
            "login": "ptone",
            "id": 40845,
            "node_id": "MDQ6VXNlcjQwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ptone",
            "html_url": "https://github.com/ptone",
            "followers_url": "https://api.github.com/users/ptone/followers",
            "following_url": "https://api.github.com/users/ptone/following{/other_user}",
            "gists_url": "https://api.github.com/users/ptone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ptone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ptone/subscriptions",
            "organizations_url": "https://api.github.com/users/ptone/orgs",
            "repos_url": "https://api.github.com/users/ptone/repos",
            "events_url": "https://api.github.com/users/ptone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ptone/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2012-10-11T16:34:17Z",
          "updated_at": "2012-10-11T16:34:17Z",
          "author_association": "MEMBER",
          "body": "Andrew - it's occurred to me that this may not address the situation when someone starts a project then switches to a swapped user model - I am **NOT** talking about the data migration fore user data (people are own for that) - but raising the issue of what, if anything, needs to be done when a model._meta.swapped goes from False to True from one migration to the next.\n\nNot really being familiar with the core approach here, I don't even know if anything needs to be done, just realizing that this was probably developed before _meta.swapped was introduced and pointing that out. cc @freakboy3742 \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/9347516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/9362045",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-9362045",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 9362045,
          "node_id": "MDEyOklzc3VlQ29tbWVudDkzNjIwNDU=",
          "user": {
            "login": "freakboy3742",
            "id": 37345,
            "node_id": "MDQ6VXNlcjM3MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freakboy3742",
            "html_url": "https://github.com/freakboy3742",
            "followers_url": "https://api.github.com/users/freakboy3742/followers",
            "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
            "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
            "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
            "repos_url": "https://api.github.com/users/freakboy3742/repos",
            "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2012-10-11T23:34:17Z",
          "updated_at": "2012-10-11T23:34:17Z",
          "author_association": "MEMBER",
          "body": "@ptone - @andrewgodwin is at least peripherally aware of the problem; I've already raised a bug on South's tracker about integration with AUTH_USER_MODEL. \n\nFully swapping the User model is a bit of a nightmare; On the South ticket, I suggested that a perfectly acceptable first pass is to disallow this - i.e., initial sync records the AUTH_USER_MODEL in use, and future migrations won't allow it to be changed. This is what we suggest in the docs anyway, so I don't see any problem with enforcing it.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/9362045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/9368146",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-9368146",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 9368146,
          "node_id": "MDEyOklzc3VlQ29tbWVudDkzNjgxNDY=",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2012-10-12T07:02:51Z",
          "updated_at": "2012-10-12T07:02:51Z",
          "author_association": "MEMBER",
          "body": "Yes, Russ has filed this in the South tracker already and I've not been able to take a good look at it yet. I suspect the first pass will be that we just moan, though I'd like to do something more intelligent (spit out a skeleton migration for swapping the tables out and preserving data, and letting them finish it off, perhaps).\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/9368146/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22407819",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22407819",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22407819,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA3ODE5",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-09T16:47:20Z",
          "updated_at": "2013-08-09T16:48:41Z",
          "author_association": "MEMBER",
          "body": "I just created a migration and the file shows:\n\n```\n    dependencies = [(u'testb', '0001_initial')]\n```\n\n-- That doesn't work on 3.2, you might also want to import unicode_literals, depending on whether you want text or bytes for everything.\n\nEDIT:// The fields also have unicode markers from time to time:\n\n```\n            fields = [(u'id', models.AutoField(verbose_name=u'ID', serialize=False, auto_created=True, primary_key=True),), ('char', models.CharField(max_length=256),), ('fk', models.ForeignKey(to=u'testb.TestB', to_field=u'id'),)],\n```\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22407819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22408024",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22408024",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22408024,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA4MDI0",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-09T16:50:50Z",
          "updated_at": "2013-08-09T16:50:50Z",
          "author_association": "MEMBER",
          "body": "Is there any way to not get asked everytime if you want to enable migrations for an app? \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22408024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22408187",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22408187",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22408187,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA4MTg3",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-09T16:53:29Z",
          "updated_at": "2013-08-09T16:53:29Z",
          "author_association": "MEMBER",
          "body": "I get migrations which are getting unapplied without me asking for it:\n\n```\nflorian@apollo13:~/.virtualenvs/522125f0c8c708a8/migrationtest$ ./manage.py migrate\nOperations to perform:\n  Synchronize unmigrated apps: sessions, admin, messages, testc, auth, staticfiles, contenttypes\n  Apply all migrations: testa, testb\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_admin_log\n    Creating table auth_permission\n    Creating table auth_group_permissions\n    Creating table auth_group\n    Creating table auth_user_groups\n    Creating table auth_user_user_permissions\n    Creating table auth_user\n    Creating table django_content_type\n    Creating table django_session\n    Creating table testc_test\n  Installing custom SQL...\n  Installing indexes...\nInstalled 0 object(s) from 0 fixture(s)\nRunning migrations:\n  Applying testb.0001_initial... OK\n  Applying testa.0001_initial... OK\n  Applying testa.0002_auto... OK\n  Unapplying testa.0002_auto... OK\n  Unapplying testa.0001_initial... OK\n\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): no\nflorian@apollo13:~/.virtualenvs/522125f0c8c708a8/migrationtest$ ./manage.py migrate\nOperations to perform:\n  Synchronize unmigrated apps: sessions, admin, messages, testc, auth, staticfiles, contenttypes\n  Apply all migrations: testa, testb\nSynchronizing apps without migrations:\n  Creating tables...\n  Installing custom SQL...\n  Installing indexes...\nInstalled 0 object(s) from 0 fixture(s)\nRunning migrations:\n  Applying testa.0001_initial... OK\n  Applying testa.0002_auto... OK\n  Unapplying testa.0002_auto... OK\n  Unapplying testa.0001_initial... OK\n```\n\nPing me in IRC if you need details.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22408187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22408363",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22408363",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22408363,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA4MzYz",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-09T16:56:41Z",
          "updated_at": "2013-08-09T16:56:41Z",
          "author_association": "MEMBER",
          "body": "@apollo13 That's weird, I'll look into it.\n\nAs for the asking every time, that's something that still needs to be resolved (current solution works, but is REALLY ANNOYING). The proposal I like most is having them enabled in the new app template, and then having this just assume they're disabled unless migrations directory is present.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22408363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22408815",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22408815",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22408815,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA4ODE1",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-09T17:03:59Z",
          "updated_at": "2013-08-09T17:03:59Z",
          "author_association": "MEMBER",
          "body": "@andrewgodwin more details (from irc):\n\n```\n<apollo13> andrewgodwin: are you around? testa has a fk to testb, testb changes are \"stable\" so to say\n<apollo13> andrewgodwin: also, since django itself asks \"Would you like to create one now? (yes/no): no\"  -- we might wanna change [y/n] to stay consistent? [sry]\n```\n\nand migrating manually works:\n\n```\nflorian@apollo13:~/.virtualenvs/522125f0c8c708a8/migrationtest$ ./manage.py migrate testa 0001_initial\nOperations to perform:\n  Target specific migration: 0001_initial, from testa\nRunning migrations:\n  Applying testa.0001_initial... OK\n```\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22408815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22408889",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22408889",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22408889,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA4ODg5",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-09T17:05:20Z",
          "updated_at": "2013-08-09T17:05:20Z",
          "author_association": "MEMBER",
          "body": "Trying to migrate apps not in INSTALLED_APPS shows a confusing error:\n\n```\nflorian@apollo13:~/.virtualenvs/522125f0c8c708a8/migrationtest$ ./manage.py migrate fsdgdshdsfdsgdfshgds 0001_initial\nCommandError: App 'fsdgdshdsfdsgdfshgds' does not have migrations (you cannot selectively sync unmigrated apps)\n```\n\nSomething like \"this app doesn't exist\" would be better.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22408889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22446880",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-22446880",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 22446880,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDQ2ODgw",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-10T20:35:26Z",
          "updated_at": "2013-08-10T20:35:26Z",
          "author_association": "MEMBER",
          "body": "Almost none of the new files import unicode_literals (and many of the files have string literals).\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22446880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23139130",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23139130",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23139130,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTM5MTMw",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-23T02:02:02Z",
          "updated_at": "2013-08-23T02:02:02Z",
          "author_association": "MEMBER",
          "body": "I see different failures from what you described in the ML, and even more failures if I run just the tests for migrations and schema; I'm pretty sure several tests here depend on operations performed in other tests. This probably applies mostly to database systems which do not support transactional DDL, like Oracle and MySQL.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23139130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23158457",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23158457",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23158457,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTU4NDU3",
          "user": {
            "login": "mjtamlyn",
            "id": 389581,
            "node_id": "MDQ6VXNlcjM4OTU4MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/389581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjtamlyn",
            "html_url": "https://github.com/mjtamlyn",
            "followers_url": "https://api.github.com/users/mjtamlyn/followers",
            "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions",
            "organizations_url": "https://api.github.com/users/mjtamlyn/orgs",
            "repos_url": "https://api.github.com/users/mjtamlyn/repos",
            "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjtamlyn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-23T11:41:38Z",
          "updated_at": "2013-08-23T11:41:38Z",
          "author_association": "MEMBER",
          "body": ":sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23158457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23159053",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23159053",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23159053,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTU5MDUz",
          "user": {
            "login": "bradwright",
            "id": 1516,
            "node_id": "MDQ6VXNlcjE1MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1516?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradwright",
            "html_url": "https://github.com/bradwright",
            "followers_url": "https://api.github.com/users/bradwright/followers",
            "following_url": "https://api.github.com/users/bradwright/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradwright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradwright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradwright/subscriptions",
            "organizations_url": "https://api.github.com/users/bradwright/orgs",
            "repos_url": "https://api.github.com/users/bradwright/repos",
            "events_url": "https://api.github.com/users/bradwright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradwright/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-23T11:56:42Z",
          "updated_at": "2013-08-23T11:56:42Z",
          "author_association": "NONE",
          "body": ":+1:\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23159053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23160768",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23160768",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23160768,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTYwNzY4",
          "user": {
            "login": "user52",
            "id": 3287452,
            "node_id": "MDQ6VXNlcjMyODc0NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3287452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/user52",
            "html_url": "https://github.com/user52",
            "followers_url": "https://api.github.com/users/user52/followers",
            "following_url": "https://api.github.com/users/user52/following{/other_user}",
            "gists_url": "https://api.github.com/users/user52/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/user52/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/user52/subscriptions",
            "organizations_url": "https://api.github.com/users/user52/orgs",
            "repos_url": "https://api.github.com/users/user52/repos",
            "events_url": "https://api.github.com/users/user52/events{/privacy}",
            "received_events_url": "https://api.github.com/users/user52/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-23T12:35:54Z",
          "updated_at": "2013-08-23T12:35:54Z",
          "author_association": "NONE",
          "body": "Cheers!\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23160768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23161787",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23161787",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23161787,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTYxNzg3",
          "user": {
            "login": "dhwthompson",
            "id": 32775,
            "node_id": "MDQ6VXNlcjMyNzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/32775?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhwthompson",
            "html_url": "https://github.com/dhwthompson",
            "followers_url": "https://api.github.com/users/dhwthompson/followers",
            "following_url": "https://api.github.com/users/dhwthompson/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhwthompson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhwthompson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhwthompson/subscriptions",
            "organizations_url": "https://api.github.com/users/dhwthompson/orgs",
            "repos_url": "https://api.github.com/users/dhwthompson/repos",
            "events_url": "https://api.github.com/users/dhwthompson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhwthompson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-23T12:55:37Z",
          "updated_at": "2013-08-23T12:55:37Z",
          "author_association": "NONE",
          "body": "![Thumbs up!](http://georgebrock.com/images/thumbsup.gif)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23161787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23185215",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23185215",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23185215,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTg1MjE1",
          "user": {
            "login": "jlipps",
            "id": 605053,
            "node_id": "MDQ6VXNlcjYwNTA1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/605053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlipps",
            "html_url": "https://github.com/jlipps",
            "followers_url": "https://api.github.com/users/jlipps/followers",
            "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
            "organizations_url": "https://api.github.com/users/jlipps/orgs",
            "repos_url": "https://api.github.com/users/jlipps/repos",
            "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlipps/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-23T19:18:08Z",
          "updated_at": "2013-08-23T19:18:08Z",
          "author_association": "NONE",
          "body": ":beers:\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23185215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23277133",
          "html_url": "https://github.com/django/django/pull/376#issuecomment-23277133",
          "issue_url": "https://api.github.com/repos/django/django/issues/376",
          "id": 23277133,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjc3MTMz",
          "user": {
            "login": "foresmac",
            "id": 3628189,
            "node_id": "MDQ6VXNlcjM2MjgxODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3628189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/foresmac",
            "html_url": "https://github.com/foresmac",
            "followers_url": "https://api.github.com/users/foresmac/followers",
            "following_url": "https://api.github.com/users/foresmac/following{/other_user}",
            "gists_url": "https://api.github.com/users/foresmac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/foresmac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/foresmac/subscriptions",
            "organizations_url": "https://api.github.com/users/foresmac/orgs",
            "repos_url": "https://api.github.com/users/foresmac/repos",
            "events_url": "https://api.github.com/users/foresmac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/foresmac/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-26T16:49:05Z",
          "updated_at": "2013-08-26T16:49:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "[![LGTM](http://i.imgur.com/azxpEtW.jpg)](http://www.lgtm.in/i/Z2e)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23277133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/11452",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/11452/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/11452/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/11452/events",
      "html_url": "https://github.com/django/django/pull/11452",
      "id": 453852927,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg2NDQyMDgw",
      "number": 11452,
      "title": "Fixed #12990 -- Added JSONField model field.",
      "user": {
        "login": "laymonage",
        "id": 6379424,
        "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laymonage",
        "html_url": "https://github.com/laymonage",
        "followers_url": "https://api.github.com/users/laymonage/followers",
        "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
        "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
        "organizations_url": "https://api.github.com/users/laymonage/orgs",
        "repos_url": "https://api.github.com/users/laymonage/repos",
        "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
        "received_events_url": "https://api.github.com/users/laymonage/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 76,
      "created_at": "2019-06-09T01:52:22Z",
      "updated_at": "2020-01-30T14:32:42Z",
      "closed_at": "2020-01-30T14:15:46Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/11452",
        "html_url": "https://github.com/django/django/pull/11452",
        "diff_url": "https://github.com/django/django/pull/11452.diff",
        "patch_url": "https://github.com/django/django/pull/11452.patch",
        "merged_at": null
      },
      "body": "### This pull request is closed. Please look at #12392 instead.\r\n\r\n---\r\n\r\nTicket [#12990](https://code.djangoproject.com/ticket/12990), as part of the [Google Summer of Code](https://g.co/gsoc) program.\r\n\r\nSome points:\r\n- Currently supports storing and retrieving any valid JSON value (boolean, integer, float, string, object, array) on all supported database backends (SQLite, PostgreSQL, MySQL, MariaDB, Oracle).\r\n  Note: Oracle only supports JSON object and array if `IS JSON` constraint is enabled.\r\n- Supports custom encoder and decoder (defaults to `json.JSONEncoder` and `json.JSONDecoder`, respectively). I had to cast the `SELECT` query to `text` for PostgreSQL to avoid having the value already decoded in `from_db_value` so it's possible to use a custom decoder (see [psycopg2 docs](http://initd.org/psycopg/docs/extras.html#json-adaptation)).\r\n- Custom lookups and transforms from `contrib.postgres.fields.JSONField` are implemented as possibly supported for each backend.\r\n- Check constraints are applied.  \r\n  - MariaDB and SQLite have a `JSON_VALID` function which works well.\r\n  - Oracle has [`IS JSON`](https://docs.oracle.com/en/database/oracle/oracle-database/12.2/adjsn/conditions-is-json-and-is-not-json.html#GUID-1B6CFFBE-85FE-41DD-BA14-DD1DE73EAB20) constraint, but from what I tried, it only returns true if the field's value is either a JSON object or array.\r\n  - The constraint already comes with the JSON data types in PostgreSQL and MySQL. You can only insert valid JSON values for `jsonb` and `json` columns.\r\n- Oracle implementation uses the `nclob` data type. Oracle recommends using `blob`, but there are some downsides (see [docs](https://docs.oracle.com/en/database/oracle/oracle-database/12.2/adjsn/overview-of-storage-and-management-of-JSON-data.html)). Besides, an existing implementation of [oracle-json-field](https://github.com/Exscientia/oracle-json-field) uses `clob`. `TextField` also uses `nclob`, so I think this makes sense.\r\n- Needs [JSON1](https://www.sqlite.org/json1.html) extension for SQLite. Most Linux distros already have it enabled by default in their SQLite and Python packages.\r\n- Supports introspection.\r\n\r\nMore details of this available on [my blog](https://gsoc.laymonage.com).",
      "closed_by": {
        "login": "laymonage",
        "id": 6379424,
        "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laymonage",
        "html_url": "https://github.com/laymonage",
        "followers_url": "https://api.github.com/users/laymonage/followers",
        "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
        "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
        "organizations_url": "https://api.github.com/users/laymonage/orgs",
        "repos_url": "https://api.github.com/users/laymonage/repos",
        "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
        "received_events_url": "https://api.github.com/users/laymonage/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/11452/reactions",
        "total_count": 54,
        "+1": 29,
        "-1": 0,
        "laugh": 0,
        "hooray": 18,
        "confused": 0,
        "heart": 5,
        "rocket": 2,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/11452/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/500188044",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-500188044",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 500188044,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDE4ODA0NA==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-09T06:11:54Z",
          "updated_at": "2020-01-28T08:04:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Any clue on which version of MariaDB is used on [djangoci.com](//djangoci.com)? The `json` data type is introduced in MariaDB 10.2.7.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/500188044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/500319566",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-500319566",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 500319566,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDMxOTU2Ng==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-10T07:26:30Z",
          "updated_at": "2020-01-28T08:04:57Z",
          "author_association": "MEMBER",
          "body": "> Any clue on which version of MariaDB is used on [djangoci.com](//djangoci.com)? The `json` data type is introduced in MariaDB 10.2.7.\r\n\r\ndjangoci uses MariaDB 10.1.40. I can bump MariaDB version in the next few days. We need to remember that [Django 3.0 supports](https://docs.djangoproject.com/en/dev/ref/databases/#mariadb-notes) MariaDB 10.1 and higher so a new db feature is required e.g. `has_json_field`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/500319566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/500438741",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-500438741",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 500438741,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDQzODc0MQ==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-10T14:32:28Z",
          "updated_at": "2020-01-28T08:05:09Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > Any clue on which version of MariaDB is used on [djangoci.com](//djangoci.com)? The `json` data type is introduced in MariaDB 10.2.7.\r\n> \r\n> djangoci uses MariaDB 10.1.40. I can bump MariaDB version in the next few days. We need to remember that [Django 3.0 supports](https://docs.djangoproject.com/en/dev/ref/databases/#mariadb-notes) MariaDB 10.1 and higher so a new db feature is required e.g. `has_json_field`.\r\n\r\nI see. I'll try to add it later.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/500438741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/500469371",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-500469371",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 500469371,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDQ2OTM3MQ==",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-10T15:51:22Z",
          "updated_at": "2020-01-28T08:05:22Z",
          "author_association": "MEMBER",
          "body": "> djangoci uses MariaDB 10.1.40. I can bump MariaDB version in the next few days. We need to remember that Django 3.0 supports MariaDB 10.1 and higher so a new db feature is required e.g. has_json_field.\r\n\r\nHow about `supports_json` ? It's not really a separate data type on SQLite or MariaDB.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/500469371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/500477861",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-500477861",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 500477861,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDQ3Nzg2MQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-10T16:13:15Z",
          "updated_at": "2019-06-10T16:13:15Z",
          "author_association": "MEMBER",
          "body": "> > djangoci uses MariaDB 10.1.40. I can bump MariaDB version in the next few days. We need to remember that Django 3.0 supports MariaDB 10.1 and higher so a new db feature is required e.g. has_json_field.\r\n> \r\n> How about `supports_json` ? It's not really a separate data type on SQLite or MariaDB.\r\n\r\nIt is also not a separate field on Oracle, but a feature flag will determine if backend has JSON field or not, so ... :thinking:   ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/500477861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/501178315",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-501178315",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 501178315,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTE3ODMxNQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-12T08:43:20Z",
          "updated_at": "2020-01-28T08:05:49Z",
          "author_association": "MEMBER",
          "body": "@laymonage I updated MariaDB to 10.2.24 on Jenkins.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/501178315/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/501254671",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-501254671",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 501254671,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTI1NDY3MQ==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-12T12:39:43Z",
          "updated_at": "2019-06-12T12:41:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @laymonage I updated MariaDB to 10.2.24 on Jenkins.\r\n\r\nThanks! As expected, the tests have passed now.\r\n\r\nI have added a `supports_json` feature (can be renamed if desired). Not sure if I should check the SQLite version, though. I don't think there's any way to check if the JSON1 extension is enabled (maybe we could try to do `SELECT json('\"test\"')`, but that's a bit hack-ish).\r\nThe JSON1 extension was introduced with the release of SQLite 3.9.0. However, since it's a loadable extension, it *might* work if it's loaded on older SQLite version(s). I haven't tried.\r\n\r\nAlso, I'm not sure if I should use `check` and extend the list returned by that method instead of raising a `NotSupportedError`. I've seen both examples in the existing codebase.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/501254671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/503488475",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-503488475",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 503488475,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzQ4ODQ3NQ==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-19T09:43:58Z",
          "updated_at": "2019-06-19T09:43:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've added a form field. It's pretty much the one in `contrib.postgres`, but I omitted the field value in the invalid JSON error message and changed the tests accordingly.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/503488475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/503515843",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-503515843",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 503515843,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzUxNTg0Mw==",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-19T11:10:31Z",
          "updated_at": "2019-06-19T11:10:31Z",
          "author_association": "MEMBER",
          "body": "> I have added a supports_json feature (can be renamed if desired). Not sure if I should check the SQLite version, though. I don't think there's any way to check if the JSON1 extension is enabled (maybe we could try to do SELECT json('\"test\"'), but that's a bit hack-ish).\r\n> The JSON1 extension was introduced with the release of SQLite 3.9.0. However, since it's a loadable extension, it might work if it's loaded on older SQLite version(s). I haven't tried.\r\n\r\nI think trying the `json` function and catching the error isn't so bad, as long as it won't break any transactions.\r\n\r\nThe other option is to use `PRAGMA compile_options` and check if the extension is in there, however I am not sure if it's possible to load the `json1` extension without it being built in at compile time...\r\n\r\n```\r\nsqlite> PRAGMA compile_options;\r\nBUG_COMPATIBLE_20160819\r\nCOMPILER=clang-10.0.1\r\nDEFAULT_CACHE_SIZE=2000\r\nDEFAULT_CKPTFULLFSYNC\r\nDEFAULT_JOURNAL_SIZE_LIMIT=32768\r\nDEFAULT_PAGE_SIZE=4096\r\nDEFAULT_SYNCHRONOUS=2\r\nDEFAULT_WAL_SYNCHRONOUS=1\r\nENABLE_API_ARMOR\r\nENABLE_COLUMN_METADATA\r\nENABLE_DBSTAT_VTAB\r\nENABLE_FTS3\r\nENABLE_FTS3_PARENTHESIS\r\nENABLE_FTS3_TOKENIZER\r\nENABLE_FTS4\r\nENABLE_FTS5\r\nENABLE_JSON1\r\nENABLE_LOCKING_STYLE=1\r\nENABLE_PREUPDATE_HOOK\r\nENABLE_RTREE\r\nENABLE_SESSION\r\nENABLE_SNAPSHOT\r\nENABLE_SQLLOG\r\nENABLE_UNKNOWN_SQL_FUNCTION\r\nENABLE_UPDATE_DELETE_LIMIT\r\nHAVE_ISNAN\r\nMAX_LENGTH=2147483645\r\nMAX_MMAP_SIZE=1073741824\r\nMAX_VARIABLE_NUMBER=500000\r\nOMIT_AUTORESET\r\nOMIT_LOAD_EXTENSION\r\nSTMTJRNL_SPILL=131072\r\nTHREADSAFE=2\r\nUSE_URI\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/503515843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/503541824",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-503541824",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 503541824,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzU0MTgyNA==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-19T12:35:53Z",
          "updated_at": "2019-06-19T12:39:44Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I think trying the json function and catching the error isn't so bad, as long as it won't break any transactions.\r\n\r\nI'm not sure where and how to properly put it in Django's source code, though.\r\n\r\n---\r\n\r\nI tried compiling SQLite 3.28.0 without JSON1, compiling JSON1 separately, and loading it with the `.load` command.\r\n`SELECT JSON('\"test\"');` works, but `ENABLE_JSON1` doesn't show up with `PRAGMA compile_options` (which is correct since I didn't build JSON1 along with SQLite).\r\n\r\nOn the other hand, I also tried loading JSON1 (compiled from SQLite 3.28.0 source code) on SQLite 3.8.7.1 (what's available on Debian Jessie). This SQLite version supports extension loading, but I got a segmentation fault when I tried to load JSON1. So, I guess it needs SQLite 3.9.0 and up.\r\n\r\nBy the way... JSON1 is also enabled by default if SQLite is compiled using `make` with the amalgamation and the given configurations.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/503541824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/503586497",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-503586497",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 503586497,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzU4NjQ5Nw==",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-19T14:31:46Z",
          "updated_at": "2019-06-19T14:31:46Z",
          "author_association": "MEMBER",
          "body": "> I'm not sure where and how to properly put it in Django's source code, though.\r\n\r\nYou can use a `@cached_property` for the feature, for example https://github.com/django/django/blob/master/django/db/backends/mysql/features.py#L110",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/503586497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/503668512",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-503668512",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 503668512,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzY2ODUxMg==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-19T18:04:53Z",
          "updated_at": "2019-06-19T18:04:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > I'm not sure where and how to properly put it in Django's source code, though.\r\n> \r\n> You can use a `@cached_property` for the feature, for example https://github.com/django/django/blob/master/django/db/backends/mysql/features.py#L110\r\n\r\nYeah, I've used it in my `supports_json` DB feature. What I mean is, should I do something like this?\r\n\r\n```python\r\ntry:\r\n    with self.connection.cursor() as cursor:\r\n        cursor.execute(\"SELECT JSON('\\\"test\\\"')\r\nexcept DatabaseError:\r\n    return False\r\nelse:\r\n    return True\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/503668512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/503728306",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-503728306",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 503728306,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzcyODMwNg==",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-19T20:11:03Z",
          "updated_at": "2019-06-19T20:11:03Z",
          "author_association": "MEMBER",
          "body": "That looks like what I was thinking of, though you might need a `transaction.atomic` around it to prevent the error from breaking any current transaction - at least that's the way it works with some kinds of error on other databases, I'm no SQLite expert.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/503728306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/504985711",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-504985711",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 504985711,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDk4NTcxMQ==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-24T12:20:06Z",
          "updated_at": "2019-06-25T05:59:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "~~I'm thinking of adding~~ I added custom encoder and decoder support for the form field.~~, but I'm not sure if it makes sense. Any thoughts?~~",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/504985711/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/505364556",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-505364556",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 505364556,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTM2NDU1Ng==",
          "user": {
            "login": "cansarigol",
            "id": 5008696,
            "node_id": "MDQ6VXNlcjUwMDg2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5008696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cansarigol",
            "html_url": "https://github.com/cansarigol",
            "followers_url": "https://api.github.com/users/cansarigol/followers",
            "following_url": "https://api.github.com/users/cansarigol/following{/other_user}",
            "gists_url": "https://api.github.com/users/cansarigol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cansarigol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cansarigol/subscriptions",
            "organizations_url": "https://api.github.com/users/cansarigol/orgs",
            "repos_url": "https://api.github.com/users/cansarigol/repos",
            "events_url": "https://api.github.com/users/cansarigol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cansarigol/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-25T09:27:54Z",
          "updated_at": "2019-06-25T09:27:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "> No, `json.dumps` and `json.loads` take `None` as the default argument for the `cls` parameter. See https://docs.python.org/3/library/json.html#json.dumps.\r\n\r\nActually, I didn't test it but I saw [this part](https://github.com/django/django/blob/698df6a009cb1c4dbd55905264f24f6edf41066e/django/contrib/postgres/fields/jsonb.py#L25) in code.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/505364556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/505369975",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-505369975",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 505369975,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTM2OTk3NQ==",
          "user": {
            "login": "cansarigol",
            "id": 5008696,
            "node_id": "MDQ6VXNlcjUwMDg2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5008696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cansarigol",
            "html_url": "https://github.com/cansarigol",
            "followers_url": "https://api.github.com/users/cansarigol/followers",
            "following_url": "https://api.github.com/users/cansarigol/following{/other_user}",
            "gists_url": "https://api.github.com/users/cansarigol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cansarigol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cansarigol/subscriptions",
            "organizations_url": "https://api.github.com/users/cansarigol/orgs",
            "repos_url": "https://api.github.com/users/cansarigol/repos",
            "events_url": "https://api.github.com/users/cansarigol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cansarigol/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-25T09:43:27Z",
          "updated_at": "2019-06-25T09:43:27Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I believe the first argument in functions returned by `get_db_converters` in a `Field` should take the field's value. I'm not sure keeping it inside the class and use `@staticmethod` is a better option.\r\n> \r\n> Such functions are mostly found in the backend (https://github.com/django/django/blob/master/django/db/backends/oracle/operations.py#L164). Since there's `get_db_converters` in the field, I decided to use that to avoid modifying the backend too much. If modifying the backend is preferred, I can do it that way.\r\n\r\nI would move under class as instance method.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/505369975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/505387608",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-505387608",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 505387608,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTM4NzYwOA==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-25T10:36:13Z",
          "updated_at": "2019-06-25T10:36:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Actually, I didn't test it but I saw [this part](https://github.com/django/django/blob/698df6a009cb1c4dbd55905264f24f6edf41066e/django/contrib/postgres/fields/jsonb.py#L25) in code.\r\n\r\nYes, but that's unnecessary since the default argument is `None`.\r\n\r\n> I would move under class as instance method.\r\n\r\nI don't think that would work since the first argument would be the `JSONField` instance, instead of the value?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/505387608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/508051077",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-508051077",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 508051077,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwODA1MTA3Nw==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-03T11:17:24Z",
          "updated_at": "2019-07-03T11:17:24Z",
          "author_association": "MEMBER",
          "body": "@laymonage Thanks for updates :+1: I think that we should currently move all PostgreSQL tests related with JSONField (e.g. `postgres_tests/test_json.py`) to all databases scope and start to work on failures. I would also recommend to remove current implementation from `contrib.postgres` and for backward compatibility leave it only as a reference to a new implementation (probably some workaround should be added to migrations):\r\n\r\n- `django.contrib.postgres.fields.JSONField` -> `django.db.models.JSONField`,\r\n- `django.contrib.postgres.forms.JSONField` -> `django.forms.JSONField`,\r\n\r\nFor example, `django/contrib/postgres/fields/jsonb.py`:\r\n```python\r\nfrom django.db.models import JSONField\r\n\r\n__all__ = ['JSONField']\r\n```\r\nall lookups should be moved from `contrib/postgres/fields/jsonb.py`  to `db/models/lookups.py`.\r\n\r\nWith these changes we will be able to find caveats for each database :male_detective: .",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/508051077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/508672894",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-508672894",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 508672894,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwODY3Mjg5NA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-05T08:12:22Z",
          "updated_at": "2019-07-05T08:12:22Z",
          "author_association": "MEMBER",
          "body": "@laymonage It's easier to review new changes when you push more commits instead of force-pushing. We will squash commits at the end (before a final review).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/508672894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/508674348",
          "html_url": "https://github.com/django/django/pull/11452#issuecomment-508674348",
          "issue_url": "https://api.github.com/repos/django/django/issues/11452",
          "id": 508674348,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwODY3NDM0OA==",
          "user": {
            "login": "laymonage",
            "id": 6379424,
            "node_id": "MDQ6VXNlcjYzNzk0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6379424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laymonage",
            "html_url": "https://github.com/laymonage",
            "followers_url": "https://api.github.com/users/laymonage/followers",
            "following_url": "https://api.github.com/users/laymonage/following{/other_user}",
            "gists_url": "https://api.github.com/users/laymonage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laymonage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laymonage/subscriptions",
            "organizations_url": "https://api.github.com/users/laymonage/orgs",
            "repos_url": "https://api.github.com/users/laymonage/repos",
            "events_url": "https://api.github.com/users/laymonage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laymonage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-05T08:17:28Z",
          "updated_at": "2019-07-05T08:17:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm I remember some folks saying it'd be better to leave the current implementation in `contrib.postgres` as it is (and add a deprecation message). However, I see your idea is reasonable, as long as we can maintain all of the lookups and transforms. I guess I'll try going down that route and see if we can do that.\r\n\r\nMeanwhile, I've removed some tests in `postgres_tests` and incorporated them into `test_jsonfield.py`.\r\n\r\nSome updates:\r\n\r\n- `JSON_VALID(NULL)` returns `0` (false) on SQLite, while it returns true on MySQL and MariaDB (or maybe the check just doesn't occur). This makes it impossible to store SQL `NULL` even if we specify `blank=True, null=True`. I've updated the SQLite constraint with `OR \"%(column)s\" IS NULL` and now it works correctly.\r\n- Oracle Database stores SQL `NULL` as an empty string `''` on fields that support empty strings. I've updated `JSONField` to accommodate this behavior. Saving empty Python strings would still work, as they would be encoded as `'\"\"'`.\r\n- I've refactored the tests into different classes for cohesiveness.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/508674348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/1364",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/1364/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/1364/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/1364/events",
      "html_url": "https://github.com/django/django/pull/1364",
      "id": 16854613,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njk3ODIxNQ==",
      "number": 1364,
      "title": "Checking framework",
      "user": {
        "login": "chrismedrela",
        "id": 1645996,
        "node_id": "MDQ6VXNlcjE2NDU5OTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1645996?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chrismedrela",
        "html_url": "https://github.com/chrismedrela",
        "followers_url": "https://api.github.com/users/chrismedrela/followers",
        "following_url": "https://api.github.com/users/chrismedrela/following{/other_user}",
        "gists_url": "https://api.github.com/users/chrismedrela/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chrismedrela/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chrismedrela/subscriptions",
        "organizations_url": "https://api.github.com/users/chrismedrela/orgs",
        "repos_url": "https://api.github.com/users/chrismedrela/repos",
        "events_url": "https://api.github.com/users/chrismedrela/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chrismedrela/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 16,
      "created_at": "2013-07-17T09:07:35Z",
      "updated_at": "2014-06-12T19:20:05Z",
      "closed_at": "2014-01-18T16:31:12Z",
      "author_association": "NONE",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/1364",
        "html_url": "https://github.com/django/django/pull/1364",
        "diff_url": "https://github.com/django/django/pull/1364.diff",
        "patch_url": "https://github.com/django/django/pull/1364.patch",
        "merged_at": null
      },
      "body": "This branch is part of my Google Summer of Code 2013 project. It's not intended to be merged, it's only to make deep review easier.\n\nSee discussion of checking framework on django-developers: https://groups.google.com/forum/?fromgroups=&hl=en#!topic/django-developers/fEf21dtpqDE\n",
      "closed_by": {
        "login": "freakboy3742",
        "id": 37345,
        "node_id": "MDQ6VXNlcjM3MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/freakboy3742",
        "html_url": "https://github.com/freakboy3742",
        "followers_url": "https://api.github.com/users/freakboy3742/followers",
        "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
        "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
        "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
        "repos_url": "https://api.github.com/users/freakboy3742/repos",
        "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
        "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/1364/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/1364/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/21826377",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-21826377",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 21826377,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxODI2Mzc3",
          "user": {
            "login": "chrismedrela",
            "id": 1645996,
            "node_id": "MDQ6VXNlcjE2NDU5OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1645996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrismedrela",
            "html_url": "https://github.com/chrismedrela",
            "followers_url": "https://api.github.com/users/chrismedrela/followers",
            "following_url": "https://api.github.com/users/chrismedrela/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrismedrela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrismedrela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrismedrela/subscriptions",
            "organizations_url": "https://api.github.com/users/chrismedrela/orgs",
            "repos_url": "https://api.github.com/users/chrismedrela/repos",
            "events_url": "https://api.github.com/users/chrismedrela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrismedrela/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-07-30T22:02:01Z",
          "updated_at": "2013-07-30T22:02:01Z",
          "author_association": "NONE",
          "body": "I've made error message single-line so there is no short/long description separation. See https://github.com/chrismedrela/django/commit/1929a8c3565bdd6aa36b8ce3f578f34091105d59.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/21826377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22137615",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-22137615",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 22137615,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTM3NjE1",
          "user": {
            "login": "ptone",
            "id": 40845,
            "node_id": "MDQ6VXNlcjQwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ptone",
            "html_url": "https://github.com/ptone",
            "followers_url": "https://api.github.com/users/ptone/followers",
            "following_url": "https://api.github.com/users/ptone/following{/other_user}",
            "gists_url": "https://api.github.com/users/ptone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ptone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ptone/subscriptions",
            "organizations_url": "https://api.github.com/users/ptone/orgs",
            "repos_url": "https://api.github.com/users/ptone/repos",
            "events_url": "https://api.github.com/users/ptone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ptone/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-05T20:14:22Z",
          "updated_at": "2013-08-05T20:14:22Z",
          "author_association": "MEMBER",
          "body": "@chrismedrela can you push over the fixes from your main GSOC branch to this review branch - looks like lots of updates have been made, but it will be easier to review the whole branch in one place.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22137615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22219908",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-22219908",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 22219908,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE5OTA4",
          "user": {
            "login": "ptone",
            "id": 40845,
            "node_id": "MDQ6VXNlcjQwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ptone",
            "html_url": "https://github.com/ptone",
            "followers_url": "https://api.github.com/users/ptone/followers",
            "following_url": "https://api.github.com/users/ptone/following{/other_user}",
            "gists_url": "https://api.github.com/users/ptone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ptone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ptone/subscriptions",
            "organizations_url": "https://api.github.com/users/ptone/orgs",
            "repos_url": "https://api.github.com/users/ptone/repos",
            "events_url": "https://api.github.com/users/ptone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ptone/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-06T23:34:16Z",
          "updated_at": "2013-08-06T23:34:16Z",
          "author_association": "MEMBER",
          "body": "It is great to see validation.py get replaced with something far more sane - and I think the overall approach is good.\n\nIn addition to my line level comments - here are some overall thoughts:\n\nThere are a number of places where related field checks are skipped if the the value is a string - I'm assuming for lazy resolution. Shouldn't we be in a position by the time checks are done to have all related fields connected? It seems that potential problems that are checked for are now deferred to runtime leaving users with \"why did this setup pass checks and now bombs?\"\n\nI wish there was a way to test this without the brittle problem of doing essentially string comparisons on the error messages. Any typo fixes or rewording means updating the docs. Unfortunately I don't have any bright ideas. When hitting a similar situation for SuspiciousOperation the solution was to create specific subclasses - but that seems like the wrong type of fix here.\n\nThere is a bit too much opaque use of **kwargs being passed around - it is fine for this, but if the design of this feature were to be much more complex than it is, it would be an ass-biting laying in wait.\n\nAs said in a comment, I think the \"check_all_models\" adds enough enhancement and exposes enough checking API for this feature without also adding the global \"registration\" of custom check functions.\n\nThe docs will need some more polish (I'm willing to help - left no comments yet), and actual deprecations need to be started.\n\nI'm NOT NOT NOT a coverage zealot but I did run my little diff coverage tool on the branch which found the following lines that were added/changed that are not tested:\n\nhttps://gist.github.com/ptone/fa491c101de3bc4fc5c7\nhttp://ptone.com/temp/checks-coverage/ (untested changes have block red line numbers)\n\n100% coverage should not be a blind objective, but it can be helpful for you to see any major untested areas, but overall the tests looked good.\n\nThanks for the tremendous amount of work during your GSOC.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22219908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22223189",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-22223189",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 22223189,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjIzMTg5",
          "user": {
            "login": "freakboy3742",
            "id": 37345,
            "node_id": "MDQ6VXNlcjM3MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freakboy3742",
            "html_url": "https://github.com/freakboy3742",
            "followers_url": "https://api.github.com/users/freakboy3742/followers",
            "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
            "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
            "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
            "repos_url": "https://api.github.com/users/freakboy3742/repos",
            "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-07T00:59:56Z",
          "updated_at": "2013-08-07T00:59:56Z",
          "author_association": "MEMBER",
          "body": "Thanks for the review, Preston -- much appreciated to have another set of eyes on the codebase.\n\nRegarding the string resolution of related field names -- that's mostly inherited from the old codebase -- Chris hasn't introduced anything new there. You're completely correct that at the point checks are performed, all the models _should_ be resolved. I'll stand corrected on this, but as I recall, the reason the string exclusions exist is so that when a bad model has been referenced, we can catch the fact that it hasn't been resolved, report that problem, and then perform any other checks that are appropriate. However, some checks will break hard if the foreign key reference hasn't been resolved, so you need to skip over those checks.\n\nRegarding the tests checking string content -- I agree that isn't ideal. A stretch goal for this project is to enable pyflakes-style warning/error suppression -- so you'll be able to register that you don't care about E115, and have errors of that type suppressed. This will also give us a simple constant against which we can perform tests. \n\nThe *_kwargs usage is a 'room for expansion' thing, much like the use of *_kwargs on save(). The idea is that you might be able to pass in specific qualifiers or modifiers to the checks; we don't know exactly what they will be -- one use at the moment is \"the app name\", but there could be others. Requiring **kwargs in the prototype for check methods means any future flags will be silently ignored, but can be specifically catered for when appropriate.\n\nAdding custom check functions was a specific goal for the project, with security checks being the use case validating the need for the feature. \n\nCompletely agreed on docs needing polish before this is merged -- that's true of any project, however. I'll certainly remember to call on you when we get to a merge point :-) \n\nThanks for the hit list on coverage, too. My validation to date has been a line-for-line comparison with the old validation checks; that means we should be at least as covered as we were previously, but doesn't account for previously existing testing holes.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22223189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22511439",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-22511439",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 22511439,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTExNDM5",
          "user": {
            "login": "ptone",
            "id": 40845,
            "node_id": "MDQ6VXNlcjQwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ptone",
            "html_url": "https://github.com/ptone",
            "followers_url": "https://api.github.com/users/ptone/followers",
            "following_url": "https://api.github.com/users/ptone/following{/other_user}",
            "gists_url": "https://api.github.com/users/ptone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ptone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ptone/subscriptions",
            "organizations_url": "https://api.github.com/users/ptone/orgs",
            "repos_url": "https://api.github.com/users/ptone/repos",
            "events_url": "https://api.github.com/users/ptone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ptone/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-12T17:47:30Z",
          "updated_at": "2013-08-12T17:47:30Z",
          "author_association": "MEMBER",
          "body": "Am I correct that this issue implies that a default value should always be set, and that this could be a check added to BooleanField?\n\nhttps://github.com/django/django/pull/1466/files\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22511439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22515579",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-22515579",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 22515579,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE1NTc5",
          "user": {
            "login": "chrismedrela",
            "id": 1645996,
            "node_id": "MDQ6VXNlcjE2NDU5OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1645996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrismedrela",
            "html_url": "https://github.com/chrismedrela",
            "followers_url": "https://api.github.com/users/chrismedrela/followers",
            "following_url": "https://api.github.com/users/chrismedrela/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrismedrela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrismedrela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrismedrela/subscriptions",
            "organizations_url": "https://api.github.com/users/chrismedrela/orgs",
            "repos_url": "https://api.github.com/users/chrismedrela/repos",
            "events_url": "https://api.github.com/users/chrismedrela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrismedrela/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-12T18:45:52Z",
          "updated_at": "2013-08-12T18:49:58Z",
          "author_association": "NONE",
          "body": "Preston, thank you very much for your review! Your comments helped me to improve the code and I really appreciate it.\n\nI went through list of all untested lines. Some of them were just dead lines (so they had no chance to be executed). The rest was result of lack of tests. I don't have too much time, so I wrote tests only for those lines which were easy to cover.\n\nYes, I agree that the check in #1466 pull request should be moved to `BooleanField`.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22515579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/22748448",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-22748448",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 22748448,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzQ4NDQ4",
          "user": {
            "login": "loic",
            "id": 36160,
            "node_id": "MDQ6VXNlcjM2MTYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36160?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/loic",
            "html_url": "https://github.com/loic",
            "followers_url": "https://api.github.com/users/loic/followers",
            "following_url": "https://api.github.com/users/loic/following{/other_user}",
            "gists_url": "https://api.github.com/users/loic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/loic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/loic/subscriptions",
            "organizations_url": "https://api.github.com/users/loic/orgs",
            "repos_url": "https://api.github.com/users/loic/repos",
            "events_url": "https://api.github.com/users/loic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/loic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-16T05:37:11Z",
          "updated_at": "2013-08-16T05:37:11Z",
          "author_association": "MEMBER",
          "body": "Regarding the naming, what about \"Runtime checks\"?\n\nFor more inspiration, maybe these two links can help:\n- http://en.wikipedia.org/wiki/Static_program_analysis.\n- http://en.wikipedia.org/wiki/Dynamic_program_analysis.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/22748448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23047050",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-23047050",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 23047050,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDQ3MDUw",
          "user": {
            "login": "chrismedrela",
            "id": 1645996,
            "node_id": "MDQ6VXNlcjE2NDU5OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1645996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrismedrela",
            "html_url": "https://github.com/chrismedrela",
            "followers_url": "https://api.github.com/users/chrismedrela/followers",
            "following_url": "https://api.github.com/users/chrismedrela/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrismedrela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrismedrela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrismedrela/subscriptions",
            "organizations_url": "https://api.github.com/users/chrismedrela/orgs",
            "repos_url": "https://api.github.com/users/chrismedrela/repos",
            "events_url": "https://api.github.com/users/chrismedrela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrismedrela/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-21T20:22:19Z",
          "updated_at": "2013-08-21T20:22:19Z",
          "author_association": "NONE",
          "body": "@loic, thank you for your input. I've had a look at these wiki pages, but I think that we will stay with \"system checks\" -- I cannot see any option that is _much_ better.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23047050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23257340",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-23257340",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 23257340,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjU3MzQw",
          "user": {
            "login": "marfire",
            "id": 5117434,
            "node_id": "MDQ6VXNlcjUxMTc0MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5117434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marfire",
            "html_url": "https://github.com/marfire",
            "followers_url": "https://api.github.com/users/marfire/followers",
            "following_url": "https://api.github.com/users/marfire/following{/other_user}",
            "gists_url": "https://api.github.com/users/marfire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marfire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marfire/subscriptions",
            "organizations_url": "https://api.github.com/users/marfire/orgs",
            "repos_url": "https://api.github.com/users/marfire/repos",
            "events_url": "https://api.github.com/users/marfire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marfire/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-26T11:45:21Z",
          "updated_at": "2013-08-26T11:45:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "One thing I'm curious about: how should we (whether that's Django or third-parties) decide what validation should be done by this checking process, and what should be done in `__init__()`? A number of fields do checks in `__init__()` and raise exceptions there - for example, `FileField` will raise a `TypeError` from `__init__()` if you try to pass it a `unique` argument, but it will not check `upload_to` until model checking.\n\nSince `__init__()` is always run, while model checking is generally only run in development, it would seem that this distinction matters most in a production environment. Since model checking is skipped there, under the assumption that problems have already been addressed in development, perhaps the distinction should be that `__init__()` only does the validation necessary to make the code actually run, while all correctness checks are done by the checking process.\n\nAny thoughts?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23257340/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23383463",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-23383463",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 23383463,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzgzNDYz",
          "user": {
            "login": "freakboy3742",
            "id": 37345,
            "node_id": "MDQ6VXNlcjM3MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freakboy3742",
            "html_url": "https://github.com/freakboy3742",
            "followers_url": "https://api.github.com/users/freakboy3742/followers",
            "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
            "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
            "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
            "repos_url": "https://api.github.com/users/freakboy3742/repos",
            "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-28T01:12:46Z",
          "updated_at": "2013-08-28T01:12:46Z",
          "author_association": "MEMBER",
          "body": "@marfire I think you've found an unusual edge case of the old validation design.\n\nThe only examples of exceptions raised in `__init__()` that I can find are:\n- AutoField (rejecting `primary_key=False`), \n- FileField (rejecting `primary_key` and `unique` arguments). \n- ForeignKey/M2M (rejecting references to abstract models, and references that aren't a model or a string)\n\nHistorically, implementing these checks in validation.py would have meant extending the 'type specific' blocks in validation.py. Although these blocks already existed, it's not an especially good design pattern (putting all your validation logic in one place), so those three cases of localized validation have slipped in. \n\nI'm fairly certain that these checks could all be converted into system checks without any real change in behavior; and given that we're now moved to a 'check behavior stored on the field' archictecture, we can avoid the bad architecture. We also get slightly improved error reporting behavior as well -- under the current setup, if you have multiple ForeignKeys pointing to an abstract model, each one would be reported as an individual exception. Using a check-based approach, you'd get a summary of _all_ the bad references at once.\n\nAs for third party fields -- historically, they haven't had a choice. They've had to use assertions in `__init__`, because they didn't have access to validation.py. This is one of the reasons behind a move to a checking framework.\n\nSo - my advice for third parties (once this all lands in trunk) would be to use checks, rather than assertions in `__init__` checks -- and, for backwards compatibility, do both :-)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23383463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/23390398",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-23390398",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 23390398,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzkwMzk4",
          "user": {
            "login": "marfire",
            "id": 5117434,
            "node_id": "MDQ6VXNlcjUxMTc0MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5117434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marfire",
            "html_url": "https://github.com/marfire",
            "followers_url": "https://api.github.com/users/marfire/followers",
            "following_url": "https://api.github.com/users/marfire/following{/other_user}",
            "gists_url": "https://api.github.com/users/marfire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marfire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marfire/subscriptions",
            "organizations_url": "https://api.github.com/users/marfire/orgs",
            "repos_url": "https://api.github.com/users/marfire/repos",
            "events_url": "https://api.github.com/users/marfire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marfire/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-08-28T04:31:50Z",
          "updated_at": "2013-08-28T04:31:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@freakboy3742 Thanks for the clarification. That's good news - it's certainly nicer to do everything in system checks than it is to split the work with `__init__()`. \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/23390398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/26203709",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-26203709",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 26203709,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjAzNzA5",
          "user": {
            "login": "chrismedrela",
            "id": 1645996,
            "node_id": "MDQ6VXNlcjE2NDU5OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1645996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrismedrela",
            "html_url": "https://github.com/chrismedrela",
            "followers_url": "https://api.github.com/users/chrismedrela/followers",
            "following_url": "https://api.github.com/users/chrismedrela/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrismedrela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrismedrela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrismedrela/subscriptions",
            "organizations_url": "https://api.github.com/users/chrismedrela/orgs",
            "repos_url": "https://api.github.com/users/chrismedrela/repos",
            "events_url": "https://api.github.com/users/chrismedrela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrismedrela/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-10-12T19:02:34Z",
          "updated_at": "2013-10-12T19:02:34Z",
          "author_association": "NONE",
          "body": "I've rebased this branch. I've also improved documentation. I've also fixed the problem of compatibility checks -- I've added new `is_overridden` method to `Settings` and `UserSettingsHolder`. @ptone, do you have time to review documentation? This is the last thing we need to do in order to merge this branch.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/26203709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/26208360",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-26208360",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 26208360,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjA4MzYw",
          "user": {
            "login": "freakboy3742",
            "id": 37345,
            "node_id": "MDQ6VXNlcjM3MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freakboy3742",
            "html_url": "https://github.com/freakboy3742",
            "followers_url": "https://api.github.com/users/freakboy3742/followers",
            "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
            "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
            "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
            "repos_url": "https://api.github.com/users/freakboy3742/repos",
            "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2013-10-12T23:39:00Z",
          "updated_at": "2013-10-12T23:39:00Z",
          "author_association": "MEMBER",
          "body": "@chrismedrela Thanks for rebasing, but at this point, that's not strictly necessary; I've got a copy of this project in a branch of my own that I've been polishing when I get a chance. I'm hoping to get some time this week to take a good stab at it. \n\nOf course, documentation reviews are always welcome :-)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/26208360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/32292907",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-32292907",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 32292907,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkyOTA3",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-01-14T18:36:04Z",
          "updated_at": "2014-01-14T18:36:04Z",
          "author_association": "MEMBER",
          "body": "Are we still trying to merge this for 1.7 alpha on Monday? Looks like it's at least in need of a rebase to merge cleanly.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/32292907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/32324839",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-32324839",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 32324839,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzI0ODM5",
          "user": {
            "login": "freakboy3742",
            "id": 37345,
            "node_id": "MDQ6VXNlcjM3MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freakboy3742",
            "html_url": "https://github.com/freakboy3742",
            "followers_url": "https://api.github.com/users/freakboy3742/followers",
            "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
            "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
            "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
            "repos_url": "https://api.github.com/users/freakboy3742/repos",
            "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-01-15T00:55:03Z",
          "updated_at": "2014-01-15T00:55:03Z",
          "author_association": "MEMBER",
          "body": "My intention is to merge for 1.7, yes. I'm hoping to find some time in the evenings this week (nothing quite like the last minute\u2026)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/32324839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/32685858",
          "html_url": "https://github.com/django/django/pull/1364#issuecomment-32685858",
          "issue_url": "https://api.github.com/repos/django/django/issues/1364",
          "id": 32685858,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjg1ODU4",
          "user": {
            "login": "freakboy3742",
            "id": 37345,
            "node_id": "MDQ6VXNlcjM3MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freakboy3742",
            "html_url": "https://github.com/freakboy3742",
            "followers_url": "https://api.github.com/users/freakboy3742/followers",
            "following_url": "https://api.github.com/users/freakboy3742/following{/other_user}",
            "gists_url": "https://api.github.com/users/freakboy3742/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freakboy3742/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freakboy3742/subscriptions",
            "organizations_url": "https://api.github.com/users/freakboy3742/orgs",
            "repos_url": "https://api.github.com/users/freakboy3742/repos",
            "events_url": "https://api.github.com/users/freakboy3742/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freakboy3742/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-01-18T16:31:12Z",
          "updated_at": "2014-01-18T16:31:12Z",
          "author_association": "MEMBER",
          "body": "I'm going to close this PR now; this one was used as the work-in-progress during the GSoC period. I've completed a final review and rebase against trunk ready for 1.7 alpha. This review includes the comments @timgraham made over the last few days to the documentation.\n\nThe new PR is #2181.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/32685858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/9622",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/9622/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/9622/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/9622/events",
      "html_url": "https://github.com/django/django/pull/9622",
      "id": 291766274,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MjY2MzY1",
      "number": 9622,
      "title": "Refs #28643 -- Added math database functions.",
      "user": {
        "login": "JunyiJ",
        "id": 8421173,
        "node_id": "MDQ6VXNlcjg0MjExNzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JunyiJ",
        "html_url": "https://github.com/JunyiJ",
        "followers_url": "https://api.github.com/users/JunyiJ/followers",
        "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
        "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
        "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
        "repos_url": "https://api.github.com/users/JunyiJ/repos",
        "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 36,
      "created_at": "2018-01-26T00:48:20Z",
      "updated_at": "2018-07-05T15:12:35Z",
      "closed_at": "2018-07-05T15:02:13Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/9622",
        "html_url": "https://github.com/django/django/pull/9622",
        "diff_url": "https://github.com/django/django/pull/9622.diff",
        "patch_url": "https://github.com/django/django/pull/9622.patch",
        "merged_at": "2018-07-05T15:02:13Z"
      },
      "body": "Added ACOS, ASIN, ATAN, ATAN2, CEILING, COS, COT, DEGREES, EXP,\r\nFLOOR, LOG, MOD, PI, POWER, RADIANS, ROUND, SIN, SQRT, TAN\r\nABS was added according to the commit by onkruid. \r\nAny suggestion is welcome!",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/9622/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/9622/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/361011971",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-361011971",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 361011971,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTAxMTk3MQ==",
          "user": {
            "login": "loic",
            "id": 36160,
            "node_id": "MDQ6VXNlcjM2MTYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36160?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/loic",
            "html_url": "https://github.com/loic",
            "followers_url": "https://api.github.com/users/loic/followers",
            "following_url": "https://api.github.com/users/loic/following{/other_user}",
            "gists_url": "https://api.github.com/users/loic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/loic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/loic/subscriptions",
            "organizations_url": "https://api.github.com/users/loic/orgs",
            "repos_url": "https://api.github.com/users/loic/repos",
            "events_url": "https://api.github.com/users/loic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/loic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-27T20:13:25Z",
          "updated_at": "2018-01-27T20:13:25Z",
          "author_association": "MEMBER",
          "body": "> It seems that the test_math.py cannot import my math functions. However, it works just fine for me locally. Could anybody help me with that?\r\n\r\nAre you still struggling with that?\r\n\r\nIt seems a bit odd to me, PY2 could have got mixed up between the absolute `math` package and the relative one, but PY3 doesn't have this issue.\r\n\r\nHave you tried clearing `__pycache__`?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/361011971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/361012081",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-361012081",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 361012081,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTAxMjA4MQ==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-27T20:15:10Z",
          "updated_at": "2018-01-27T20:15:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "@loic I think I found the reason. Thank you very much. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/361012081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/361057821",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-361057821",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 361057821,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTA1NzgyMQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-28T12:05:09Z",
          "updated_at": "2018-01-28T12:05:09Z",
          "author_association": "CONTRIBUTOR",
          "body": "`.. module:: django.db.models.functions.math` remove this, and try again. The toplevel `..versionadded: 2.1` ought be enough. `PI` should be `Pi` IMO.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/361057821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/361066426",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-361066426",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 361066426,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTA2NjQyNg==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-28T14:19:00Z",
          "updated_at": "2018-01-28T14:19:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "@atombrella Thank you very much for the suggestions! I followed your instructions and now it works.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/361066426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/361952858",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-361952858",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 361952858,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk1Mjg1OA==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-31T14:43:47Z",
          "updated_at": "2018-01-31T14:43:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "@auvipy It supports sqlite, Mysql, postgresql and oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/361952858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/361977855",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-361977855",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 361977855,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk3Nzg1NQ==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-31T15:59:18Z",
          "updated_at": "2018-01-31T15:59:18Z",
          "author_association": "MEMBER",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/361977855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/362024055",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-362024055",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 362024055,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAyNDA1NQ==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-01-31T18:22:56Z",
          "updated_at": "2018-01-31T22:28:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "@pope1ni The test on oracle backend paused because of conflicts of releases/2.1.txt. It seems that the release/2.1.txt has been updated since my last commit. Do I need to resolve the conflict?\r\n\r\nI have tried to fetch the most recent releases/2.1.txt from django/django and update my local file based on this version. However, it doesn't work. There is still conflict after my update. Any suggestion?\r\n\r\nJunyi ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/362024055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/362339503",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-362339503",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 362339503,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzOTUwMw==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-02-01T17:23:59Z",
          "updated_at": "2018-02-01T17:23:59Z",
          "author_association": "MEMBER",
          "body": "(Sorry - GitHub seemed to break my review into pieces...)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/362339503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/362342708",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-362342708",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 362342708,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjM0MjcwOA==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-02-01T17:34:36Z",
          "updated_at": "2018-02-01T17:34:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "@pope1ni @atombrella Thank you so much for the reviews and suggestions. I am working on them now. Thank you for the detailed explanations and the comments really helps a lot. \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/362342708/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/362397455",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-362397455",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 362397455,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjM5NzQ1NQ==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-02-01T20:50:01Z",
          "updated_at": "2018-02-01T20:50:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "@pope1ni I have revised the code based on the review/comments and finished updating most of them. However, I noticed that there is no tests running for my last two commits. Is there any issue? Did I commit too much that the system prohibited running tests on my code?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/362397455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/362419994",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-362419994",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 362419994,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQxOTk5NA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-02-01T22:14:02Z",
          "updated_at": "2018-02-01T22:14:02Z",
          "author_association": "MEMBER",
          "body": "You can squash your commits and force push. That should trigger a build.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/362419994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/362427720",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-362427720",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 362427720,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQyNzcyMA==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-02-01T22:46:19Z",
          "updated_at": "2018-02-01T22:46:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham Thanks for the advice. I tried squash commits and force push, but it didn't trigger a build. Any suggestions?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/362427720/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/374673647",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-374673647",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 374673647,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDY3MzY0Nw==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-20T16:53:47Z",
          "updated_at": "2018-03-20T16:53:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @pope1ni I have resolved the conflicts now. Thank you. The conflicts resolving part is more complicated than I expected.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/374673647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/374768407",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-374768407",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 374768407,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc2ODQwNw==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-20T21:47:11Z",
          "updated_at": "2018-03-20T21:47:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "I am a little bit surprised that none of the automatic tests test database oracle (correct me if I am wrong). @felixxm @pope1ni @atombrella @timgraham ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/374768407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/374968941",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-374968941",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 374968941,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDk2ODk0MQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-21T15:02:08Z",
          "updated_at": "2018-03-21T15:02:08Z",
          "author_association": "MEMBER",
          "body": "@pope1ni Totally agreed with all your comments, thanks! :bowing_man: :rocket: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/374968941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/375004802",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-375004802",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 375004802,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTAwNDgwMg==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-21T16:25:16Z",
          "updated_at": "2018-03-21T16:25:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you @pope1ni @felixxm for helping the oracle functions. I have committed all the changes as you suggested.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/375004802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/375390818",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-375390818",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 375390818,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTM5MDgxOA==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-22T17:27:34Z",
          "updated_at": "2018-03-22T17:27:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @pope1ni @felixxm @timgraham Thank you so much for your comments and review suggestions. I am wondering whether there is anything else to change or not? If not, could you help test on oracle and then merge it?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/375390818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/375418732",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-375418732",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 375418732,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTQxODczMg==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-22T18:51:14Z",
          "updated_at": "2018-03-22T18:52:26Z",
          "author_association": "MEMBER",
          "body": "Thank you for your patience, @JunyiJ. This is coming together well now.\r\n\r\nThere are a couple of things that I can think of outstanding.\r\n\r\n1. As suggested by @felixxm, we can now remove `django_power`:\r\n    ```diff\r\n    diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\r\n    index a9753bb094..07b153cd22 100644\r\n    --- a/django/db/backends/sqlite3/base.py\r\n    +++ b/django/db/backends/sqlite3/base.py\r\n    @@ -6,2 +6,3 @@ import decimal\r\n     import math\r\n    +import operator\r\n     import re\r\n    @@ -170,3 +171,2 @@ class DatabaseWrapper(BaseDatabaseWrapper):\r\n             conn.create_function(\"django_format_dtdelta\", 3, _sqlite_format_dtdelta)\r\n    -        conn.create_function(\"django_power\", 2, _sqlite_power)\r\n             conn.create_function('LPAD', 3, _sqlite_lpad)\r\n    @@ -187,3 +187,3 @@ class DatabaseWrapper(BaseDatabaseWrapper):\r\n             conn.create_function('PI', 0, lambda: math.pi)\r\n    -        conn.create_function('POWER', 2, _sqlite_power)\r\n    +        conn.create_function('POWER', 2, operator.pow)\r\n             conn.create_function('RADIANS', 1, math.radians)\r\n    @@ -498,5 +498 @@ def _sqlite_rpad(text, length, fill_text):\r\n         return (text + fill_text * length)[:length]\r\n    -\r\n    -\r\n    -def _sqlite_power(x, y):\r\n    -    return x ** y\r\n    diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\r\n    index 10b064d966..65796ea8a2 100644\r\n    --- a/django/db/backends/sqlite3/operations.py\r\n    +++ b/django/db/backends/sqlite3/operations.py\r\n    @@ -274,6 +274,6 @@ class DatabaseOperations(BaseDatabaseOperations):\r\n         def combine_expression(self, connector, sub_expressions):\r\n    -        # SQLite doesn't have a power function, so we fake it with a\r\n    -        # user-defined function django_power that's registered in connect().\r\n    +        # SQLite doesn't have a POWER function, so we fake it with a\r\n    +        # user-defined function that's registered in connect().\r\n             if connector == '^':\r\n    -            return 'django_power(%s)' % ','.join(sub_expressions)\r\n    +            return 'POWER(%s)' % ','.join(sub_expressions)\r\n             return super().combine_expression(connector, sub_expressions)\r\n    ```\r\n\r\n2. I raised the issue of input values being `DecimalField` and coming out as `FloatField`.\r\n\r\n    The functions `ACos`, `ASin`, `ATan`, `ATan2`, `Cos`, `Cot`, `Degrees`, `Log`, `Mod`, `Pi`, `Power`, `Radians`, `Sin`, `Sqrt` and `Tan` all declare `output_field = FloatField()`.\r\n\r\n    Firstly, this doesn't seem consistent as some functions are missing this, e.g. `Ln`. It makes sense that `IntegerField` becomes `FloatField`, but I'd expect `DecimalField` to stay `DecimalField`.\r\n\r\n    One way this could be achieved would be via a hack similar to this:\r\n   https://github.com/django/django/blob/d549b8805053d4b064bf492ba90e90db5d7e2a6b/django/db/models/functions/window.py#L49-L51\r\n    But as a mixin so that it can be added easily to each of the math functions that require it:\r\n    ```python\r\n    class MathOutputFieldMixin:\r\n        def _resolve_output_field(self):\r\n            sources = self.get_source_expressions()\r\n            if any(isinstance(s.output_field, DecimalField) for s in sources):\r\n                return DecimalField()\r\n            else:\r\n                return FloatField()\r\n    ```\r\n    I'd like some opinion on this from @felixxm and @timgraham before you spend time implementing it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/375418732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/375472463",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-375472463",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 375472463,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTQ3MjQ2Mw==",
          "user": {
            "login": "JunyiJ",
            "id": 8421173,
            "node_id": "MDQ6VXNlcjg0MjExNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JunyiJ",
            "html_url": "https://github.com/JunyiJ",
            "followers_url": "https://api.github.com/users/JunyiJ/followers",
            "following_url": "https://api.github.com/users/JunyiJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/JunyiJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JunyiJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JunyiJ/subscriptions",
            "organizations_url": "https://api.github.com/users/JunyiJ/orgs",
            "repos_url": "https://api.github.com/users/JunyiJ/repos",
            "events_url": "https://api.github.com/users/JunyiJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JunyiJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-22T22:03:28Z",
          "updated_at": "2018-03-22T22:03:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @pope1ni, I revised the code based on your suggestions except the output_field(Though I think it is a great idea to use output_field_reolved, I will wait to see whether there is different opinion). There are several issues that I noticed:\r\n1) For the log(a,b)function, different database behaves differently. Some use log(base, num) and some use log(num, base).\r\n2) Some data base doesn't support mod(double precision, double precision). I guess that is the reason why I didn't include the tests on float for the mod function.\r\n3) Some data base doesn't support log(double precision, double precision). I guess that is the reason why I didn't include the tests on float for the mod function.\r\n\r\nFor cases 2) and 3) Do you think it is OK to remove the tests  on float?\r\n\r\nThanks,\r\nJunyi",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/375472463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/376196892",
          "html_url": "https://github.com/django/django/pull/9622#issuecomment-376196892",
          "issue_url": "https://api.github.com/repos/django/django/issues/9622",
          "id": 376196892,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjE5Njg5Mg==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-26T14:59:59Z",
          "updated_at": "2018-03-26T14:59:59Z",
          "author_association": "MEMBER",
          "body": "Hi @JunyiJ,\r\n\r\nI've made a number of fixes that you can pull into your branch @ https://github.com/JunyiJ/django/pull/1:\r\n\r\n- Simplified the type casting for `Log()` and `Mod()` on PostgreSQL.\r\n  *(The issue was that a value is needed for `max_digits` and `decimal_places`.)*\r\n- We no longer cast `DecimalField` to `FloatField` for `output_field`.\r\n- Added type assertions to tests to complement the `output_field` stuff.\r\n- Added missing tests for `Round()`.\r\n- Fixed the problem with `Log()` on the SpatiaLite backend.\r\n- Various other bits of tidying in the tests.\r\n\r\nI've noted that `ATAN2` was added to SpatiaLite v4.3.0 which also seems to exhibit problems but I think Django's Jenkins currently uses < v4.3.0, so `math.atan2` is still being used.\r\n\r\nSee http://www.gaia-gis.it/gaia-sins/spatialite-sql-4.3.0.html#math\r\n\r\nBug filed for Log() on SpatiaLite: https://www.gaia-gis.it/fossil/libspatialite/tktview?name=8f59ddebf0",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/376196892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/15687",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/15687/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/15687/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/15687/events",
      "html_url": "https://github.com/django/django/pull/15687",
      "id": 1233940767,
      "node_id": "PR_kwDOAD-Lgs43t9g8",
      "number": 15687,
      "title": "Fixed #33308 -- Added support for psycopg version 3",
      "user": {
        "login": "apollo13",
        "id": 81547,
        "node_id": "MDQ6VXNlcjgxNTQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apollo13",
        "html_url": "https://github.com/apollo13",
        "followers_url": "https://api.github.com/users/apollo13/followers",
        "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
        "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
        "organizations_url": "https://api.github.com/users/apollo13/orgs",
        "repos_url": "https://api.github.com/users/apollo13/repos",
        "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
        "received_events_url": "https://api.github.com/users/apollo13/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 73,
      "created_at": "2022-05-12T12:52:50Z",
      "updated_at": "2023-04-11T11:48:54Z",
      "closed_at": "2022-12-15T06:35:29Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/15687",
        "html_url": "https://github.com/django/django/pull/15687",
        "diff_url": "https://github.com/django/django/pull/15687.diff",
        "patch_url": "https://github.com/django/django/pull/15687.patch",
        "merged_at": "2022-12-15T06:35:29Z"
      },
      "body": "What did I do? I took\r\nhttps://github.com/dvarrazzo/django-psycopg3-backend and blackified it +\r\nported over most (all?) new commits. I am now opening this on GitHub to\r\nbe able to nicely diff and start a discussion about whether we can\r\nsupport psycopg2 & 3 easiyl from the same codebase (I think we can).\r\n\r\n----\r\nI (i.e. @felixxm) have the following plan to move this forward:\r\n- [x]  merge #16245,\r\n- [x]  squash commits,\r\n- [x]  rebase,\r\n- [x]  revert unnecessary changes, e.g.\r\n  - [x]  https://github.com/django/django/pull/15687#discussion_r1036784854\r\n- [x]  merge more small cleanups:\r\n  - #16345\r\n  - #16346\r\n  - #16347\r\n  - #16351\r\n  - #16352\r\n  - #16353\r\n  - #16362\r\n  - #16363\r\n  - #16368\r\n  - #16371\r\n  - 2f38f7b8f9bd65905dc6bec4f3e2a30b5da8e338\r\n  - 1d90c9b1132482d446ca8375c151e894002c9e8d\r\n  - db7bb3b64e469fbb5c79e7b5b2fcb890434aa60f\r\n- [x]  push (or wait) for docs changes,\r\n- [x]  move import changes to a separate PR:\r\n  - 2ebfbd894e21e1656c1e1f32d98b8df7a32d3649\r\n- [x]  make detailed review,\r\n- [x]  push (or wait) for final edits,\r\n- [x]  merge :tada: ",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/15687/reactions",
        "total_count": 80,
        "+1": 11,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 46,
        "rocket": 23,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/15687/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1125216585",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1125216585",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1125216585,
          "node_id": "IC_kwDOAD-Lgs5DEXFJ",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-05-12T16:51:24Z",
          "updated_at": "2022-05-12T16:51:24Z",
          "author_association": "MEMBER",
          "body": "Looking through the code base there are quite a few areas where it would probably be easier if we just assumed that if psycopg3 is installed that we want to use it; this might get a bit more fun for testing (extra environment, but realistically speaking we want to be on psycopg3 only in the longrun anways\u2026)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1125216585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1125410295",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1125410295",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1125410295,
          "node_id": "IC_kwDOAD-Lgs5DFGX3",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-05-12T20:51:02Z",
          "updated_at": "2022-05-12T20:51:02Z",
          "author_association": "MEMBER",
          "body": "We are down to three failures :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1125410295/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 2,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1126913281",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1126913281",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1126913281,
          "node_id": "IC_kwDOAD-Lgs5DK1UB",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-05-15T11:18:12Z",
          "updated_at": "2022-05-15T11:18:12Z",
          "author_association": "MEMBER",
          "body": "@timgraham I'd love if you could look over this and maybe test your cockroachdb backend against this. It would be great if I don't fully break it :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1126913281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1133798092",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1133798092",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1133798092,
          "node_id": "IC_kwDOAD-Lgs5DlGLM",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-05-22T01:27:45Z",
          "updated_at": "2022-05-22T01:27:45Z",
          "author_association": "MEMBER",
          "body": "Besides the issue in `SchemaLoggerTests`, there's one other regression with psycopg2. (I'll work through the failures with psycopg3 later).\r\n```\r\n======================================================================\r\nFAIL: test_orders_nulls_first_on_filtered_subquery (ordering.tests.OrderingTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/tim/code/django/tests/ordering/tests.py\", line 199, in test_orders_nulls_first_on_filtered_subquery\r\n    self.assertQuerysetEqualReversible(\r\n  File \"/home/tim/code/django/tests/ordering/tests.py\", line 129, in assertQuerysetEqualReversible\r\n    self.assertSequenceEqual(queryset.reverse(), list(reversed(sequence)))\r\nAssertionError: Sequences differ: <QuerySet [<Author: Name 3>, <Author: Name 1>, <Author: Name 2>]> != [<Author: Name 2>, <Author: Name 1>, <Author: Name 3>]\r\n\r\nFirst differing element 0:\r\n<Author: Name 3>\r\n<Author: Name 2>\r\n\r\n- <QuerySet [<Author: Name 3>, <Author: Name 1>, <Author: Name 2>]>\r\n? ----------               ^                                   ^  -\r\n\r\n+ [<Author: Name 2>, <Author: Name 1>, <Author: Name 3>]\r\n?                ^                                   ^\r\n```\r\nThe old SQL:\r\n```sql\r\n SELECT DISTINCT \"ordering_author\".\"id\",\r\n                \"ordering_author\".\"name\",\r\n                \"ordering_author\".\"editor_id\",\r\n                (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n                 FROM   \"ordering_article\" U0\r\n                 WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                          AND Upper(U0.\"headline\" :: text) LIKE Upper(\r\n                              '%Article%') )\r\n                 GROUP  BY U0.\"author_id\") AS \"last_date\",\r\n                (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n                 FROM   \"ordering_article\" U0\r\n                 WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                          AND Upper(U0.\"headline\" :: text) LIKE Upper(\r\n                              '%Article%') )\r\n                 GROUP  BY U0.\"author_id\") IS NULL,\r\n                (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n                 FROM   \"ordering_article\" U0\r\n                 WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                          AND Upper(U0.\"headline\" :: text) LIKE Upper(\r\n                              '%Article%') )\r\n                 GROUP  BY U0.\"author_id\")\r\nFROM   \"ordering_author\"\r\nORDER  BY (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n           FROM   \"ordering_article\" U0\r\n           WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                    AND Upper(U0.\"headline\" :: text) LIKE Upper('%Article%') )\r\n           GROUP  BY U0.\"author_id\") IS NULL,\r\n          (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n           FROM   \"ordering_article\" U0\r\n           WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                    AND Upper(U0.\"headline\" :: text) LIKE Upper('%Article%') )\r\n           GROUP  BY U0.\"author_id\") DESC  \r\n```\r\n\r\n\r\nThe new SQL: \r\n```sql\r\n SELECT DISTINCT \"ordering_author\".\"id\",\r\n                \"ordering_author\".\"name\",\r\n                \"ordering_author\".\"editor_id\",\r\n                (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n                 FROM   \"ordering_article\" U0\r\n                 WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                          AND Upper(U0.\"headline\" :: text) LIKE Upper(\r\n                              '%Article%') )\r\n                 GROUP  BY U0.\"author_id\") AS \"last_date\",\r\n                (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n                 FROM   \"ordering_article\" U0\r\n                 WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                          AND Upper(U0.\"headline\" :: text) LIKE Upper(\r\n                              '%Article%') )\r\n                 GROUP  BY U0.\"author_id\") IS NULL,\r\n                (SELECT Max(U0.\"pub_date\") AS \"last_date\"\r\n                 FROM   \"ordering_article\" U0\r\n                 WHERE  ( U0.\"author_id\" = ( \"ordering_author\".\"id\" )\r\n                          AND Upper(U0.\"headline\" :: text) LIKE Upper(\r\n                              '%Article%') )\r\n                 GROUP  BY U0.\"author_id\")\r\nFROM   \"ordering_author\"\r\nORDER  BY 5 DESC  \r\n```\r\nIt might be that because CockroachDB has `DatabaseFeatures.nulls_order_largest = False` (unlike PostgreSQL), the loss of the second subquery in the `ORDER BY` is problematic.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1133798092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1146762051",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1146762051",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1146762051,
          "node_id": "IC_kwDOAD-Lgs5EWjND",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-06-05T08:12:51Z",
          "updated_at": "2022-06-05T08:12:51Z",
          "author_association": "MEMBER",
          "body": "> It might be that because CockroachDB has `DatabaseFeatures.nulls_order_largest = False` (unlike PostgreSQL), the loss of the second subquery in the `ORDER BY` is problematic.\r\n\r\nThis is probably a result of https://github.com/django/django/pull/15687/files#diff-f58de2deaccecd2d53199c5ca29e3e1050ec2adb80fb057cdfc0b4e6accdf14fR753-R769 but if it looses the second `ORDER BY` then this might be a problem in the linked code and not in cdb.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1146762051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1146767184",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1146767184",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1146767184,
          "node_id": "IC_kwDOAD-Lgs5EWkdQ",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-06-05T08:51:34Z",
          "updated_at": "2022-06-05T08:51:34Z",
          "author_association": "MEMBER",
          "body": "@timgraham I can reproduce your query issue when I set `supports_order_by_nulls_modifier = False` (which it probably is on old cockroachdb versions: https://github.com/cockroachdb/django-cockroachdb/blob/master/django_cockroachdb/features.py#L60 -- did you test against an old version?). That said, the combination of `supports_order_by_nulls_modifier = False` & `supports_order_column_alias = True` certainly shows there is a problem in the new code.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1146767184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1149036759",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1149036759",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1149036759,
          "node_id": "IC_kwDOAD-Lgs5EfOjX",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-06-07T18:42:36Z",
          "updated_at": "2022-06-07T18:42:36Z",
          "author_association": "MEMBER",
          "body": "> @timgraham I can reproduce your query issue when I set `supports_order_by_nulls_modifier = False` (which it probably is on old cockroachdb versions: https://github.com/cockroachdb/django-cockroachdb/blob/master/django_cockroachdb/features.py#L60 -- did you test against an old version?). That said, the combination of `supports_order_by_nulls_modifier = False` & `supports_order_column_alias = True` certainly shows there is a problem in the new code.\r\n\r\nYes, the failure is only present on older versions of CockroachDB.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1149036759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1163044910",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1163044910",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1163044910,
          "node_id": "IC_kwDOAD-Lgs5FUqgu",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-06-22T12:37:23Z",
          "updated_at": "2022-06-22T12:37:23Z",
          "author_association": "MEMBER",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1163044910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1180037348",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1180037348",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1180037348,
          "node_id": "IC_kwDOAD-Lgs5GVfDk",
          "user": {
            "login": "auvipy",
            "id": 6212603,
            "node_id": "MDQ6VXNlcjYyMTI2MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6212603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auvipy",
            "html_url": "https://github.com/auvipy",
            "followers_url": "https://api.github.com/users/auvipy/followers",
            "following_url": "https://api.github.com/users/auvipy/following{/other_user}",
            "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions",
            "organizations_url": "https://api.github.com/users/auvipy/orgs",
            "repos_url": "https://api.github.com/users/auvipy/repos",
            "events_url": "https://api.github.com/users/auvipy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auvipy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-07-11T07:00:54Z",
          "updated_at": "2022-07-11T07:00:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "wow all tests passing! great work",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1180037348/reactions",
            "total_count": 9,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 9,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1208541788",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1208541788",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1208541788,
          "node_id": "IC_kwDOAD-Lgs5ICOJc",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-08T19:49:57Z",
          "updated_at": "2022-08-08T19:49:57Z",
          "author_association": "MEMBER",
          "body": "@timgraham Any chance you could test the latest changes against cockroach db?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1208541788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1216752535",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1216752535",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1216752535,
          "node_id": "IC_kwDOAD-Lgs5IhiuX",
          "user": {
            "login": "gnat",
            "id": 24665,
            "node_id": "MDQ6VXNlcjI0NjY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnat",
            "html_url": "https://github.com/gnat",
            "followers_url": "https://api.github.com/users/gnat/followers",
            "following_url": "https://api.github.com/users/gnat/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnat/subscriptions",
            "organizations_url": "https://api.github.com/users/gnat/orgs",
            "repos_url": "https://api.github.com/users/gnat/repos",
            "events_url": "https://api.github.com/users/gnat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnat/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-16T14:55:16Z",
          "updated_at": "2022-08-19T00:06:39Z",
          "author_association": "NONE",
          "body": "Just tested this with CockroachDB on [1043b36](https://github.com/django/django/commit/1043b3655d02d277a5c200788d381d8a9ed078d9). First impressions: Seems to work! Brilliant job.\r\n\r\nForgive my noobiness. This is a really exciting feature to me-- I'm really eager to see a release, so I wanted to post a report.\r\n\r\nhttps://github.com/cockroachdb/django-cockroachdb Needs to be updated with psycopg3 @timgraham. Was able to get it running by changing the following lines:\r\n\r\n* In `django_cockroachdb/base.py`\r\n```python\r\nimport psycopg\r\n#import psycopg2  # noqa\r\n#import psycopg2.extensions  # noqa\r\n#import psycopg2.extras  # noqa\r\n```\r\n* In `django_cockroachdb/operations.py`\r\n```python\r\nfrom psycopg import errors\r\n#from psycopg2 import errorcodes\r\n#.... I'm sure this will break, but I was just trying to get it running.\r\nif (getattr(exc.__cause__, 'pgcode', '') != errors.SERIALIZATION_FAILURE or\r\n#if (getattr(exc.__cause__, 'pgcode', '') != errorcodes.SERIALIZATION_FAILURE or\r\n```\r\n* Commented out version check in `django_cockroachdb/utils.py`\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/24665/184909616-520f48a7-4244-4559-a3dd-b3d2335f794c.png)\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1216752535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1220929994",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1220929994",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1220929994,
          "node_id": "IC_kwDOAD-Lgs5IxenK",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-19T17:38:33Z",
          "updated_at": "2022-08-19T17:38:33Z",
          "author_association": "MEMBER",
          "body": "@apollo13 Will you tackle the PostGIS backend? (First issue: `from psycopg2 import Binary` in `django/contrib/gis/db/backends/postgis/adapter.py`)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1220929994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1220950882",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1220950882",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1220950882,
          "node_id": "IC_kwDOAD-Lgs5Ixjti",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-19T17:51:00Z",
          "updated_at": "2022-08-19T17:51:00Z",
          "author_association": "MEMBER",
          "body": "@timgraham At some point yes, but probably not before I have weeded out the remaining issues with bind params in the core backend.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1220950882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1221194937",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1221194937",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1221194937,
          "node_id": "IC_kwDOAD-Lgs5IyfS5",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-20T01:03:16Z",
          "updated_at": "2022-08-20T01:03:16Z",
          "author_association": "MEMBER",
          "body": "Great! Your last commit here for EXTRACT params fixed failures on CockroachDB. Most of the remaining failures are in the following categories:\r\n* `could not determine data type of placeholder $1`\r\n* `column \"name\" must appear in the GROUP BY clause or be used in an aggregate function`\r\n* `unsupported binary operator: <decimal> / <float> (desired <decimal>)`\r\n\r\nI'm guessing that first category is what you're referring to in your last comment.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1221194937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1221395814",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1221395814",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1221395814,
          "node_id": "IC_kwDOAD-Lgs5IzQVm",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-20T19:49:23Z",
          "updated_at": "2022-08-20T19:49:23Z",
          "author_association": "MEMBER",
          "body": "Yes, bullets 1 & 2 are expected to show up currently. I just pushed (a rather ugly) gis support commit.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1221395814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1256999974",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1256999974",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1256999974,
          "node_id": "IC_kwDOAD-Lgs5K7Ewm",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-09-24T15:57:57Z",
          "updated_at": "2022-09-24T15:58:16Z",
          "author_association": "MEMBER",
          "body": "Okay down to one failure that will probably require some work. Reviews welcome! GIS Tests pass also now.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1256999974/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1272541127",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1272541127",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1272541127,
          "node_id": "IC_kwDOAD-Lgs5L2W_H",
          "user": {
            "login": "pwtail",
            "id": 16048672,
            "node_id": "MDQ6VXNlcjE2MDQ4Njcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16048672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pwtail",
            "html_url": "https://github.com/pwtail",
            "followers_url": "https://api.github.com/users/pwtail/followers",
            "following_url": "https://api.github.com/users/pwtail/following{/other_user}",
            "gists_url": "https://api.github.com/users/pwtail/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pwtail/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pwtail/subscriptions",
            "organizations_url": "https://api.github.com/users/pwtail/orgs",
            "repos_url": "https://api.github.com/users/pwtail/repos",
            "events_url": "https://api.github.com/users/pwtail/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pwtail/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-09T13:18:38Z",
          "updated_at": "2022-10-20T11:40:49Z",
          "author_association": "NONE",
          "body": "Hi @apollo13 , what stage this is currently at? Maybe I can help you with something? See, [my project](https://github.com/Bi-Coloured-Python-Rock-Snake/readme) needs this backend badly :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1272541127/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1272826683",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1272826683",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1272826683,
          "node_id": "IC_kwDOAD-Lgs5L3cs7",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-10T06:12:31Z",
          "updated_at": "2022-10-10T06:12:31Z",
          "author_association": "MEMBER",
          "body": "@pwtail Well code review here and testing your code against this branch with psycopg3 would be a massive help.\r\n\r\nI'll rebase & update the branch over the next days (parts of the required changes have already be merged to main)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1272826683/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1272913933",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1272913933",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1272913933,
          "node_id": "IC_kwDOAD-Lgs5L3yAN",
          "user": {
            "login": "pwtail",
            "id": 16048672,
            "node_id": "MDQ6VXNlcjE2MDQ4Njcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16048672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pwtail",
            "html_url": "https://github.com/pwtail",
            "followers_url": "https://api.github.com/users/pwtail/followers",
            "following_url": "https://api.github.com/users/pwtail/following{/other_user}",
            "gists_url": "https://api.github.com/users/pwtail/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pwtail/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pwtail/subscriptions",
            "organizations_url": "https://api.github.com/users/pwtail/orgs",
            "repos_url": "https://api.github.com/users/pwtail/repos",
            "events_url": "https://api.github.com/users/pwtail/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pwtail/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-10T07:50:47Z",
          "updated_at": "2022-10-10T07:50:47Z",
          "author_association": "NONE",
          "body": "Thank you @apollo13 , already using your branch) ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1272913933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1289418294",
          "html_url": "https://github.com/django/django/pull/15687#issuecomment-1289418294",
          "issue_url": "https://api.github.com/repos/django/django/issues/15687",
          "id": 1289418294,
          "node_id": "IC_kwDOAD-Lgs5M2vY2",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-24T18:22:39Z",
          "updated_at": "2022-10-24T18:22:39Z",
          "author_association": "MEMBER",
          "body": "Hi folks,\r\n\r\nI have just rebased this PR to latest master. Now that all prerequisites for this PR are in further rebasing should get easier and not require manual intervention. I think the PR is starting to become solid, there are some areas though where I'd highly appreciate some help:\r\n\r\n * PostGIS in general. The adapter registration there is imo still rather ugly, I am open to creative ideas :)\r\n * Is my new handling of registering extension sound? \r\n * Do the new `as_postgresql` make sense everywhere?\r\n * Ideas on https://github.com/django/django/pull/15687/files#diff-530111bb812ef292d6db3ab0285e128bb585992d02d47dcca872d2e8c9b592daR586 \r\n * Is `compose` used correctly and consistently or are there other variants still around in the codebase?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1289418294/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/14437",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/14437/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/14437/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/14437/events",
      "html_url": "https://github.com/django/django/pull/14437",
      "id": 899140866,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjUwODgxNTIy",
      "number": 14437,
      "title": "Fixed #33012 -- Added Redis cache backend.",
      "user": {
        "login": "abbasidaniyal",
        "id": 36009198,
        "node_id": "MDQ6VXNlcjM2MDA5MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abbasidaniyal",
        "html_url": "https://github.com/abbasidaniyal",
        "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
        "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
        "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
        "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
        "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
        "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
        "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 45,
      "created_at": "2021-05-24T00:10:33Z",
      "updated_at": "2021-09-25T10:28:41Z",
      "closed_at": "2021-09-14T14:18:08Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/14437",
        "html_url": "https://github.com/django/django/pull/14437",
        "diff_url": "https://github.com/django/django/pull/14437.diff",
        "patch_url": "https://github.com/django/django/pull/14437.patch",
        "merged_at": "2021-09-14T14:18:08Z"
      },
      "body": "ticket-33012\r\n\r\nThis PR is in accordance with this [GSoC project](https://summerofcode.withgoogle.com/projects/#6292871491092480)\r\nThe detailed proposal can be found [here](https://docs.google.com/document/d/1_gIa_17uCNlwJTmqiMLkiVtRgTOD2MvHpy4NNFvKBWc/edit?usp=sharing)\r\n\r\nThis PR aims at adding support for Redis to be used as a caching backend with Django. As redis is the most popular caching backend, adding it to django.core.cache module would be a great addition for developers who previously had to rely on the use of third party packages.\r\n\r\nMajor Tasks : \r\n- [x] Create RedisCache as a subclass of the BaseCache class and implement methods\r\n- [x] Create PickleSerializer to serialize data before storing it into redis\r\n- [x] Extend existing tests for new class\r\n- [x] Add Documentation and Release Notes\r\n- [x] Add additional tests for RedisCache and RedisCacheClient\r\n- [x] Moving `PickleSerializer` from `django.contrib.sessions.serializers` to `django.core.serializers.base`. See [comment](https://github.com/django/django/pull/14437/#discussion_r699197718) #14827\r\n\r\nRemaining Tasks :\r\n- [x] Waiting for #14802\r\n- [ ] Documenting extra arguments. See [comment](https://github.com/django/django/pull/14437/#discussion_r699194492)\r\n\r\nFuture Tasks : \r\n- [ ] Add support for providing `username` and `password` in `OPTIONS`. This will be possible in the upcoming version of redis-py\r\n- [ ] Milli second support (To be discussed)\r\n",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/14437/reactions",
        "total_count": 61,
        "+1": 24,
        "-1": 0,
        "laugh": 6,
        "hooray": 31,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/14437/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/846650949",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-846650949",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 846650949,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjY1MDk0OQ==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-24T00:15:36Z",
          "updated_at": "2021-05-24T00:15:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @carltongibson \r\nSo I was able to get a quick and simple implementation up and running. However, there are several decisions that I made for simplicity, like using pickle for serializing data. \r\nI am still not sure how shall be handle multiple servers. Do we setup a sharding based client (like memcached) or should it cater to a replication based setup with a \"Primary and replica\" based setup?\r\n\r\nDo let me know what improvement I should make and how I shall proceed!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/846650949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/848589959",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-848589959",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 848589959,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODU4OTk1OQ==",
          "user": {
            "login": "WisdomPill",
            "id": 5825811,
            "node_id": "MDQ6VXNlcjU4MjU4MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5825811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WisdomPill",
            "html_url": "https://github.com/WisdomPill",
            "followers_url": "https://api.github.com/users/WisdomPill/followers",
            "following_url": "https://api.github.com/users/WisdomPill/following{/other_user}",
            "gists_url": "https://api.github.com/users/WisdomPill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WisdomPill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WisdomPill/subscriptions",
            "organizations_url": "https://api.github.com/users/WisdomPill/orgs",
            "repos_url": "https://api.github.com/users/WisdomPill/repos",
            "events_url": "https://api.github.com/users/WisdomPill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WisdomPill/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-26T08:48:14Z",
          "updated_at": "2021-05-26T08:48:14Z",
          "author_association": "NONE",
          "body": "Sorry for stepping in. \r\n\r\nI have some questions, isn't this what [jazzband/django-redis](https://github.com/jazzband/django-redis) is doing?\r\n\r\nWill there be some code copying, what will be the faith of it?\r\nBy the way `django-redis` is already somewhat compatible with django api and widely used by the community.\r\n\r\nShould there be any discussion about it? Has it ever been one?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/848589959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/848613586",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-848613586",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 848613586,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODYxMzU4Ng==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-26T09:21:40Z",
          "updated_at": "2021-05-26T09:21:40Z",
          "author_association": "MEMBER",
          "body": "Hey @WisdomPill \u2014 The proposal is to add a Redis backend to core. \r\n\r\nIt will be simpler than that provided by `django-redis`, for instance customising the serialiser is out-of-scope for the initial pass. \r\n\r\nIt's been [discussed quite a few times on django-developers](https://groups.google.com/g/django-developers/search?q=redis). The swinger was [last year's survey showing approx twice as many users opting for Redis (where we have no backend) over memcached (where we have several)](https://www.djangoproject.com/weblog/2020/jul/28/community-survey-2020/).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/848613586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/849174489",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-849174489",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 849174489,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTE3NDQ4OQ==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-26T23:00:32Z",
          "updated_at": "2021-05-26T23:00:32Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hi @abbasidaniyal \u2014 good speedy start! \r\n> \r\n> The initial thing is tests. Can you look at the coverage for the existing backends and adapt the tests for the new backend? Then, that immediately gives us a todo list in terms of API.\r\n\r\nSure. I'll start working on the tests. Will be sharing coverage reports soon!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/849174489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/849178453",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-849178453",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 849178453,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTE3ODQ1Mw==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-26T23:09:59Z",
          "updated_at": "2021-05-26T23:10:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Sorry for stepping in.\r\n> \r\n> I have some questions, isn't this what [jazzband/django-redis](https://github.com/jazzband/django-redis) is doing?\r\n> \r\n> Will there be some code copying, what will be the faith of it?\r\n> By the way `django-redis` is already somewhat compatible with django api and widely used by the community.\r\n> \r\n> Should there be any discussion about it? Has it ever been one?\r\n\r\nHey @WisdomPill!\r\nYou can find a link to my proposal [here](https://docs.google.com/document/d/1_gIa_17uCNlwJTmqiMLkiVtRgTOD2MvHpy4NNFvKBWc/edit?usp=sharing). A lot of inspiration is taken from the `django-redis` package as mentioned in the proposal. There might be some code similarities with `django-redis` as the end-goal of remains the same, that is, connecting `redis-py` client with the django caching framework. \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/849178453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/851478073",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-851478073",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 851478073,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTQ3ODA3Mw==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-31T13:04:50Z",
          "updated_at": "2021-05-31T13:11:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @carltongibson! \r\nSo I was going trying to work on the coverages of each backend. However, one tests keeps failing. \r\n`cache.tests.CreateCacheTableForDBCacheTests.test_createcachetable_observes_database_router`\r\n```\r\n======================================================================\r\nFAIL: test_createcachetable_observes_database_router (cache.tests.CreateCacheTableForDBCacheTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/daniyal/Desktop/django/django/test/utils.py\", line 430, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/home/daniyal/Desktop/django/tests/cache/tests.py\", line 1238, in test_createcachetable_observes_database_router\r\n    management.call_command('createcachetable', database='other', verbosity=0)\r\n  File \"/home/daniyal/Desktop/django/django/test/testcases.py\", line 86, in __exit__\r\n    self.test_case.assertEqual(\r\nAssertionError: 1 != 5 : 1 queries executed, 5 expected\r\nCaptured queries were:\r\n1. \r\n            SELECT c.relname,\r\n            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END\r\n            FROM pg_catalog.pg_class c\r\n            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\r\n            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')\r\n                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')\r\n                AND pg_catalog.pg_table_is_visible(c.oid)\r\n        \r\n\r\n----------------------------------------------------------------------\r\n```\r\n\r\nI did not completely understand the reason for this. \r\nMy test settings were\r\n```\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.postgresql',\r\n        'NAME': 'mydb_default',\r\n        'USER': 'myuser',\r\n        'PASSWORD': 'password',\r\n        'HOST': 'localhost',\r\n        'PORT': '5432',\r\n    },\r\n    'other': {\r\n        'ENGINE': 'django.db.backends.postgresql',\r\n        'NAME': 'mydb_other',\r\n        'USER': 'myuser',\r\n        'PASSWORD': 'password',\r\n        'HOST': 'localhost',\r\n        'PORT': '5432',\r\n    }\r\n}\r\n\r\nCACHES = {\r\n    \"default\": {\r\n        \"BACKEND\": \"django.core.cache.backends.db.DatabaseCache\",\r\n        \"LOCATION\": \"my_cache_table\",\r\n    },\r\n}\r\n```\r\nTried and tested with SQLite as well, and got the same results. \r\nError with SQLite\r\n```\r\n======================================================================\r\nFAIL: test_createcachetable_observes_database_router (cache.tests.CreateCacheTableForDBCacheTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/daniyal/Desktop/django/django/test/utils.py\", line 430, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/home/daniyal/Desktop/django/tests/cache/tests.py\", line 1238, in test_createcachetable_observes_database_router\r\n    management.call_command('createcachetable', database='other', verbosity=0)\r\n  File \"/home/daniyal/Desktop/django/django/test/testcases.py\", line 86, in __exit__\r\n    self.test_case.assertEqual(\r\nAssertionError: 1 != 5 : 1 queries executed, 5 expected\r\nCaptured queries were:\r\n1. \r\n            SELECT name, type FROM sqlite_master\r\n            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'\r\n            ORDER BY name\r\n\r\n----------------------------------------------------------------------\r\n```\r\n\r\nHowever, when I comment out this line, which call `createcachetable`, the test passes.\r\nhttps://github.com/django/django/blob/d270dd584e0af12fe6229fb712d0704c232dc7e5/django/db/backends/base/creation.py#L92\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/851478073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/851481785",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-851481785",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 851481785,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTQ4MTc4NQ==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-31T13:10:41Z",
          "updated_at": "2021-05-31T13:10:41Z",
          "author_association": "MEMBER",
          "body": "Hey @abbasidaniyal \u2014 super. That's what we like to see. \ud83d\ude03\n\nCan you push your latest and I will take a look hopefully tomorrow. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/851481785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/851496349",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-851496349",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 851496349,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTQ5NjM0OQ==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-05-31T13:34:47Z",
          "updated_at": "2021-05-31T13:34:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hey @abbasidaniyal \u2014 super. That's what we like to see. \r\n> \r\n> Can you push your latest and I will take a look hopefully tomorrow.\r\n\r\nI'm currently running the tests against the `main` branch. \r\nSharing the coverage results as screenshots [here](https://docs.google.com/document/d/1l2NiwZjNPCKYm5QLaQoWOtt7o4nt7nReLceVGF3DYks/edit?usp=sharing)\r\n\r\nI'll start adapting these existing tests for the new backend now!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/851496349/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/853433318",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-853433318",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 853433318,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzQzMzMxOA==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-02T22:51:38Z",
          "updated_at": "2021-06-02T22:51:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @carltongibson !\r\nI've just pushed the lastest update that I have. I've adapted the existsing tests for the new backend. The tests are failing at two instance\r\n- Culling\r\n- zero and negative timeout handling : Redis-py does not support 0 or negative timeouts. I have implemented the `get_backend_timeout` similar to the memcache backend but I'm still not sure about how to handle 0 timeout. Ideally it should not store the key in the first place.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/853433318/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/864472691",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-864472691",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 864472691,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDQ3MjY5MQ==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-19T22:46:04Z",
          "updated_at": "2021-06-19T22:46:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hey @carltongibson!\r\n> So I was going trying to work on the coverages of each backend. However, one tests keeps failing.\r\n> `cache.tests.CreateCacheTableForDBCacheTests.test_createcachetable_observes_database_router`\r\n> \r\n> ```\r\n> ======================================================================\r\n> FAIL: test_createcachetable_observes_database_router (cache.tests.CreateCacheTableForDBCacheTests)\r\n> ----------------------------------------------------------------------\r\n> Traceback (most recent call last):\r\n>   File \"/home/daniyal/Desktop/django/django/test/utils.py\", line 430, in inner\r\n>     return func(*args, **kwargs)\r\n>   File \"/home/daniyal/Desktop/django/tests/cache/tests.py\", line 1238, in test_createcachetable_observes_database_router\r\n>     management.call_command('createcachetable', database='other', verbosity=0)\r\n>   File \"/home/daniyal/Desktop/django/django/test/testcases.py\", line 86, in __exit__\r\n>     self.test_case.assertEqual(\r\n> AssertionError: 1 != 5 : 1 queries executed, 5 expected\r\n> Captured queries were:\r\n> 1. \r\n>             SELECT c.relname,\r\n>             CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END\r\n>             FROM pg_catalog.pg_class c\r\n>             LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\r\n>             WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')\r\n>                 AND n.nspname NOT IN ('pg_catalog', 'pg_toast')\r\n>                 AND pg_catalog.pg_table_is_visible(c.oid)\r\n>         \r\n> \r\n> ----------------------------------------------------------------------\r\n> ```\r\n> \r\n> I did not completely understand the reason for this.\r\n> My test settings were\r\n> \r\n> ```\r\n> DATABASES = {\r\n>     'default': {\r\n>         'ENGINE': 'django.db.backends.postgresql',\r\n>         'NAME': 'mydb_default',\r\n>         'USER': 'myuser',\r\n>         'PASSWORD': 'password',\r\n>         'HOST': 'localhost',\r\n>         'PORT': '5432',\r\n>     },\r\n>     'other': {\r\n>         'ENGINE': 'django.db.backends.postgresql',\r\n>         'NAME': 'mydb_other',\r\n>         'USER': 'myuser',\r\n>         'PASSWORD': 'password',\r\n>         'HOST': 'localhost',\r\n>         'PORT': '5432',\r\n>     }\r\n> }\r\n> \r\n> CACHES = {\r\n>     \"default\": {\r\n>         \"BACKEND\": \"django.core.cache.backends.db.DatabaseCache\",\r\n>         \"LOCATION\": \"my_cache_table\",\r\n>     },\r\n> }\r\n> ```\r\n> \r\n> Tried and tested with SQLite as well, and got the same results.\r\n> Error with SQLite\r\n> \r\n> ```\r\n> ======================================================================\r\n> FAIL: test_createcachetable_observes_database_router (cache.tests.CreateCacheTableForDBCacheTests)\r\n> ----------------------------------------------------------------------\r\n> Traceback (most recent call last):\r\n>   File \"/home/daniyal/Desktop/django/django/test/utils.py\", line 430, in inner\r\n>     return func(*args, **kwargs)\r\n>   File \"/home/daniyal/Desktop/django/tests/cache/tests.py\", line 1238, in test_createcachetable_observes_database_router\r\n>     management.call_command('createcachetable', database='other', verbosity=0)\r\n>   File \"/home/daniyal/Desktop/django/django/test/testcases.py\", line 86, in __exit__\r\n>     self.test_case.assertEqual(\r\n> AssertionError: 1 != 5 : 1 queries executed, 5 expected\r\n> Captured queries were:\r\n> 1. \r\n>             SELECT name, type FROM sqlite_master\r\n>             WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'\r\n>             ORDER BY name\r\n> \r\n> ----------------------------------------------------------------------\r\n> ```\r\n> \r\n> However, when I comment out this line, which call `createcachetable`, the test passes.\r\n> https://github.com/django/django/blob/d270dd584e0af12fe6229fb712d0704c232dc7e5/django/db/backends/base/creation.py#L92\r\n\r\n@carltongibson I was able to figure this one out. I was following the [documentation](https://docs.djangoproject.com/en/3.2/topics/cache/#database-caching) to setup the DatabaseCache.\r\n```\r\nCACHES = {\r\n    \"default\": {\r\n        \"BACKEND\": \"django.core.cache.backends.db.DatabaseCache\",\r\n        \"LOCATION\": \"my_cache_table\",\r\n    },\r\n}\r\n```\r\nHowever, I believe `my_cache_table` was conflicting with this\r\nhttps://github.com/django/django/blob/225d96533a8e05debd402a2bfe566487cc27d95f/tests/cache/tests.py#L1213-L1220\r\n\r\nSetting the \"LOCATION\" to some other table name leads to the test passing. \r\n\r\nMaybe we could mention it in the docs somewhere or update the test to check if duplicate table names exists? This is a little off-topic from this PR. Should I create a separate ticket for this? Or should we let it be for now?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/864472691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/867512460",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-867512460",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 867512460,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzUxMjQ2MA==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-24T10:07:00Z",
          "updated_at": "2021-06-24T10:07:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey!\r\nI've made the changes suggested by @pope1ni. I've updated the tests and added\r\n```\r\nredis_excluded_caches = {'cull', 'zero_cull'}\r\n...\r\n@override_settings(CACHES=caches_setting_for_tests(\r\n    base=RedisCache_params,\r\n    exclude=redis_excluded_caches\r\n))\r\nclass RedisCacheTests(BaseCacheTests, TestCase):\r\n    ...\r\n```\r\nNow only on test fails. Handling zero timeout. Redis-py does not support it natively and django expects to no set a key with zero timeout. I'm not sure at which level should this be handled. I was wondering if we perform the check in `get_backend_timeout` method and return a value (eg: None) or raise a suitable exception. \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/867512460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/867513355",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-867513355",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 867513355,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzUxMzM1NQ==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-24T10:08:15Z",
          "updated_at": "2021-06-24T10:08:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "@carltongibson I'm starting off with the documentation now. Should post updates in a few days!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/867513355/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/868460208",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-868460208",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 868460208,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2ODQ2MDIwOA==",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-25T12:20:02Z",
          "updated_at": "2021-06-25T12:23:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "> If `redis-py` isn't installed, or if Redis isn't running we get a couple of errors:\r\n> \r\n> ```\r\n> django.core.cache.backends.base.InvalidCacheBackendError: Could not find backend 'django.core.cache.backends.redis.RedisCache': No module named 'redis'\r\n> ```\r\n> \r\n\r\nShould I move the `import redis` line inside the `__init__` method of the RedisCache class? All memcache backend do that and the error raised when a binding is not installed is like this\r\n```\r\nModuleNotFoundError: No module named 'pymemcache'\r\n```\r\nIncluding `import redis` at the top leads to an error message as you mentioned above.\r\nI wanted to move the import command like this\r\n```\r\nclass RedisCache(BaseCache):\r\n    def __init__(self, server, params):\r\n        import redis\r\n        super().__init__(params)\r\n        if isinstance(server, str):\r\n            self._servers = re.split('[;,]', server)\r\n        else:\r\n            self._servers = server\r\n\r\n        self._class = RedisCacheClient\r\n        self._options = params.get('OPTIONS') or {}\r\n```\r\nHowever, this would lead to some refactoring of code where `redis.ConnectionPool` etc are used.\r\nWhat do you think about this?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/868460208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/868528262",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-868528262",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 868528262,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2ODUyODI2Mg==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-25T14:10:05Z",
          "updated_at": "2021-06-25T14:10:05Z",
          "author_association": "MEMBER",
          "body": "> Should I move the `import redis` line inside the `__init__` method of the RedisCache class? All memcache backend do that and the error raised when a binding is not installed is like this\r\n\r\nYes, we should do something like this. Although with `pymemcache` it is done in `PyMemcacheCache.__init__()` because `pymemcache` provides the client class. We're writing the client class ourselves, so we want `import redis` in `RedisCacheClient.__init__()`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/868528262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/879813847",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-879813847",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 879813847,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTgxMzg0Nw==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-14T11:28:13Z",
          "updated_at": "2021-09-08T05:42:05Z",
          "author_association": "MEMBER",
          "body": "Hi @carltongibson. It's coming on nicely, yes.\r\n\r\nThese are some of the highlights of things addressed:\r\n\r\n- Fixed handling of `default` value with `.get()` allowing for use of a sentinel value in other operations. (Allows stored `None`.)\r\n  - See https://github.com/django/django/pull/14437#discussion_r656105087 for details.\r\n- Fixed handling of `timeout` values, notably delete/expire if `0` and persist if `None`. (Redis treats timeouts as we would expect.)\r\n  - See the thread at https://github.com/django/django/pull/14437#discussion_r658226217 for details.\r\n  - Also see https://github.com/django/django/pull/14437#discussion_r658806487 for more.\r\n- Fixed naming and ordering so things align with other backends, notably the memcached ones. (Easier maintenance.)\r\n- Fixed some bugs where `write=True` wasn't passed. Made `write` a keyword-only argument.\r\n- Implemented optimized `.delete_many()` and `.has_key()` operations instead of relying on the base class methods.\r\n- Used pipelines in `.set_many()` to optimize handling of timeouts.\r\n- Pinned to `redis >= 3.0.0` based on https://github.com/django/django/pull/14437#pullrequestreview-692861563.\r\n- Removed base serializer class - not much point. Can revisit if we need something other than pickle.\r\n- Removed half-baked support for importing client classes from string because:\r\n  - Subclassing the backend class and overriding a class attribute is better.\r\n  - We should be able to avoid adding additional client classes by passing options.\r\n  - We can always add this back if the implementation really needs it.\r\n  - See https://github.com/django/django/pull/14437#discussion_r657927858 for more commentary.\r\n\r\nThere are some outstanding comments that still need to be addressed:\r\n\r\n- [ ] As mentioned in https://github.com/django/django/pull/14437#pullrequestreview-691776531 some operations still need to be implemented:\r\n  - Implement atomic/optimized `.incr()` using `Redis.incr()` which uses the `INCRBY` command.\r\n  - Implement atomic/optimized `.decr()` using `Redis.decr()` which uses the `DECRBY` command.\r\n- [ ] As Redis supports timeouts in milliseconds, do we want to allow that? (What are your thoughts @carltongibson?)\r\n  - It would be nice as it has often come up as a complaint that memcached doesn't support this.\r\n  - We would still keep `timeout` in floating point seconds for compatibility, but scale up in `.get_backend_timeout()`.\r\n  - Then we would switch over from `ex` to `px` and `.expire()` to `.pexpire()`, etc.\r\n- [x] Redis has 16 logical databases, so, although most people will use the default, we should allow configuration of that.\r\n  - See https://github.com/django/django/pull/14437#discussion_r658856381 for more details.\r\n\r\nOther things that need attention:\r\n\r\n- [x] Documentation. I've only made brief comments, but it should be looked at thoroughly.\r\n- [x] Release notes. None have been added yet. This will be a headline feature, obviously.\r\n- [x] Tests. Currently we're piggybacking off the cross-backend tests nicely. But are there any gaps or other specific things to test?\r\n- [ ] How the connection pooling, etc. works. I haven't reviewed this at all yet.\r\n  - For example, there is a lot of parsing stuff, but can't we just use [`redis.Redis.from_url()`](https://redis-py.readthedocs.io/en/stable/#redis.Redis.from_url) or [`redis.from_url()`](https://redis-py.readthedocs.io/en/stable/#redis.from_url)? \ud83d\ude09 \r\n- [ ] What `OPTIONS` do we explicitly want to handle before being passed on to the underlying library?\r\n  - We'll need to forward `**kwargs` at the very least so that users have the flexibility.\r\n  - Is there anything we want to set by default? Check out [`redis.Redis()`](https://redis-py.readthedocs.io/en/stable/#redis.Redis).\r\n\r\nOnce this is done, I think that it would be good to land this as a very simple backend that essentially mirrors what the memcached backends can do. So as long as we have one or multiple servers and that they can support UNIX sockets, IPv6, possibly TLS -- then we have a drop-in replacement.\r\n\r\nThat would be the first phase. Adding sharding, etc. could then be considered in a follow up PR. As long as we have a very simple implementation here and now, extending for other things should be easy. \r\n\r\nSome other thoughts:\r\n\r\n- We don't need to consider culling. That is only necessary for services that do not handle expiry themselves, e.g. databases.\r\n  - *Which is why it is not implemented for the memcached backends.*\r\n\r\nThanks @abbasidaniyal for all your efforts so far. This is coming along nicely.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/879813847/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/879864148",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-879864148",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 879864148,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTg2NDE0OA==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-14T12:51:25Z",
          "updated_at": "2021-07-14T12:51:25Z",
          "author_association": "MEMBER",
          "body": "Thanks @pope1ni. That's super helpful! ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/879864148/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886032735",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-886032735",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 886032735,
          "node_id": "IC_kwDOAD-Lgs40z8lf",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-24T10:24:54Z",
          "updated_at": "2021-07-24T10:24:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @pope1ni and @carltongibson \r\n\r\nAccording to the comments https://github.com/django/django/pull/14437#pullrequestreview-691776531, if we want to use the `redis.incr` or `redis.decr`, we would need to stop serializing the valus which are integers. I think this will create a mess as there would be too much to manual handling of values based on their types. As we are pickling the values, we can not directly use the `redis.incr` or `redis.decr` methods.\r\n\r\nI'm not sure how useful it is to support milli-second timeouts. `django-redis` has migrated to an approach which supports both seconds and milliseconds ( [refs](https://github.com/jazzband/django-redis/pull/508/files) ). \r\n\r\nWe can make the logical databases configurable via the url as well as a parameter in the options. I'll work on it.\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886032735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886044887",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-886044887",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 886044887,
          "node_id": "IC_kwDOAD-Lgs40z_jX",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-24T12:12:26Z",
          "updated_at": "2021-07-24T12:12:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "While using the `from_url` method, we can not provide `username` and `password` in the `OPTIONS`. Even if we pass them in the kwargs, [kwargs.update(...)](https://redis-py.readthedocs.io/en/stable/_modules/redis/connection.html#ConnectionPool.from_url) overrides it with the `username` and `password` from the URL, else it sets it to None. One solution is that we only allow username and password to be set using the \"LOCATION\" key only. Let me know what you feel. @pope1ni @carltongibson ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886044887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886063969",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-886063969",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 886063969,
          "node_id": "IC_kwDOAD-Lgs400ENh",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-24T14:51:51Z",
          "updated_at": "2021-07-24T14:51:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "The master branch of redis-py has updated the implementation of the `from_url` method. \r\nhttps://github.com/andymccurdy/redis-py/blob/627db540acd1f1f36db88290d74cbcd75f6bda0c/redis/connection.py#L951-L955\r\n\r\nHowever, the latest stable branch (3.5.3) still uses the old implementation.\r\n```\r\nif decode_components:\r\n    username = unquote(url.username) if url.username else None\r\n    password = unquote(url.password) if url.password else None\r\n    path = unquote(url.path) if url.path else None\r\n    hostname = unquote(url.hostname) if url.hostname else None\r\nelse:\r\n    username = url.username or None\r\n    password = url.password or None\r\n    path = url.path\r\n    hostname = url.hostname\r\n\r\nif url.scheme == 'unix':\r\n    url_options.update({\r\n                'username': username,\r\n                'password': password,\r\n                'path': path,\r\n                'connection_class': UnixDomainSocketConnection,    \r\n})\r\n\r\nelif url.scheme in ('redis', 'rediss'):\r\n    url_options.update({\r\n                'host': hostname,\r\n                'port': int(url.port or 6379),\r\n                'username': username,\r\n                'password': password,\r\n            })\r\n...\r\nkwargs.update(url_options)\r\n```\r\nThis will always override the username and password in the kwargs. I think for now, we can only support giving the `username` and `password` via the url and once redis-py's latest implementation is stable, we can add supplying  `username` and `password` via the `OPTIONS`.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886063969/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886088513",
          "html_url": "https://github.com/django/django/pull/14437#issuecomment-886088513",
          "issue_url": "https://api.github.com/repos/django/django/issues/14437",
          "id": 886088513,
          "node_id": "IC_kwDOAD-Lgs400KNB",
          "user": {
            "login": "abbasidaniyal",
            "id": 36009198,
            "node_id": "MDQ6VXNlcjM2MDA5MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36009198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abbasidaniyal",
            "html_url": "https://github.com/abbasidaniyal",
            "followers_url": "https://api.github.com/users/abbasidaniyal/followers",
            "following_url": "https://api.github.com/users/abbasidaniyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/abbasidaniyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abbasidaniyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abbasidaniyal/subscriptions",
            "organizations_url": "https://api.github.com/users/abbasidaniyal/orgs",
            "repos_url": "https://api.github.com/users/abbasidaniyal/repos",
            "events_url": "https://api.github.com/users/abbasidaniyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abbasidaniyal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-24T17:57:38Z",
          "updated_at": "2021-07-24T17:57:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "I was working on the documentation and I wanted to mention about customizing the `parser_class`, `pool_class` and `pickle_protocol`. However, I think I can only add examples of these configurations in the [Cache Arguements](https://docs.djangoproject.com/en/3.2/topics/cache/#cache-arguments) section. I was thinking if we can add a sub-section for the redis backend. We can do this for the other backends or can include the arguments section inside each backend's section? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886088513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/7611",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/7611/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/7611/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/7611/events",
      "html_url": "https://github.com/django/django/pull/7611",
      "id": 191481202,
      "node_id": "MDExOlB1bGxSZXF1ZXN0OTUxNTAyNjk=",
      "number": 7611,
      "title": "Fixed #26608 -- Add support for OVER-clause (window expressions).",
      "user": {
        "login": "atombrella",
        "id": 6141390,
        "node_id": "MDQ6VXNlcjYxNDEzOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atombrella",
        "html_url": "https://github.com/atombrella",
        "followers_url": "https://api.github.com/users/atombrella/followers",
        "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
        "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
        "organizations_url": "https://api.github.com/users/atombrella/orgs",
        "repos_url": "https://api.github.com/users/atombrella/repos",
        "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atombrella/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 24,
      "created_at": "2016-11-24T10:16:06Z",
      "updated_at": "2017-09-18T18:01:06Z",
      "closed_at": "2017-09-18T13:42:30Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/7611",
        "html_url": "https://github.com/django/django/pull/7611",
        "diff_url": "https://github.com/django/django/pull/7611.diff",
        "patch_url": "https://github.com/django/django/pull/7611.patch",
        "merged_at": "2017-09-18T13:42:30Z"
      },
      "body": "https://code.djangoproject.com/ticket/26608\r\n\r\nThanks to Jamie Cockburn for initial patch.",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/7611/reactions",
        "total_count": 10,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 10,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/7611/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/270770842",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-270770842",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 270770842,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc3MDg0Mg==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-05T22:03:46Z",
          "updated_at": "2017-01-05T22:47:36Z",
          "author_association": "MEMBER",
          "body": "This is really impressive work! One thing I thought of is that filtering by an annotated window expression should be disallowed. For example:\r\n\r\n```python\r\nWindowTestModel.objects.annotate(sum=Window(\r\n    expression=Sum('salary'),\r\n    order_by=ExtractYear('hiredate'),\r\n   frame=RowRange(start=-2, end=2)\r\n)).filter(sum__gt=100)\r\n```\r\n\r\nShould raise an exception.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/270770842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/270778271",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-270778271",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 270778271,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc3ODI3MQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-05T22:37:16Z",
          "updated_at": "2017-01-05T22:37:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes Thank you! Also supported in Oracle, but I find PostgreSQL's presentation of the syntax a bit easier to read), your suggestion would fit neatly together with https://www.postgresql.org/docs/current/static/sql-expressions.html#SYNTAX-WINDOW-FUNCTIONS It took me a quite a while to write this initial patch, but perhaps this could be another iteration (perhaps open another ticket for these expressions).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/270778271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/270780272",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-270780272",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 270780272,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc4MDI3Mg==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-05T22:47:11Z",
          "updated_at": "2017-01-05T22:47:11Z",
          "author_association": "MEMBER",
          "body": "@atombrella ohh sorry about the confusion here. I was not referring to the window's expression `FILTER` clause but to attempts of referencing its alias in a `WHERE` statement.\r\n\r\nFor example, the following query is invalid AFAIK\r\n\r\n```sql\r\nSELECT\r\nstore_id, total,\r\nLAG(total) OVER (PARTITION BY store_id ORDER BY timestamp DESC) as lag_total\r\nFROM store_daily_total\r\nWHERE lag_total > 0\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/270780272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/272439958",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-272439958",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 272439958,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQzOTk1OA==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-13T13:12:50Z",
          "updated_at": "2017-01-13T13:12:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes I didn't know. I'm trying to avoid touching core-classes of the ORM, but it appears that this is needed to guard against this type of query. At least, in `resolve_expression` of `Window`, the `query.where.children` is just a blank list. If you could provide a few pointers where to look, I'd be happy to have a go at this.\r\n\r\nAbout filtering, I have thought about extending it with a `FilterWindow`; MariaDB won't support this, so I guess it makes to just subclass `Window` and use a new template with `FILTER (WHERE condition)`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/272439958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/272448196",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-272448196",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 272448196,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ0ODE5Ng==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-13T13:56:19Z",
          "updated_at": "2017-01-13T13:56:19Z",
          "author_association": "MEMBER",
          "body": "> @charettes I didn't know. I'm trying to avoid touching core-classes of the ORM, but it appears that this is needed to guard against this type of query. At least, in resolve_expression of Window, the query.where.children is just a blank list. If you could provide a few pointers where to look, I'd be happy to have a go at this.\r\n\r\nI'm not exactly sure where it should live but I suppose this will require another flag on the base `Expression` flag.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/272448196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/284376068",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-284376068",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 284376068,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDM3NjA2OA==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-03-06T11:52:02Z",
          "updated_at": "2017-03-06T11:52:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah There are things that are likely not to change more (for instances the actual functions); I'm adjusting some tests because of Oracle. Aggregation over the result of a window function causes problems on Oracle because the ORM adds a group by to the inner query; I'm not sure if this is correct behavior (I had a look in `get_aggregation` and `aggregate` in `Query` and `QuerySet`, respectively, but it's not trivial). The patch is fairly big, and it's been easier to get some suggestions along the way.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/284376068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/290968205",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-290968205",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 290968205,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDk2ODIwNQ==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-04-02T06:43:00Z",
          "updated_at": "2017-04-02T06:43:00Z",
          "author_association": "MEMBER",
          "body": "How are you going with this patch @atombrella ? Is there anything you're still stuck on?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/290968205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/291004839",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-291004839",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 291004839,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTAwNDgzOQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-04-02T18:26:46Z",
          "updated_at": "2017-04-02T18:27:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "I am not really sure what specifically in the code-section that adds additional work, probably some clean-up, for instance syntax for the partition and order by part. The last two commits were mostly clean-up. Is the structure of the documentation fine (its own section, functions documented along with the other functions)? It needs to be looked over by a native speaker.  @jarshwah You brought up aggregation as a consideration for window functions on the mailing list; I think distinct needs to be used in most scenarios, but this is already disallowed (although postgresql supports it if you comment out the raise exception in the ORM). On the mailing list, ExpressionList was proposed for ordering. I think it's a good idea for non-ambiguous ordering clauses, as I don't see how else to add descending and ascending specifiers to expressions. There are differences among supported features in all of the backends, I think. MariaDB (although Django does not officially support it, I think this is to be changed) has limitations on OrderBy (nulls first/last is not supported) and some functions (the test suite skips those), PostgreSQL doesn't support RESPECT/IGNORE NULLS or FROM FIRST/LAST. Would these restrictions be good to highlight in the documentation (that's the current approach), or is it needed to enforce it more strictly?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/291004839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/298562941",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-298562941",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 298562941,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODU2Mjk0MQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-05-02T08:53:35Z",
          "updated_at": "2017-05-02T08:53:35Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah Any input to this, e.g., are there more restrictions than the filtering on the result of a window and that they can't be used in `UPDATE`? I've tried to tidy up in a few places. Thank you. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/298562941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/302946086",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-302946086",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 302946086,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk0NjA4Ng==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-05-21T16:08:53Z",
          "updated_at": "2017-05-21T16:08:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes You may have some more input, e.g., `contains_aggregate = True` takes care of a lot of the same restrictions on the expression, however disallowing `DISTINCT ON` with PostgreSQL. Currently, it's false.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/302946086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/306674707",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-306674707",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 306674707,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjY3NDcwNw==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-06-07T03:15:47Z",
          "updated_at": "2017-06-07T03:15:47Z",
          "author_association": "MEMBER",
          "body": "@atombrella about the `contains_aggregate` issue. I think that introducing a new `contains_window = True` (or `contains_frame`, `contains_over_clause`?) flag (with a default nested lookup on `BaseExpression`) that the ORM can use to branch on is the way to go here. Window functions are new concept for the ORM so it's normal we have to deal with these expressions with special care just like we do with aggregates.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/306674707/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/309287567",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-309287567",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 309287567,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI4NzU2Nw==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-06-18T16:23:38Z",
          "updated_at": "2017-06-18T16:23:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah Thanks, the comments were quite useful. For convenience, I summarized the changes in the last commit message (there are still a few things that you commented that I'd like to dig into, such as the tagging of the compatible functions). About syntax for `order_by` and `partition_by`, I think a list that involves `ExpressionList` only internally in the `Window`-class could be an idea.\r\n\r\nEmpty windows are allowed, the three optional arguments should just be left empty. I can submit a ticket about `filter` and `Window` expressions later.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/309287567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/315510654",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-315510654",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 315510654,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUxMDY1NA==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-07-15T05:15:21Z",
          "updated_at": "2017-07-15T05:15:21Z",
          "author_association": "MEMBER",
          "body": "So before this should go through another round of review the problem of window expressions causing a GROUP BY to be added to the query needs to be addressed. I'm going to move the ticket back into patch needs improvement.\r\n\r\nAlso, Aggregates should not inherit from WindowFunc. Just add the window_compatible property to the base aggregate type. I noticed that some of the docs around the window_compatible property need to be cleaned up.\r\n\r\nOnce the GROUP BY issue is sorted I can give another review. Can you ping me here when that's done, and I'll make it a priority.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/315510654/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/315978107",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-315978107",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 315978107,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk3ODEwNw==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-07-18T07:11:49Z",
          "updated_at": "2017-07-18T07:11:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah I corrected a few things (changes are summarized in commit messages), including the docs around `window_compatible` and `filterable`. The `GROUP BY` should be sorted out (`contains_aggregate` is False, and `get_group_by_cols` is a blank list).\r\n\r\nI'm welcoming input for the tests, including test data (some values may not be chosen well).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/315978107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/317242828",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-317242828",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 317242828,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI0MjgyOA==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-07-23T10:15:52Z",
          "updated_at": "2017-07-23T10:15:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "http://mysqlserverteam.com/mysql-8-0-2-introducing-window-functions/ <- I haven't considered this in the current patch (but it affects just the test annotations and the feature-flag). I think `window_compatible` should remain `True` for all aggregate functions, although support is limited to just a few of them on MySQL and MariaDB.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/317242828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/319506496",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-319506496",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 319506496,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTUwNjQ5Ng==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-08-01T21:46:18Z",
          "updated_at": "2017-08-01T21:46:18Z",
          "author_association": "MEMBER",
          "body": "I'll be finishing off the review for this at the pycon au sprints this coming Monday",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/319506496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/323735037",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-323735037",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 323735037,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzczNTAzNw==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-08-21T12:44:17Z",
          "updated_at": "2017-08-27T12:07:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham Would you have time to review docs soon? Thank you. I think the changes in `database-functions.txt` are mostly stand-alone. I made a bunch of improvements to the documentation today, and think it's approaching something that explains the concepts well (I don't know how much Django should cover in this regard since it's one of the more advanced features of SQL); I added some examples.\r\n\r\nI'd appreciate a look at the tests, some of them may be covered by other parts of Django's test suite (there are a couple of questions in comments in there). Also, MySQL/MariaDB should probably be handled (this involves test annotations, and the feature flag). MySQL 8.0.2+ has a richer support for the functions than MariaDB. It doesn't seem like the MariaDB flag will be included in 2.0, so maybe it's better to scratch MariaDB notes from the code, and the documentation?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/323735037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/326733148",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-326733148",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 326733148,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjczMzE0OA==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-09-02T09:23:15Z",
          "updated_at": "2017-09-02T09:23:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham Thanks for the comments. I adjusted the annotations in the tests, and experimented a bit with a pre-release of MySQL 8; they all ran, except for one. I adjusted the `test_range_n_preceding_and_following` due to this. Would it be an idea to highlight something about experimental support/tests for MySQL in the documentation? The tests run on MySQL 8.0.2, but MariaDB still has hiccups with lead/lag, and `range` (MariaDB should have `lead` and `lag`, but the default argument resulted in an error about an invalid query).\r\n\r\nAs the implementation uses the `Expression` API, I find it useful to highlight a trick with a dictionary for the parameters for multiple windows in the same query. I moved the document `window.txt` into `expressions.txt`. Most sections start with `.. class`, and then some text, and I'm not sure if the section requires some structural change.\r\n\r\nThe arguments for the frame were taken from sqlalchemy; the default in SQL is that `RANGE/ROWS UNBOUNDED PRECEDING` means `RANGE/ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW`, although without an elaborate end, the code produces `RANGE/ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING`, which I've tried to highlight.\r\n\r\n@felixxm And thanks for a detailed look on style :) It's really appreciated.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/326733148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/326733769",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-326733769",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 326733769,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjczMzc2OQ==",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-09-02T09:37:00Z",
          "updated_at": "2017-09-02T09:37:00Z",
          "author_association": "MEMBER",
          "body": ">  Would it be an idea to highlight something about experimental support/tests for MySQL in the documentation?\r\n\r\nThanks for testing MySQL :) I think a sentence about MySQL 8 support would be okay, even though it's currently unreleased.\r\n\r\n> MariaDB still has hiccups with lead/lag, and range (MariaDB should have lead and lag, but the default argument resulted in an error about an invalid query).\r\n\r\nDon't worry about MariaDB for the time being, I'll try make it supported properly by Django and fix up things like this when I get round to it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/326733769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/327501825",
          "html_url": "https://github.com/django/django/pull/7611#issuecomment-327501825",
          "issue_url": "https://api.github.com/repos/django/django/issues/7611",
          "id": 327501825,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzUwMTgyNQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-09-06T14:30:36Z",
          "updated_at": "2017-09-06T14:30:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "I went through the feedback, but I still find the documentation tricky to get finalized (I fixed a few sloppy mistakes in the previous updates; it's squashed). Regarding examples, should I add sample data as well, or the description of what is enough? I think for some of those queries to make sense and fully\r\nillustrate what happens would require more than 4-5 rows (that's the number of in the aggregation section), making the document much longer. I use movies and books in three examples. The conditional aggregation document fully illustrates with a model, and some data, for comparison. All the documentation is now in already existing files.\r\n\r\nI believe all scenarios for the functions have tests, however there's a test, `test_two_functions` to check how two window expressions work. Perhaps it's redundant? There are some assertions to check the generated SQL, mainly for the frames-tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/327501825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/2894",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/2894/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/2894/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/2894/events",
      "html_url": "https://github.com/django/django/pull/2894",
      "id": 37370320,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxMDIxNDE=",
      "number": 2894,
      "title": "[Soc2014] The new Options API",
      "user": {
        "login": "PirosB3",
        "id": 847179,
        "node_id": "MDQ6VXNlcjg0NzE3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PirosB3",
        "html_url": "https://github.com/PirosB3",
        "followers_url": "https://api.github.com/users/PirosB3/followers",
        "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
        "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
        "organizations_url": "https://api.github.com/users/PirosB3/orgs",
        "repos_url": "https://api.github.com/users/PirosB3/repos",
        "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
        "received_events_url": "https://api.github.com/users/PirosB3/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 20,
      "created_at": "2014-07-08T13:37:41Z",
      "updated_at": "2014-12-19T16:34:41Z",
      "closed_at": "2014-08-29T12:46:28Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/2894",
        "html_url": "https://github.com/django/django/pull/2894",
        "diff_url": "https://github.com/django/django/pull/2894.diff",
        "patch_url": "https://github.com/django/django/pull/2894.patch",
        "merged_at": null
      },
      "body": "# Main API\n\nOfficial Wiki page: https://code.djangoproject.com/wiki/new_meta_api\n\nget_fields(m2m, data, related_m2m, related_objects, virtual,\ninclude_parents, include_non_concrete, include_hidden, include_proxy) -> (field, field, ...)\n\nget_field(field_name, m2m, data, related_m2m, related_objects, virtual) -> field\n\nfield_names -> (field_name, field_name, ..)\n# Cached properties for fast access\n\nfields -> (field, field, ..)\nconcrete_fields -> (field, field, ...)\nlocal_concrete_fields -> (field, field, ...)\nfield_names (field_name, field_name, ..)\n# Benchmarks\n\n(compared to master)\n\n| Benchmark Name | Control | Experiment | Diff |\n| --- | --- | --- | --- |\n| url_resolve_flat_i18n_off | 0.3224664569 | 0.3128736854 | 0.0095927715 (2.97% faster) |\n| url_resolve_flat | 0.2262115002 | 0.2201457143 | 0.0060657859 (2.68% faster) |\n| query_prefetch_related | 0.1185187101 | 0.1131614804 | 0.0053572297 (4.52% faster) |\n| query_all | 0.0260368466 | 0.0244047880 | 0.0016320586 (6.27% faster) |\n| query_select_related | 0.0590585470 | 0.0582756639 | 0.0007828832 (1.33% faster) |\n| query_raw | 0.0150311589 | 0.0149269700 | 0.0001041889 (0.69% faster) |\n| query_distinct | 0.0003427148 | 0.0003322124 | 0.0000105023 (3.06% faster) |\n| url_resolve | 0.0174066782 | 0.0174011946 | 0.0000054836 (0.03% faster) |\n| template_render_simple | 0.0001164556 | 0.0001118183 | 0.0000046372 (3.98% faster) |\n| query_delete_related | 0.0003562689 | 0.0003521204 | 0.0000041485 (1.16% faster) |\n| form_create | 0.0001154184 | 0.0001116633 | 0.0000037551 (3.25% faster) |\n| model_creation | 0.0002620935 | 0.0002592921 | 0.0000028014 (1.07% faster) |\n| query_iterator | 0.0002910018 | 0.0002886057 | 0.0000023961 (0.82% faster) |\n| form_clean | 0.0000283957 | 0.0000273466 | 0.0000010490 (3.69% faster) |\n| url_resolve_nested | 0.0001253605 | 0.0001250029 | 0.0000003576 (0.29% faster) |\n| query_delete | 0.0002635837 | 0.0002634764 | 0.0000001073 (0.04% faster) |\n| raw_sql | 0.0000513077 | 0.0000515938 | -0.0000002861 (0.56% slower) |\n| template_render | 0.0123201489 | 0.0123205304 | -0.0000003815 (0.00% slower) |\n| query_none | 0.0001389146 | 0.0001396894 | -0.0000007749 (0.56% slower) |\n| query_all_multifield | 0.0442516685 | 0.0442527294 | -0.0000010610 (0.00% slower) |\n| multi_value_dict | 0.0001797199 | 0.0001827717 | -0.0000030518 (1.70% slower) |\n| query_count | 0.0002346754 | 0.0002384424 | -0.0000037670 (1.61% slower) |\n| locale_from_request | 0.0008673787 | 0.0008715868 | -0.0000042081 (0.49% slower) |\n| query_exclude | 0.0005133271 | 0.0005178809 | -0.0000045538 (0.89% slower) |\n| query_latest | 0.0003925323 | 0.0003977776 | -0.0000052452 (1.34% slower) |\n| model_delete | 0.0004462004 | 0.0004532099 | -0.0000070095 (1.57% slower) |\n| query_order_by | 0.0003699422 | 0.0003770232 | -0.0000070810 (1.91% slower) |\n| query_aggregate | 0.0003185034 | 0.0003258467 | -0.0000073433 (2.31% slower) |\n| default_middleware | 0.0004270792 | 0.0004346967 | -0.0000076175 (1.78% slower) |\n| query_filter | 0.0004306793 | 0.0004388094 | -0.0000081301 (1.89% slower) |\n| query_update | 0.0002333641 | 0.0002430677 | -0.0000097036 (4.16% slower) |\n| query_in_bulk | 0.0004901409 | 0.0005011201 | -0.0000109792 (2.24% slower) |\n| query_dates | 0.0005465746 | 0.0005576730 | -0.0000110984 (2.03% slower) |\n| query_annotate | 0.0006684303 | 0.0006795764 | -0.0000111461 (1.67% slower) |\n| query_values | 0.0003065467 | 0.0003197312 | -0.0000131845 (4.30% slower) |\n| query_complex_filter | 0.0001333117 | 0.0001471758 | -0.0000138640 (10.40% slower) |\n| query_values_list | 0.0002993703 | 0.0003140211 | -0.0000146508 (4.89% slower) |\n| template_compilation | 0.0005861163 | 0.0006127477 | -0.0000266314 (4.54% slower) |\n| query_get_or_create | 0.0013090134 | 0.0013397813 | -0.0000307679 (2.35% slower) |\n| l10n_render | 0.0063407421 | 0.0063731670 | -0.0000324249 (0.51% slower) |\n| query_exists | 0.0009287477 | 0.0009753466 | -0.0000465989 (5.02% slower) |\n| qs_filter_chaining | 0.0008348227 | 0.0009381652 | -0.0001033425 (12.38% slower) |\n| query_raw_deferred | 0.0182870388 | 0.0186469555 | -0.0003599167 (1.97% slower) |\n| model_save_new | 0.0142104745 | 0.0145826817 | -0.0003722072 (2.62% slower) |\n| model_save_existing | 0.0140855193 | 0.0145498991 | -0.0004643798 (3.30% slower) |\n| query_get | 0.0273179531 | 0.0280359745 | -0.0007180214 (2.63% slower) |\n\nSum of all benchmarks (bigger is better): 0.0212707281\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/2894/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/2894/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/48922493",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-48922493",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 48922493,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTIyNDkz",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-14T16:28:39Z",
          "updated_at": "2014-07-14T16:28:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/48922493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49014115",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49014115",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49014115,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE0MTE1",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-15T10:25:22Z",
          "updated_at": "2014-07-15T10:25:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49014115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49014221",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49014221",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49014221,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE0MjIx",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-15T10:26:39Z",
          "updated_at": "2014-07-15T10:26:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham @freakboy3742 happy to start doing a \"formal\" review now.\nBuild is failing because of the usual Git checkout issue, but all passing locally.\nI'll also pull from master\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49014221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49147839",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49147839",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49147839,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTQ3ODM5",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-16T10:32:59Z",
          "updated_at": "2014-07-16T10:32:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49147839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49148007",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49148007",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49148007,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTQ4MDA3",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-16T10:34:35Z",
          "updated_at": "2014-07-16T10:34:35Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49148007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49270990",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49270990",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49270990,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjcwOTkw",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-17T08:11:33Z",
          "updated_at": "2014-07-17T08:11:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49270990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49271112",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49271112",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49271112,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjcxMTEy",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-17T08:12:56Z",
          "updated_at": "2014-07-17T08:12:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49271112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49708593",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49708593",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49708593,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzA4NTkz",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-22T07:51:42Z",
          "updated_at": "2014-07-22T07:51:42Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49708593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49899120",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49899120",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49899120,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk5MTIw",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-23T16:31:45Z",
          "updated_at": "2014-07-23T16:31:45Z",
          "author_association": "CONTRIBUTOR",
          "body": "@freakboy3742 @timgraham in the mean-time can we do a second review on the documentation, while I sort out other bigger issues\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49899120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49899399",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49899399",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49899399,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk5Mzk5",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-23T16:33:34Z",
          "updated_at": "2014-07-23T16:33:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49899399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/49998740",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-49998740",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 49998740,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTk4NzQw",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-24T11:58:33Z",
          "updated_at": "2014-07-24T11:58:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/49998740/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/50176010",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-50176010",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 50176010,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTc2MDEw",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-25T16:58:10Z",
          "updated_at": "2014-07-25T16:58:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/50176010/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/50579081",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-50579081",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 50579081,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTc5MDgx",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-30T06:39:34Z",
          "updated_at": "2014-07-30T06:39:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham @freakboy3742 can we start a third review?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/50579081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/50955542",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-50955542",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 50955542,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTU1NTQy",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-02T06:31:12Z",
          "updated_at": "2014-08-02T06:31:12Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham for convenience I deployed all my documentation to a server, so it can be easier to review the style.\n\nAll this PRs documentation will be deployed here: http://5.101.98.142:49155\nex: http://5.101.98.142:49155/ref/models/meta.html\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/50955542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/51172269",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-51172269",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 51172269,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTcyMjY5",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-05T09:21:15Z",
          "updated_at": "2014-08-05T09:21:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham @freakboy3742 can we have another review?\n\n@timgraham: I will be reverting the structure of the options file (discarding the way I ordered it)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/51172269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/51581545",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-51581545",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 51581545,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgxNTQ1",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-08T09:36:09Z",
          "updated_at": "2014-08-08T09:36:09Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham old formatting of models/options has been restored.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/51581545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/51639772",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-51639772",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 51639772,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM5Nzcy",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-08T18:25:39Z",
          "updated_at": "2014-08-08T18:25:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham @freakboy3742 \n\nThis is the new get_field() API: https://github.com/PirosB3/django/pull/6. Do you prefer this or the one on the current PR?\nI prefer the new one, it's simpler and there is (not yet) any reason for so much filtering options. It also has smaller memory usage.\nSuggestions?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/51639772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/53870059",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-53870059",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 53870059,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUzODcwMDU5",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-29T12:41:33Z",
          "updated_at": "2014-08-29T12:41:33Z",
          "author_association": "MEMBER",
          "body": "buildbot, test this please.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/53870059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/53870282",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-53870282",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 53870282,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUzODcwMjgy",
          "user": {
            "login": "PirosB3",
            "id": 847179,
            "node_id": "MDQ6VXNlcjg0NzE3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PirosB3",
            "html_url": "https://github.com/PirosB3",
            "followers_url": "https://api.github.com/users/PirosB3/followers",
            "following_url": "https://api.github.com/users/PirosB3/following{/other_user}",
            "gists_url": "https://api.github.com/users/PirosB3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PirosB3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PirosB3/subscriptions",
            "organizations_url": "https://api.github.com/users/PirosB3/orgs",
            "repos_url": "https://api.github.com/users/PirosB3/repos",
            "events_url": "https://api.github.com/users/PirosB3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PirosB3/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-29T12:44:08Z",
          "updated_at": "2014-08-29T12:44:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi Tim,\n\nIt's not this PR anymore, the official one is the newest one from me. I\nshould kill this pr\n\nOn Friday, August 29, 2014, Tim Graham notifications@github.com wrote:\n\n> buildbot, test this please.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/django/django/pull/2894#issuecomment-53870059.\n\n## \n\n---\n\nPirosB3\n\nhttps://github.com/PirosB3\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/53870282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/67661582",
          "html_url": "https://github.com/django/django/pull/2894#issuecomment-67661582",
          "issue_url": "https://api.github.com/repos/django/django/issues/2894",
          "id": 67661582,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjYxNTgy",
          "user": {
            "login": "tomchristie",
            "id": 647359,
            "node_id": "MDQ6VXNlcjY0NzM1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/647359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomchristie",
            "html_url": "https://github.com/tomchristie",
            "followers_url": "https://api.github.com/users/tomchristie/followers",
            "following_url": "https://api.github.com/users/tomchristie/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions",
            "organizations_url": "https://api.github.com/users/tomchristie/orgs",
            "repos_url": "https://api.github.com/users/tomchristie/repos",
            "events_url": "https://api.github.com/users/tomchristie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomchristie/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-12-19T16:34:41Z",
          "updated_at": "2014-12-19T16:34:41Z",
          "author_association": "MEMBER",
          "body": "Linking to newer ticket for folks browsing this... #3114.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/67661582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/3852",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/3852/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/3852/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/3852/events",
      "html_url": "https://github.com/django/django/pull/3852",
      "id": 53666357,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5Nzc4Nzg=",
      "number": 3852,
      "title": "Fixed #21231 -- Enforced a max size for POST values read into memory",
      "user": {
        "login": "edevil",
        "id": 12426,
        "node_id": "MDQ6VXNlcjEyNDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/edevil",
        "html_url": "https://github.com/edevil",
        "followers_url": "https://api.github.com/users/edevil/followers",
        "following_url": "https://api.github.com/users/edevil/following{/other_user}",
        "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
        "organizations_url": "https://api.github.com/users/edevil/orgs",
        "repos_url": "https://api.github.com/users/edevil/repos",
        "events_url": "https://api.github.com/users/edevil/events{/privacy}",
        "received_events_url": "https://api.github.com/users/edevil/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 90,
      "created_at": "2015-01-07T18:46:06Z",
      "updated_at": "2016-04-26T22:35:01Z",
      "closed_at": "2016-04-13T00:52:13Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/3852",
        "html_url": "https://github.com/django/django/pull/3852",
        "diff_url": "https://github.com/django/django/pull/3852.diff",
        "patch_url": "https://github.com/django/django/pull/3852.patch",
        "merged_at": null
      },
      "body": "Enforce a maximum size for form field values read into memory.\nBased on https://github.com/django/django/pull/3020 and https://github.com/django/django/pull/2403.\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/3852/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/3852/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/69469652",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-69469652",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 69469652,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDY5NjUy",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-01-10T20:01:27Z",
          "updated_at": "2015-01-11T13:43:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "I just thought of a rough idea that might be cleaner and have fewer holes:\n- Have request.read() keep track of the total amount of bytes read.\n- Have a way of reading chunks of files from the request that doesn't count towards the the above number.\n\nThat should handle things that this PR doesn't handle like too many files or really long file names.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/69469652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/69559895",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-69559895",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 69559895,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTU5ODk1",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-01-12T11:56:14Z",
          "updated_at": "2015-01-12T11:56:14Z",
          "author_association": "CONTRIBUTOR",
          "body": "@epandurski Done.\n\n@collinanderson As for file names, or field names, this is already limited in multipartparser.py. 1024 is the default max value for boundary chunks. As for \"too many files\", this seems like a separate problem? \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/69559895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/101739145",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-101739145",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 101739145,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTczOTE0NQ==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-05-13T16:33:56Z",
          "updated_at": "2015-05-13T16:33:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "Updated patch to apply to 1.9.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/101739145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/103084377",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-103084377",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 103084377,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA4NDM3Nw==",
          "user": {
            "login": "akulakov",
            "id": 243874,
            "node_id": "MDQ6VXNlcjI0Mzg3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/243874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akulakov",
            "html_url": "https://github.com/akulakov",
            "followers_url": "https://api.github.com/users/akulakov/followers",
            "following_url": "https://api.github.com/users/akulakov/following{/other_user}",
            "gists_url": "https://api.github.com/users/akulakov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akulakov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akulakov/subscriptions",
            "organizations_url": "https://api.github.com/users/akulakov/orgs",
            "repos_url": "https://api.github.com/users/akulakov/repos",
            "events_url": "https://api.github.com/users/akulakov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akulakov/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-05-18T14:49:38Z",
          "updated_at": "2015-05-18T14:49:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've tested with both normal POST data and with json payload and confirmed I get 'Request data too large' error in the console when data is larger than the setting.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/103084377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/106631318",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-106631318",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 106631318,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjYzMTMxOA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-05-28T23:54:13Z",
          "updated_at": "2015-05-28T23:54:13Z",
          "author_association": "MEMBER",
          "body": "Would be great if you could reply to the unaddressed comments in from the previous PR (such as https://github.com/django/django/pull/3020#discussion_r15779470) so we know if they are addressed in this version.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/106631318/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/106776078",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-106776078",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 106776078,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjc3NjA3OA==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-05-29T11:07:34Z",
          "updated_at": "2015-05-29T11:07:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've replied to all comments.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/106776078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108118321",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108118321",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108118321,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODExODMyMQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-02T22:40:38Z",
          "updated_at": "2015-06-02T22:40:38Z",
          "author_association": "MEMBER",
          "body": "@apollo13, could you please check if Andr\u00e9 has sufficiently addressed all your concerns on the previous PR?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108118321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108834735",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108834735",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108834735,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODgzNDczNQ==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T10:39:45Z",
          "updated_at": "2015-06-04T10:39:45Z",
          "author_association": "MEMBER",
          "body": "@edevil Did you ever check how much memory consumption 2.5 MB of form data would mean in the worst case scenario?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108834735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108846897",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108846897",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108846897,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg0Njg5Nw==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:22:11Z",
          "updated_at": "2015-06-04T11:22:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "```\nimport time\nfrom django.http import QueryDict\ncontent = ('a=1&' * 625000).rstrip('&') # +- 2.5MB\nd = QueryDict(content, encoding='utf-8') # takes 13s, 80MB at peak\n```\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108846897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108847324",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108847324",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108847324,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg0NzMyNA==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:24:18Z",
          "updated_at": "2015-06-04T11:24:18Z",
          "author_association": "MEMBER",
          "body": "how exactly are you measuring that?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108847324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108847904",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108847904",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108847904,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg0NzkwNA==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:25:48Z",
          "updated_at": "2015-06-04T11:25:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "I suppose you mean the memory usage? I'm looking at the memory of the Python process during the last command.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108847904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108848079",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108848079",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108848079,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg0ODA3OQ==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:26:21Z",
          "updated_at": "2015-06-04T11:26:21Z",
          "author_association": "MEMBER",
          "body": "So that is just a rough estimate and not a concrete number?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108848079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108848534",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108848534",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108848534,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg0ODUzNA==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:28:17Z",
          "updated_at": "2015-06-04T11:28:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "Well, yes. I suppose it is specific to the Python version I'm using and my hardware. I established the baseline memory before running the last command and during its execution the process used 80MB more memory before the command returned.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108848534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108853207",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108853207",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108853207,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg1MzIwNw==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:37:33Z",
          "updated_at": "2015-06-04T11:37:33Z",
          "author_association": "MEMBER",
          "body": "After talking to @aaugustin we both still think that this too much, as an extra measurement want to limit the number of params to something sensible.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108853207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108857461",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108857461",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108857461,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg1NzQ2MQ==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T11:51:15Z",
          "updated_at": "2015-06-04T11:51:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "How much is \"sensible\"?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108857461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108875867",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108875867",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108875867,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg3NTg2Nw==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T12:39:53Z",
          "updated_at": "2015-06-04T12:39:53Z",
          "author_association": "MEMBER",
          "body": "An extra setting, where None would mean to disable that check.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108875867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108981409",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108981409",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108981409,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODk4MTQwOQ==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T17:22:45Z",
          "updated_at": "2015-06-04T17:22:45Z",
          "author_association": "CONTRIBUTOR",
          "body": "Done. New setting: DATA_UPLOAD_MAX_NUMBER_FIELDS\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108981409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108982743",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108982743",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108982743,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODk4Mjc0Mw==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T17:27:43Z",
          "updated_at": "2015-06-04T17:27:43Z",
          "author_association": "MEMBER",
          "body": "The check has to happen before parse_qs -- this one already generates a\nlong list with all the data.\n\nOn Thu, Jun 4, 2015, 18:23 Andr\u00e9 Cruz notifications@github.com wrote:\n\n> Done. New setting: DATA_UPLOAD_MAX_NUMBER_FIELDS\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/django/django/pull/3852#issuecomment-108981409.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108982743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/108987372",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-108987372",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 108987372,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwODk4NzM3Mg==",
          "user": {
            "login": "edevil",
            "id": 12426,
            "node_id": "MDQ6VXNlcjEyNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edevil",
            "html_url": "https://github.com/edevil",
            "followers_url": "https://api.github.com/users/edevil/followers",
            "following_url": "https://api.github.com/users/edevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edevil/subscriptions",
            "organizations_url": "https://api.github.com/users/edevil/orgs",
            "repos_url": "https://api.github.com/users/edevil/repos",
            "events_url": "https://api.github.com/users/edevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edevil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T17:40:30Z",
          "updated_at": "2015-06-04T17:40:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "Well, but how can you count them without parsing the query string? Is it viable to count the number of \"&\" before?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/108987372/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/109091398",
          "html_url": "https://github.com/django/django/pull/3852#issuecomment-109091398",
          "issue_url": "https://api.github.com/repos/django/django/issues/3852",
          "id": 109091398,
          "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA5MTM5OA==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-06-04T23:25:46Z",
          "updated_at": "2015-06-04T23:25:46Z",
          "author_association": "MEMBER",
          "body": "The question should be asked the other way: \"is it okay to parse it without\ncausing to much overhead\" -- counting before is basically o(n) and does not\nrequire substantial memory. So I once again ask for a better benchmark than\nlooking at the peak output of your memory usage. Ie debug more carefully\nhow the peaks occur, is it in parsing the initial qs or in constructing the\ndict. In that sense your architecture or python version doesn't matter that\nmuch since I'd expect the ratio between those two to stay (roughly --\nexcluding dict sharing optimizations in new py versions) the same.\n\nOn Thu, Jun 4, 2015, 18:41 Andr\u00e9 Cruz notifications@github.com wrote:\n\n> Well, but how can you count them without parsing the query string? Is it\n> viable to count the number of \"&\" before?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/django/django/pull/3852#issuecomment-108987372.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/109091398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/14463",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/14463/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/14463/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/14463/events",
      "html_url": "https://github.com/django/django/pull/14463",
      "id": 906349963,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjU3MzY4NDI0",
      "number": 14463,
      "title": "Fixed #18468 -- Added support for comments on columns and tables.",
      "user": {
        "login": "KimSoungRyoul",
        "id": 24240623,
        "node_id": "MDQ6VXNlcjI0MjQwNjIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KimSoungRyoul",
        "html_url": "https://github.com/KimSoungRyoul",
        "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
        "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
        "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
        "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
        "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
        "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 48,
      "created_at": "2021-05-29T04:34:26Z",
      "updated_at": "2023-01-11T18:57:15Z",
      "closed_at": "2022-12-28T06:08:33Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/14463",
        "html_url": "https://github.com/django/django/pull/14463",
        "diff_url": "https://github.com/django/django/pull/14463.diff",
        "patch_url": "https://github.com/django/django/pull/14463.patch",
        "merged_at": "2022-12-28T06:08:33Z"
      },
      "body": "more detail description: https://code.djangoproject.com/ticket/18468\r\n\r\n\r\n#### Django\r\n* Field(db_comment=\"...\")\r\n* db_table_comment=\"....\"\r\n\r\n~~~Python\r\nclass AModel(Model):\r\n  \r\n  a_char = models.Field(db_comment=\"I Am comment to Column\", max_length=32)\r\n  \r\n  class Meta:\r\n      db_table = \"a_model\"\r\n      db_table_comment = \"table comment....\"\r\n\r\n~~~\r\n\r\n\r\n#### Converted to postgres dialect\r\n\r\n~~~SQL\r\n\r\ncreate table a_model\r\n(\r\n    id      bigserial   not null  constraint hello1_amodel_pkey  primary key,\r\n    a_char  varchar(32) not null\r\n    \r\n);\r\n\r\ncomment on table a_model is 'table comment....';\r\n\r\ncomment on column a_model.a_char is 'I Am comment to Column';\r\n~~~\r\n\r\n\r\n#### Converted to mysql  dialect\r\n\r\n~~~SQL\r\ncreate table a_model33\r\n(\r\n    id     bigint auto_increment primary key,\r\n    a_char varchar(32) not null comment 'I AM Comment for a_char22'\r\n \r\n)\r\n  comment 'I AM Table Comment22';\r\n~~~\r\n\r\n\r\n#### sqlite3\r\n* ##### not supported\r\n* warning\r\n~~~bash \r\n\u26a1 python manage.py makemigrations     \r\nSystem check identified some issues:\r\n\r\nWARNINGS:\r\nhello1.AModel.a_char: (field.W163) sqlite does not support a db_comment on columns\r\nhello1.AModel.a_int: (field.W163) sqlite does not support a db_comment on columns\r\nhello1.AModel: (models.W045) sqlite does not support db_table_comment.\r\nOperations to perform:\r\n  Apply all migrations: admin, auth, contenttypes, hello1, sessions\r\nRunning migrations:\r\n  Applying admin.0004_alter_logentry_content_type... OK\r\n  Applying auth.0013_alter_permission_content_type... OK\r\n  Applying hello1.0003_alter_amodel_a_array_alter_amodel_a_char_and_more... OK\r\n  ...\r\n\r\n~~~\r\n",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/14463/reactions",
        "total_count": 11,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 10,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/14463/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/855604634",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-855604634",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 855604634,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTYwNDYzNA==",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-07T05:55:33Z",
          "updated_at": "2021-06-07T05:55:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "thank you for your feedback  \ud83d\ude04 \r\n\r\nI will  add testcase for this feature and reflect your feedback until this weekend ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/855604634/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/860228796",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-860228796",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 860228796,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDIyODc5Ng==",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-13T15:26:32Z",
          "updated_at": "2021-06-13T15:30:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @jchubber\r\nIt tries to be helpful in making the test case. In this case, the new SQL grammar is reflected in django, so it can not be used with `assertTableExists()` or `assertColumnExists()` and the other test utils.  \r\nI think make assertion Util like a `assertDBComment()`\r\nIn order to make test cases, it is necessary to add information about `db_comment` to `DatabaseWrapper.introspection.get_table_description()`.  \r\nHowever, I am not sure whether it is the right way to change `get_table_description()` method to only use in test case.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/860228796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/864322167",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-864322167",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 864322167,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDMyMjE2Nw==",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-18T23:49:12Z",
          "updated_at": "2021-06-18T23:50:15Z",
          "author_association": "NONE",
          "body": "@KimSoungRyoul I do not have enough familiarity with migration testing either. I'll write a request into the `Django Core Mentorship` or `Django developers` groups to request advice. I'll let you know if/when I hear back.\r\n\r\nQuick question: Other than the testing, is there anything else you know needs to be done before this ticket is done? It looks to me like you already reflected every piece of feedback I gave \u2705 :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/864322167/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/864506215",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-864506215",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 864506215,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDUwNjIxNQ==",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-20T06:21:40Z",
          "updated_at": "2021-06-20T07:11:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "thank you for your feedback ,  yes  I  already reflected every piece of feedback.\r\nI'll think about testcase for this new feature without modifying `DatabaseWrapper.introspection.get_table_description()` \r\n\r\nand I will  do rollback 1 commit and force push which contained failed useless testcase\r\n\r\n~could give me link where the discussion is being requested?   if not exist  yet~\r\n[Django developers Groups: How can I make testcase for new migration feature (DB Comment) #18468](https://groups.google.com/u/1/g/django-developers/c/28Lv0H9jPAM)\r\n ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/864506215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/869222954",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-869222954",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 869222954,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTIyMjk1NA==",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-06-27T21:00:08Z",
          "updated_at": "2021-06-27T21:00:08Z",
          "author_association": "NONE",
          "body": "@KimSoungRyoul You posted to django-developers and I posted to Django Core Mentorship ([link to thread](https://groups.google.com/g/django-core-mentorship/c/3KHlBAfpD5I)). It looks like the feedback from both groups is consistent: extending `get_table_description()` is ok and it's also recommended to extend inspectdb as well. It's great to have confirmation from both discussion boards about that \u2705 \u2705 \ud83d\udc4d\r\nIf you need any help or want to discuss further, please don't hesitate to let me know.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/869222954/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/873419614",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-873419614",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 873419614,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzQxOTYxNA==",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-03T14:58:31Z",
          "updated_at": "2021-07-03T15:06:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "I haven't done much make testcase yet. but soon will be done\r\np.s\r\nI would be grateful if you could advise on a test case scenario.\r\n\r\n...\r\n\r\nby the way Can you **\"Resolve Conversation\"** that has already been reflected?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/873419614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886166194",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886166194",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886166194,
          "node_id": "IC_kwDOAD-Lgs400dKy",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-25T08:25:24Z",
          "updated_at": "2021-07-25T08:25:24Z",
          "author_association": "CONTRIBUTOR",
          "body": "@knyghty thank you for your feedback. \r\nIt seems more appropriate to remove `.. warning::`. \r\nand `supports_db_comments ` -> `supports_comments `\r\n\r\n@jchubber \r\nI add more testcase to cover up new feature(`db comment`)\r\n* add_db_comment\r\n* alter_db_comment\r\n* delete_db_comment\r\n* add_db_comment_with_default\r\n* alter_db_comment_with_default\r\n\r\n---\r\n\r\n\r\nIs there anything else to think about besides the feedback you suggested? \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886166194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886180610",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886180610",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886180610,
          "node_id": "IC_kwDOAD-Lgs400gsC",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-25T10:34:58Z",
          "updated_at": "2021-07-25T10:34:58Z",
          "author_association": "MEMBER",
          "body": "What happens if you add `db_comment` to a field that isn't directly represented as a column, e.g. `ManyToManyField`? Do we need a system check or something for this? You may need to add something here: https://github.com/django/django/blob/main/django/db/models/fields/related.py#L1230-L1261 ideally with a test.\r\n\r\nI'm not sure if any other fields will have this issue.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886180610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886184129",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886184129",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886184129,
          "node_id": "IC_kwDOAD-Lgs400hjB",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-25T11:01:07Z",
          "updated_at": "2021-07-31T14:45:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "I didn't consider about that. \r\nJust like you said,  we need a system check  \r\nlike a ...\r\n~~~Python\r\nif self.db_comment:\r\n            warnings.append(\r\n                checks.Warning(\r\n                    'db_comment has no effect on ManyToManyField.',\r\n                    obj=self,\r\n                    id='fields.W3xx',\r\n                )\r\n            )\r\n\r\n~~~\r\n\r\nI will add this and consider what happens when `ManyToManyField` or ~`GenericForeignKey`~  etc... and `db_comment` are used together.  \ud83d\ude04 \r\n\r\nThanks",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886184129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886387114",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886387114",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886387114,
          "node_id": "IC_kwDOAD-Lgs401TGq",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-26T05:25:19Z",
          "updated_at": "2021-07-26T05:25:19Z",
          "author_association": "NONE",
          "body": "(\ud83d\udc4d awesome work @KimSoungRyoul and great points @knyghty !)\r\n\r\n**ManyToManyFields:** This was a good catch by @knyghty. Django creates an intermediary join table in the db for every ManyToMany field. In theory, we could support db_comments on `ManyToManyFields` by putting those comments as **_table-level_** comments onto the intermediary join table that Django created. HOWEVER, we'd encounter a problem when the user specified a ManyToManyField with a `through` model, if they tried to put a db_comment on both the Field and also on the through model definition. I'm not 100% sure how to handle this. Either (1) Django supports db_comments on ManyToManyFields and adds them to the intermediary join table as a table-level comment _when there is NO `through` table_, but ignores the field-level comment _when there IS a `through` table_, or (2) Django never supports db_comments on ManyToManyFields at all (basically \"If you want a db comment on your M2M fields, you HAVE to use a through table and put the db_comment there\"). @KimSoungRyoul What do you think?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886387114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886387223",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886387223",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886387223,
          "node_id": "IC_kwDOAD-Lgs401TIX",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-26T05:25:32Z",
          "updated_at": "2021-07-26T05:25:32Z",
          "author_association": "NONE",
          "body": "**Test Cases:** \r\nThe test cases @KimSoungRyoul has now look good. I am trying to think of strange edge cases situations where covering with unit tests could be helpful. I'm not coming up with many. \r\n\r\n- ManyToManyField comments: As mentioned above, this special case might require separate unit tests.\r\n- Table-level comments on `through` models: Is there any difference for `through` models? I suppose not... Maybe unit tests on the `through` models is not needed?\r\n- What's the expected result if there is a comment in the db on a column and the Django user does NOT specify any comment  on the field? Django should make no change to the pre-existing comment, right?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886387223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886394975",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886394975",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886394975,
          "node_id": "IC_kwDOAD-Lgs401VBf",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-26T05:46:43Z",
          "updated_at": "2021-07-26T05:46:43Z",
          "author_association": "NONE",
          "body": "I did an additional review of the Django model docs and found three other situations where db_comment support might get complicated:\r\n\r\n### 1) Unmanaged models:\r\n([link to docs](https://docs.djangoproject.com/en/dev/ref/models/options/#managed)). For any model that has...\r\n```python\r\nclass Meta:\r\n        managed = False\r\n```\r\n...Django will not perform create, modify, or delete operations on the model. That means that db_comments cannot be supported for unmanaged models. I recommend that the docs be updated to state that db_comments are ignored when managed = False. \r\n\r\n### 2) Proxy models:\r\n([link to docs](https://docs.djangoproject.com/en/dev/topics/db/models/#proxy-models)). A `proxy` model doesn't exist in the db in the same way as a regular model. So if a model has...\r\n\r\n```python\r\nclass Meta:\r\n        proxy = True\r\n```\r\n...then I think perhaps db_comments should not be supported at the table _or_ column-levels. That should be documented in the docs, should trigger a warning (during migration?), and should have a unit test to ensure that if a Django user specifies a db_comment on a proxy model that Django doesn't error.\r\n\r\n### 3) Abstract Base Classes:\r\n([link to docs](https://docs.djangoproject.com/en/3.2/topics/db/models/#abstract-base-classes)) Django doesn't create tables for Abstract Base Classes, so a table-level db_comment on an Abstract Base Class **_does NOT_** make sense. But a field-level (or \"column-level\") db_comment on an Abstract Base Class' fields _**DOES**_ make sense because those fields will eventually be created for any of the models that inherit from the Abstract Base Class.\r\n\r\nSo for example, with...\r\n\r\n```python\r\nfrom django.db import models\r\n\r\nclass CommonInfo(models.Model):\r\n    name = models.CharField(max_length=100)\r\n    age = models.PositiveIntegerField(db_comment=\"User's age when they registered.\")\r\n\r\n    class Meta:\r\n        abstract = True\r\n\r\nclass Student(CommonInfo):\r\n    home_group = models.CharField(max_length=5)\r\n```\r\n...then a unit test should verify that in the db the `student` table has a column `age` with the comment \"`User's age when they registered.`\".\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886394975/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886395833",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-886395833",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 886395833,
          "node_id": "IC_kwDOAD-Lgs401VO5",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-26T05:49:05Z",
          "updated_at": "2021-07-26T05:49:05Z",
          "author_association": "NONE",
          "body": "@KimSoungRyoul I was busy the past 2 weeks, but I have more control over my time for the coming 2 weeks. Is there anything here that I can be helpful with? Writing docs? Working on code for some piece of the items mentioned above \ud83d\udc46? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886395833/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/890349023",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-890349023",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 890349023,
          "node_id": "IC_kwDOAD-Lgs41EaXf",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-31T13:28:55Z",
          "updated_at": "2021-07-31T13:28:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "> (\ud83d\udc4d awesome work @KimSoungRyoul and great points @knyghty !)\r\n> \r\n> **ManyToManyFields:** This was a good catch by @knyghty. Django creates an intermediary join table in the db for every ManyToMany field. In theory, we could support db_comments on `ManyToManyFields` by putting those comments as **_table-level_** comments onto the intermediary join table that Django created. HOWEVER, we'd encounter a problem when the user specified a ManyToManyField with a `through` model, if they tried to put a db_comment on both the Field and also on the through model definition. I'm not 100% sure how to handle this. Either (1) Django supports db_comments on ManyToManyFields and adds them to the intermediary join table as a table-level comment _when there is NO `through` table_, but ignores the field-level comment _when there IS a `through` table_, or (2) Django never supports db_comments on ManyToManyFields at all (basically \"If you want a db comment on your M2M fields, you HAVE to use a through table and put the db_comment there\"). @KimSoungRyoul What do you think?\r\n\r\n\r\nI think `(2) Django never supports db_comments on ManyToManyFields at all` is a good choice. \r\n`(1)`  is a possibility that it will become too complicated and I agree with the problem you mentioned.\r\n\r\nLogically, it is correct that ManyToManyField does not support `db_comment` .  \r\n**ManyToManyField is not a column. It's a relationship mapping between models.** ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/890349023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/890439672",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-890439672",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 890439672,
          "node_id": "IC_kwDOAD-Lgs41Ewf4",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-01T03:05:08Z",
          "updated_at": "2021-08-01T03:05:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "Why fail to connect only py3.9-mysql?\r\n\r\nIs it just a temporary issue?\r\n\r\n~~~Python\r\n  File \"/home/jenkins/workspace/pull-requests-bionic/database/mysql_gis/label/bionic-pr/python/python3.9/tests/.env/lib/python3.9/site-packages/MySQLdb/__init__.py\", line 130, in Connect\r\n    return Connection(*args, **kwargs)\r\n  File \"/home/jenkins/workspace/pull-requests-bionic/database/mysql_gis/label/bionic-pr/python/python3.9/tests/.env/lib/python3.9/site-packages/MySQLdb/connections.py\", line 185, in __init__\r\n    super().__init__(*args, **kwargs2)\r\ndjango.db.utils.OperationalError: (2002, \"Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\")\r\nBuild step 'Execute shell' marked build as failure\r\n\r\n~~~",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/890439672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/890441231",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-890441231",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 890441231,
          "node_id": "IC_kwDOAD-Lgs41Ew4P",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-01T03:18:37Z",
          "updated_at": "2021-08-01T05:42:42Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @KimSoungRyoul I was busy the past 2 weeks, but I have more control over my time for the coming 2 weeks. Is there anything here that I can be helpful with? Writing docs? Working on code for some piece of the items mentioned above \ud83d\udc46?\r\n\r\nthanks for your feedback @jchubber\r\nI thought most of your suggestions were appropriate, so I reflected most of them. Are there more areas that need improvement?  If not, may I ask who can advice to get approval?\r\n\r\n\r\n* `test_add_comment_with_through_model` (testcase)\r\n* `test_add_comment_with_abstract_true_option` (testcase)\r\n*  add  migration file to test`test_migrations_with_db_comment.0003_create_proxymodel.py` \r\n*  add  migration file to test`test_migrations_with_db_comment.0004_create_unmanagedmodel.py` \r\n* `Proxy model and Unmanaged models ignore DB comment options`(docs)\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/890441231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/890479211",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-890479211",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 890479211,
          "node_id": "IC_kwDOAD-Lgs41E6Jr",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-01T08:55:01Z",
          "updated_at": "2021-08-01T08:55:01Z",
          "author_association": "MEMBER",
          "body": "@charettes, would you like to take a look?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/890479211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/894595912",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-894595912",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 894595912,
          "node_id": "IC_kwDOAD-Lgs41UnNI",
          "user": {
            "login": "jchubber",
            "id": 830219,
            "node_id": "MDQ6VXNlcjgzMDIxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/830219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchubber",
            "html_url": "https://github.com/jchubber",
            "followers_url": "https://api.github.com/users/jchubber/followers",
            "following_url": "https://api.github.com/users/jchubber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jchubber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jchubber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jchubber/subscriptions",
            "organizations_url": "https://api.github.com/users/jchubber/orgs",
            "repos_url": "https://api.github.com/users/jchubber/repos",
            "events_url": "https://api.github.com/users/jchubber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jchubber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-07T03:03:26Z",
          "updated_at": "2021-08-07T03:03:59Z",
          "author_association": "NONE",
          "body": "# Status update: Patch is Ready for Review\r\n\r\n> I thought most of your suggestions were appropriate, so I reflected most of them. Are there more areas that need improvement? If not, may I ask who can advice to get approval?\r\n\r\nBecause this patch now meets every requirement on the development checklist, I've updated the status in the Django ticket tracker so that it shows up in the `Patches Needing Review` section of the [Django Development Dashboard](https://dashboard.djangoproject.com/).\r\n\r\nThe next step is for anyone except the patch author(s) to review the patch using [the patch review checklist](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#patch-review-checklist) and either mark the ticket as `Ready for checkin` on the [Django Development Ticket Tracker Entry for Ticket #18468](https://code.djangoproject.com/ticket/18468) if everything looks good, or leave comments for improvement and mark the ticket as `Patch needs improvement`. I'd also request that comments for improvement be left here in Github as well. \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/894595912/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/894668964",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-894668964",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 894668964,
          "node_id": "IC_kwDOAD-Lgs41U5Ck",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-07T15:29:06Z",
          "updated_at": "2022-12-23T14:52:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I left a few comments, mostly around the docs / grammar. They're all quite subjective.\r\n\r\nthanks!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/894668964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/903261193",
          "html_url": "https://github.com/django/django/pull/14463#issuecomment-903261193",
          "issue_url": "https://api.github.com/repos/django/django/issues/14463",
          "id": 903261193,
          "node_id": "IC_kwDOAD-Lgs411qwJ",
          "user": {
            "login": "KimSoungRyoul",
            "id": 24240623,
            "node_id": "MDQ6VXNlcjI0MjQwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24240623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimSoungRyoul",
            "html_url": "https://github.com/KimSoungRyoul",
            "followers_url": "https://api.github.com/users/KimSoungRyoul/followers",
            "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions",
            "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs",
            "repos_url": "https://api.github.com/users/KimSoungRyoul/repos",
            "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-22T12:25:44Z",
          "updated_at": "2021-08-22T12:25:44Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi may I know what more I should do? such as requesting reviews from others or reflecting feedback",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/903261193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18158",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18158/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18158/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18158/events",
      "html_url": "https://github.com/django/django/pull/18158",
      "id": 2290928528,
      "node_id": "PR_kwDOAD-Lgs5vKS9y",
      "number": 18158,
      "title": "Fixed #35515 -- Added auto-importing to shell command.",
      "user": {
        "login": "salvo-polizzi",
        "id": 101474753,
        "node_id": "U_kgDOBgxhwQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/salvo-polizzi",
        "html_url": "https://github.com/salvo-polizzi",
        "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
        "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
        "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
        "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
        "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
        "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 45,
      "created_at": "2024-05-11T14:05:04Z",
      "updated_at": "2025-01-09T20:41:46Z",
      "closed_at": "2025-01-09T16:00:31Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18158",
        "html_url": "https://github.com/django/django/pull/18158",
        "diff_url": "https://github.com/django/django/pull/18158.diff",
        "patch_url": "https://github.com/django/django/pull/18158.patch",
        "merged_at": "2025-01-09T16:00:31Z"
      },
      "body": "# Branch description\r\nThis would be an update of the existing Django shell that auto-imports models for you from your app/project. Also, the goal would be to allow the user to subclass this shell to customize its behavior and import extra things.\r\n\r\n- Ticket [35515](https://code.djangoproject.com/ticket/35515#ticket)\r\n- Forum [discussion](https://forum.djangoproject.com/t/gsoc-2024-auto-importing-in-the-shell/30749/2)\r\n- GSOC [proposal](https://gist.github.com/salvo-polizzi/304b8cd001e7ccef95e7f1d1b57bdea4)\r\n\r\n# TODO\r\n- [x] Enable the shell to auto-import all models from the current project/app.\r\n- [x] Allow users to customize the shell by subclassing it, e.g., adding extra methods and/or classes to import.\r\n- [x] Handle model name collisions by automatically importing each model's module.\r\n- [x] With verbosity level 2 or above, print all functions and classes that are automatically imported.\r\n- [x] Write unit tests to ensure models are correctly imported and in the proper order.\r\n- [x] Write documentation to explain how users can customize the shell.\r\n\r\n# Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n- [ ] I have attached screenshots in both light and dark modes for any UI changes.\r\n",
      "closed_by": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18158/reactions",
        "total_count": 17,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 9,
        "confused": 0,
        "heart": 3,
        "rocket": 5,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18158/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2112791892",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2112791892",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2112791892,
          "node_id": "IC_kwDOAD-Lgs597qVU",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-15T15:01:54Z",
          "updated_at": "2024-05-15T15:01:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you so much, @adamchainz, for the feedback. Currently, I'm concentrating on writing tests for these features. Do you have any references or suggestions on where to start? I'm considering creating new functions within the shellCommandTestCase to test the auto-imports.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2112791892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2114125360",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2114125360",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2114125360,
          "node_id": "IC_kwDOAD-Lgs5-Av4w",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-16T06:25:39Z",
          "updated_at": "2024-05-16T06:25:39Z",
          "author_association": "MEMBER",
          "body": "Yes, the tests should be within `ShellCommandTestCase`. \r\n\r\nYou can unit-test `get_namespace()` by calling it (`imports = Command().get_namespace()`) and making assertions on its contents. Then you can write integration tests similar to the existing ones that use `command` and `captured_stdin` to test those pathways.\r\n\r\nIt seems the existing tests don't actually cover launching the various shells. I think it\u2019s worth trying adding coverage, at least for the default `python` shell, though there\u2019s a risk that calling the startup file, interactive hook, or readline are not a good idea during a test run.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2114125360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2120625319",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2120625319",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2120625319,
          "node_id": "IC_kwDOAD-Lgs5-Ziyn",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-20T14:53:33Z",
          "updated_at": "2024-05-20T14:53:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @adamchainz again for your reviews. I left some questions in the comments",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2120625319/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2156057702",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2156057702",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2156057702,
          "node_id": "IC_kwDOAD-Lgs6AgtRm",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-08T14:29:37Z",
          "updated_at": "2024-06-08T14:29:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @DevilsAutumn, thanks for your review. I've started writing the new section on how to override the shell for a customized shell runner. I'll push it in the next few days.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2156057702/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2156628988",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2156628988",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2156628988,
          "node_id": "IC_kwDOAD-Lgs6Ai4v8",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-09T14:21:41Z",
          "updated_at": "2024-06-09T14:21:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @adamchainz,\r\n\r\nI've just changed the PR title and created a Trac ticket for this new feature. It's great to hear that this functionality is very well appreciated by other Django users and contributors, and I'm glad to contribute to this project. In the next few days, I'll work on writing tests to improve test coverage for methods that run the shell. I'm looking forward to seeing how this will turn out.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2156628988/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2175403670",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2175403670",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2175403670,
          "node_id": "IC_kwDOAD-Lgs6BqgaW",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-18T07:35:32Z",
          "updated_at": "2024-06-18T07:35:32Z",
          "author_association": "CONTRIBUTOR",
          "body": "I was thinking about how to document accessing models that had collisions. Do you think it would be better to add a new section to the tutorial or maybe a note?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2175403670/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2237648062",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2237648062",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2237648062,
          "node_id": "IC_kwDOAD-Lgs6FX8y-",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-18T21:28:12Z",
          "updated_at": "2024-07-18T21:28:12Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I was thinking about how to document accessing models that had collisions. Do you think it would be better to add a new section to the tutorial or maybe a note?\r\n\r\nyep we need to add some information on how shell access models with collisions. A section would be too much, probably a note would be better.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2237648062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2262282434",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2262282434",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2262282434,
          "node_id": "IC_kwDOAD-Lgs6G17DC",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-01T07:49:54Z",
          "updated_at": "2024-08-01T07:49:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @sarahboyce for the precious review",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2262282434/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2262922656",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2262922656",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2262922656,
          "node_id": "IC_kwDOAD-Lgs6G4XWg",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-01T12:31:07Z",
          "updated_at": "2024-08-01T12:31:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "Don't forget to add a release note to Django 5.2 :star: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2262922656/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2264962917",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2264962917",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2264962917,
          "node_id": "IC_kwDOAD-Lgs6HAJdl",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-02T09:29:35Z",
          "updated_at": "2024-08-02T09:29:35Z",
          "author_association": "CONTRIBUTOR",
          "body": "Another thing we need to think about is, should we update the [Django intro tutorial](https://docs.djangoproject.com/en/5.0/intro/tutorial02/#playing-with-the-api) when it is showing using the shell and importing the models (search for `>>> from polls.models import` in the docs)\r\nAs they don't need to do this importing, we can probably just remove them :thinking: we could add a `versionchanged` note (not sure if that's neccessary) - what do you think?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2264962917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2265016504",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2265016504",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2265016504,
          "node_id": "IC_kwDOAD-Lgs6HAWi4",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-02T09:59:45Z",
          "updated_at": "2024-08-02T09:59:45Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Another thing we need to think about is, should we update the [Django intro tutorial](https://docs.djangoproject.com/en/5.0/intro/tutorial02/#playing-with-the-api) when it is showing using the shell and importing the models (search for `>>> from polls.models import` in the docs) As they don't need to do this importing, we can probably just remove them \ud83e\udd14 we could add a `versionchanged` note (not sure if that's neccessary) - what do you think?\r\n\r\nI agree on removing the imports from there because it is unnecessary with this new feature. Regarding the `versionchanged` note, I actually don't know \ud83d\ude15. You know better than I do if this would be useful to most of django users or not.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2265016504/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2265029738",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2265029738",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2265029738,
          "node_id": "IC_kwDOAD-Lgs6HAZxq",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-02T10:06:05Z",
          "updated_at": "2024-08-02T10:06:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "Maybe we should add it and then if someone is reading the tutorial on 5.2 but has an earlier version of Django installed (for some reason), they have a hint as to why they are getting an error :+1: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2265029738/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2273309182",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2273309182",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2273309182,
          "node_id": "IC_kwDOAD-Lgs6Hf_H-",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-07T12:03:55Z",
          "updated_at": "2024-08-07T12:04:38Z",
          "author_association": "MEMBER",
          "body": "> Have you tested this on a Django project with lots of models? Is there a performance impact when a project has hundreds of models?\r\n\r\nI would not expect any performance impact as Django loads all models at startup anyway, before even loading the management command. This extension just fetches them from the app registry where they\u2019re already referenced. Still worth testing with djangopackages to check everything works as expected.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2273309182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2273606699",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2273606699",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2273606699,
          "node_id": "IC_kwDOAD-Lgs6HhHwr",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-07T14:25:17Z",
          "updated_at": "2024-08-07T14:25:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hi @salvo-polizzi , sorry for the radio silence on my part. I have had a busy time here with client work.\r\n\r\nHi @adamchainz, thank you for this and previous reviews that you did. \r\n\r\n> I have been thinking we could expand the automatic imports to include some useful utilities - at least adding `from django.conf import settings`. I definitely opened the shell a couple of times over the last few weeks just to check how a setting was being resolved. But perhaps we could avoid scope creep by pushing that kind of extension to a follow-up PR.\r\n\r\nIf we want to add some utilities by default, which ones do you think are the most useful? Should we discuss this on the forum first and then maybe open a ticket?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2273606699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2274363736",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2274363736",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2274363736,
          "node_id": "IC_kwDOAD-Lgs6HkAlY",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-07T21:17:23Z",
          "updated_at": "2024-08-07T21:17:23Z",
          "author_association": "MEMBER",
          "body": "> If we want to add some utilities by default, which ones do you think are the most useful? Should we discuss this on the forum first and then maybe open a ticket?\r\n\r\nYeah let\u2019s do this on a forum thread first. Would you mind starting it?\r\n\r\n\r\n\r\n> I should have made this clear but I had squashed this into a single commit, rebased main, and done minor edits which have been lost (see [7137486](https://github.com/django/django/commit/71374867765ff5d228bdaaf13a06a3c18361d891))\r\n\r\n@salvo-polizzi I guess you used `git push --force` after you made changes locally, which erased Sarah\u2019s work. To avoid this, use the \u201csafe\u201d force push options instead, which I blogged about here: https://adamj.eu/tech/2023/10/31/git-force-push-safely/ .\r\n\r\nI also have a post on squash-rebasing a branch here: https://adamj.eu/tech/2022/03/25/how-to-squash-and-rebase-a-git-branch/ . You\u2019ve added the commit message, which is great, but you should combine all 8 commits into one. To retain the message make sure you use the `s` (`squash`) rebase command for your last commit.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2274363736/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2275146638",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2275146638",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2275146638,
          "node_id": "IC_kwDOAD-Lgs6Hm_uO",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-08T07:34:50Z",
          "updated_at": "2024-08-08T07:34:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > If we want to add some utilities by default, which ones do you think are the most useful? Should we discuss this on the forum first and then maybe open a ticket?\r\n\r\n> Yeah let\u2019s do this on a forum thread first. Would you mind starting it?\r\n\r\nIt would be great if we can roughly agree on the logic as to what should and what shouldn't be included by default. We want to draw a line somewhere and want to know when we should and shouldn't accept a ticket saying \"please add... to the auto imports\"",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2275146638/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2275149850",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2275149850",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2275149850,
          "node_id": "IC_kwDOAD-Lgs6HnAga",
          "user": {
            "login": "salvo-polizzi",
            "id": 101474753,
            "node_id": "U_kgDOBgxhwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salvo-polizzi",
            "html_url": "https://github.com/salvo-polizzi",
            "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
            "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
            "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
            "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
            "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-08T07:36:27Z",
          "updated_at": "2024-08-08T07:41:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I also have a post on squash-rebasing a branch here: https://adamj.eu/tech/2022/03/25/how-to-squash-and-rebase-a-git-> branch/ . You\u2019ve added the commit message, which is great, but you should combine all 8 commits into one. To retain the > message make sure you use the s (squash) rebase command for your last commit.\r\n\r\nHi @adamchainz,\r\n\r\nI'm sorry for the confusion earlier.\r\n\r\nI wanted to ask you something about squashing commits. If I understand correctly, when I squash the latest 8 commits into one, the resulting commit message will be the first one, e.g., \"rebase on top of main branch.\" How can I retain the latest commit message instead of the first one? Do I need to reword both the first and the last commits so that the final message is \"Fixed ...\"?\r\n\r\nI apologize for these basic questions, but I'm not very experienced with git.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2275149850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2275176163",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2275176163",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2275176163,
          "node_id": "IC_kwDOAD-Lgs6HnG7j",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-08T07:50:14Z",
          "updated_at": "2024-08-08T07:50:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I wanted to ask you something about squashing commits. If I understand correctly, when I squash the latest 8 commits into one, the resulting commit message will be the first one, e.g., \"rebase on top of main branch.\" How can I retain the latest commit message instead of the first one? Do I need to reword both the first and the last commits so that the final message is \"Fixed ...\"?\r\n\r\nI might be wrong but I'm not sure you can do it in a single command (but Adam [wrote a book on git recently](https://adamchainz.gumroad.com/l/bygdx) :exploding_head: he might know)\r\nI would squash and have one commit and then [edit the message](https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/changing-a-commit-message) of that squashed commit: `git commit --amend -m \"New commit message\"`\r\n\r\n> I apologize for these basic questions, but I'm not very experienced with git.\r\n\r\nI use the GUI integrated in PyCharm. Being purposeful about your git history is not a basic thing. I know many developers who are experienced and struggle with this :heart: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2275176163/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2284818511",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2284818511",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2284818511,
          "node_id": "IC_kwDOAD-Lgs6IL5BP",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-12T20:07:47Z",
          "updated_at": "2024-08-12T20:07:47Z",
          "author_association": "MEMBER",
          "body": "Thank you @salvo-polizzi for progressing with this project \ud83c\udf81 \r\n\r\nA couple of questions:\r\n\r\n- There's the [`--no-startup`](https://docs.djangoproject.com/en/5.0/ref/django-admin/#cmdoption-shell-nostartup) option. I noticed that when using this option the auto-imports are still available. I was thinking that `--no-startup` should also mean \"no auto imports\". What do you think? \r\n\r\n- In my test project when printing `locals()` I see a number of items where the value is `None`. What do you think about filtering out the imports when the value is `None`. \r\n``` python\r\n ...\r\n 'messages_models': None,\r\n 'staticfiles_models': None\r\n```\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2284818511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2284980019",
          "html_url": "https://github.com/django/django/pull/18158#issuecomment-2284980019",
          "issue_url": "https://api.github.com/repos/django/django/issues/18158",
          "id": 2284980019,
          "node_id": "IC_kwDOAD-Lgs6IMgcz",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-12T22:03:22Z",
          "updated_at": "2024-08-12T22:07:00Z",
          "author_association": "MEMBER",
          "body": "> I wanted to ask you something about squashing commits. If I understand correctly, when I squash the latest 8 commits into one, the resulting commit message will be the first one, e.g., \"rebase on top of main branch.\" How can I retain the latest commit message instead of the first one? Do I need to reword both the first and the last commits so that the final message is \"Fixed ...\"?\r\n\r\nTotally fine, and sorry this is even a task that many with years of Git experience might struggle with. Follow the tutorial, but for the final commit, use `s` (`squash`) instead of `f`. Then, you\u2019ll get your editor opened to merge the first and last commits\u2019 messages as you wish. When you save and close your editor, the rebase will continue and you\u2019ll have merged the message in.\r\n\r\nEdit: Or, yeah, you did what Sarah suggested, and that\u2019s fine too! Sometimes it\u2019s easier to use the tools you know and just copy-paste messages around to fix them up. Advanced rebasing is more of an efficiency thing.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2284980019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/11929",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/11929/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/11929/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/11929/events",
      "html_url": "https://github.com/django/django/pull/11929",
      "id": 508118693,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MzI4OTc0MjA5",
      "number": 11929,
      "title": "Fixed #26167 -- Added support for functional indexes.",
      "user": {
        "login": "hannseman",
        "id": 758858,
        "node_id": "MDQ6VXNlcjc1ODg1OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hannseman",
        "html_url": "https://github.com/hannseman",
        "followers_url": "https://api.github.com/users/hannseman/followers",
        "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
        "organizations_url": "https://api.github.com/users/hannseman/orgs",
        "repos_url": "https://api.github.com/users/hannseman/repos",
        "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hannseman/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 40,
      "created_at": "2019-10-16T21:51:27Z",
      "updated_at": "2021-01-13T18:49:49Z",
      "closed_at": "2021-01-13T11:09:00Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/11929",
        "html_url": "https://github.com/django/django/pull/11929",
        "diff_url": "https://github.com/django/django/pull/11929.diff",
        "patch_url": "https://github.com/django/django/pull/11929.patch",
        "merged_at": "2021-01-13T11:09:00Z"
      },
      "body": "Ticket: https://code.djangoproject.com/ticket/26167\r\n\r\nThis PR continues the work started in https://github.com/django/django/pull/8056. Since a lot of stuff have happened in regards to index creation rebasing on that fork was not really an option.\r\n\r\n~~One important change is made in https://github.com/django/django/pull/11929/commits/3d64e9c919fc8c91ba2de2354fdad209fa3d796f where an adjustment of wrapping parentheses had to be made to support casted indexes on postgres.~~ This is enables pretty powerful expressions like having `tsvector` GIN-indexes on regular columns:\r\n\r\n```python\r\nGinIndex(\r\n    fields=[Cast('field', SearchVectorField())], name=index_name\r\n)\r\n```\r\n\r\nor B-Tree indexes on keys in `jsonb` columns which values are not text:\r\n\r\n```python\r\nIndex(\r\n    fields=[Cast(KeyTextTransform('some_key', 'field'), IntegerField())], name=index_name\r\n)\r\n```\r\n\r\nOne other change from the work in https://github.com/django/django/pull/8056 is that when using expressions in class based indexes it is required to define a name. Since it's hard to resolve a column name from an expression `django.db.backends.base.schema.BaseDatabaseSchemaEditor._create_index_name` could not be used. [ExclusionConstraint](https://docs.djangoproject.com/en/dev/ref/contrib/postgres/constraints/#exclusionconstraint) also requires setting a `name` so I figured it might be OK.\r\n\r\nA space was also added in https://github.com/django/django/pull/11929/commits/5fff6c3f04d483589b1ba7a2fc10f0220b4df657 between the column name and the suffix on index creation. This makes the generated SQL easier to read. I could not find a purpose for not having a space here \r\n\r\nThis is my first PR to Django so bear with me if I've missed anything.",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/11929/reactions",
        "total_count": 37,
        "+1": 25,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 9,
        "rocket": 3,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/11929/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/543018775",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-543018775",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 543018775,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzAxODc3NQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-17T06:05:39Z",
          "updated_at": "2019-10-17T06:06:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "Good work on getting this revived!\r\n\r\nI've only briefly looked at this, but it occurred to me:\r\n\r\n* What sort of API should we have for doing partial functional indexes? I believe the Index API handles this with a Q() expression as a `conditions` kwarg.\r\n\r\n* What about an API for covering indexes, or are these only a postgres thing?\r\n\r\nTo be clear, I'm not expecting either of those in this PR (although it's possible the first one may be possible). More that I don't want us to preclude us being able to make them later based on API decisions we make now.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/543018775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/543070849",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-543070849",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 543070849,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzA3MDg0OQ==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-17T08:40:14Z",
          "updated_at": "2019-10-17T08:52:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "> What sort of API should we have for doing partial functional indexes? I believe the Index API handles this with a Q() expression as a conditions kwarg.\r\n\r\nIt is already supported by the `conditions` kwarg you mention:\r\n```python\r\nIndex(\r\n    fields=[Lower('headline')],\r\n    name=index_name,\r\n    condition=Q(pub_date__isnull=False),\r\n)\r\n```\r\n\r\n\r\n> What about an API for covering indexes, or are these only a postgres thing?\r\n\r\nYes that's a Postgres 11 feature where the `INCLUDE` keyword can be used to add non-key columns to the index. That would be a cool feature and probably implemented in a similar way as the `condition` kwarg. Also `INCLUDE` only supports columns and not expressions.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/543070849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/543540145",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-543540145",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 543540145,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzU0MDE0NQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-18T06:30:01Z",
          "updated_at": "2019-10-18T06:30:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > What about an API for covering indexes, or are these only a postgres thing?\r\n> \r\n> Yes that's a Postgres 11 feature where the `INCLUDE` keyword can be used to add non-key columns to the index. That would be a cool feature and probably implemented in a similar way as the `condition` kwarg. Also `INCLUDE` only supports columns and not expressions.\r\n\r\nI believe that also SQL Server (I'm not a user, I just searched a bit for covering indexes): https://blog.sqlauthority.com/2007/04/23/sql-server-understanding-new-index-type-of-sql-server-2005-included-column-index-along-with-clustered-index-and-non-clustered-index/",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/543540145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/543760690",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-543760690",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 543760690,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzc2MDY5MA==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-18T14:00:25Z",
          "updated_at": "2019-10-18T14:02:59Z",
          "author_association": "MEMBER",
          "body": "> Yes that's a Postgres 11 feature where the `INCLUDE` keyword can be used to add non-key columns to the index. That would be a cool feature and probably implemented in a similar way as the `condition` kwarg. Also `INCLUDE` only supports columns and not expressions.\r\n\r\nThis would be neat to add, but should be handled as a separate ticket/pr - should be quite simple - as you say, it only accepts columns.\r\n\r\n> I believe that also SQL Server (I'm not a user, I just searched a bit for covering indexes): https://blog.sqlauthority.com/2007/04/23/sql-server-understanding-new-index-type-of-sql-server-2005-included-column-index-along-with-clustered-index-and-non-clustered-index/\r\n\r\nSQL Server is not a supported backend in core Django, so I envisage the support being added in `django.contrib.postgres.indexes.Index` only.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/543760690/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/544195028",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-544195028",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 544195028,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDE5NTAyOA==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-19T20:30:48Z",
          "updated_at": "2019-10-20T09:55:43Z",
          "author_association": "CONTRIBUTOR",
          "body": "I found out that MySQL gained support for expression / function indexes in 8.0.13. At first all tests crashed with syntax errors when running against MySQL. This was because MySQL requires all expressions to be wrapped in parentheses while Postgres and SQLite allows not wrapping expressions if they are functions.  \r\n\r\nThis works on Postgres and SQLite but not on MySQL:\r\n`CREATE INDEX idx ON t1 (LOWER(col1) DESC);` \r\n\r\nMySQL requires the following (which Postgres and SQLite also supports)\r\n`CREATE INDEX idx ON t1 ((LOWER(col1)) DESC);`\r\n\r\nMaking the change to always wrap expressions in parentheses removed the required change in https://github.com/django/django/commit/3d64e9c919fc8c91ba2de2354fdad209fa3d796f to allow casted indexes for Postgres on `Cast.template`.\r\n\r\nHowever, adding this wrapping made expressions based on `OrderBy` throw syntax errors because the opclass / key_part is not seen as a part of the expression.  This would render to the following invalid SQL:\r\n`CREATE INDEX idx ON t1 ((LOWER(col1) DESC));`\r\n\r\nThis required a check to see if an expression is based on `OrderBy` (I added a convenience method on `BaseExpression` for this) and extract the ordering for appending at a later stage.  At the moment this change removes the possibility to add `NULLS LAST` and `NULLS FIRST` to column suffixes. This is not supported on MySQL and is not possible today with regular column indexes AFAIK. Maybe it\u2019s okay to not support it initially? Adding support for these suffixes would require breaking out a lot of template-logic from `OrderBy`.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/544195028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/544239142",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-544239142",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 544239142,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDIzOTE0Mg==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-20T10:19:19Z",
          "updated_at": "2019-10-20T10:42:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "Just realized that the current implementation messes up the index ordering. I\u2019ll have to refactor the splitting of `Index.fields` into columns and expressions and instead keep them as a single unit.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/544239142/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/550019414",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-550019414",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 550019414,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAxOTQxNA==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-11-05T21:05:16Z",
          "updated_at": "2019-11-05T21:05:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've added the `simple_col=False` argument to `BaseExpression.resolve_expression` as discussed in  https://github.com/django/django/pull/11929#discussion_r342496318. It makes for a much nicer interface but required a lot of changes. Let's see https://github.com/django/django/pull/11929/commits/79b594cfd6c0152d1a76fbe83cdccaf293937d31 as a proof-of-concept to be reverted if the `ExpressionIndexQuery` approach is preferred. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/550019414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/550044275",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-550044275",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 550044275,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA0NDI3NQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-11-05T22:07:11Z",
          "updated_at": "2019-11-05T22:07:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think I have an external use case for simple_col, so I\u2019m in favour of it in principle. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/550044275/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/558743266",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-558743266",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 558743266,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODc0MzI2Ng==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-11-26T17:46:33Z",
          "updated_at": "2019-11-26T17:46:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've reverted the usage of `simple_col=True` in favour of `Query.alias_cols` introduced in https://github.com/django/django/pull/12067. (Nice job! \ud83c\udf89)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/558743266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/565969421",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-565969421",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 565969421,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTk2OTQyMQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-16T09:05:35Z",
          "updated_at": "2019-12-16T09:05:35Z",
          "author_association": "CONTRIBUTOR",
          "body": "@hannseman Please squash the commits, and remember that the commit message should be \"Fixed #26167 -- Added support for functional indexes\". The ticket is already in the review queue. If you'd like to credit Markus for his work, you can use \"Co-Authored-By\", please see https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/565969421/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619067496",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619067496",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619067496,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA2NzQ5Ng==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:05:50Z",
          "updated_at": "2020-04-24T15:05:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I think that the __init__ signature change to (*expressions, fields=(), ...) should be part of this PR.\r\n\r\nWe would need to make `*expressions` and `fields` mutually exclusive. The order of the fields and expressions are very important for composite indexes where one could create an index like:\r\n\r\n```\r\nCREATE INDEX foo_idx ON foo (field_a, UPPER(field_b), field_c);\r\n```\r\n\r\nThis would require:\r\n```\r\nIndex(F(\"field_a\"), Upper(\"field_b\"), F(\"field_b\"))\r\n```\r\n\r\nIn my opinion this makes for an even more confusing API than the `fields`-kwarg \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619067496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619074528",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619074528",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619074528,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA3NDUyOA==",
          "user": {
            "login": "MarkusH",
            "id": 475613,
            "node_id": "MDQ6VXNlcjQ3NTYxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/475613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkusH",
            "html_url": "https://github.com/MarkusH",
            "followers_url": "https://api.github.com/users/MarkusH/followers",
            "following_url": "https://api.github.com/users/MarkusH/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkusH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkusH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkusH/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkusH/orgs",
            "repos_url": "https://api.github.com/users/MarkusH/repos",
            "events_url": "https://api.github.com/users/MarkusH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkusH/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:17:53Z",
          "updated_at": "2020-04-24T15:17:53Z",
          "author_association": "MEMBER",
          "body": "> > I think that the **init** signature change to (*expressions, fields=(), ...) should be part of this PR.\r\n> \r\n> We would need to make `*expressions` and `fields` mutually exclusive. The order of the fields and expressions are very important for composite indexes where one could create an index like:\r\n\r\nYes, that's correct.\r\n\r\n> \r\n> ```\r\n> CREATE INDEX foo_idx ON foo (field_a, UPPER(field_b), field_c);\r\n> ```\r\n> \r\n> This would require:\r\n> \r\n> ```\r\n> Index(F(\"field_a\"), Upper(\"field_b\"), F(\"field_b\"))\r\n> ```\r\n> \r\n> In my opinion this makes for an even more confusing API than the `fields`-kwarg\r\n\r\nWe could convert strings in `*expressions` to `F()` automatically.\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619074528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619076866",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619076866",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619076866,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA3Njg2Ng==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:21:47Z",
          "updated_at": "2020-04-24T15:21:47Z",
          "author_association": "MEMBER",
          "body": "> We would need to make *expressions and fields mutually exclusive. The order of the fields and expressions are very important for composite indexes where one could create an index like:\r\n\r\nyep!\r\n\r\n> We could convert strings in *expressions to F() automatically.\r\n\r\nyeah I think that's the way to go, that's what we do for the all ORM expressions. e.g. we don't do `Max(fields=['field_a', 'field_b'])`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619076866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619080283",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619080283",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619080283,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA4MDI4Mw==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:27:35Z",
          "updated_at": "2020-04-24T15:27:35Z",
          "author_association": "CONTRIBUTOR",
          "body": "> yeah I think that's the way to go, that's what we do for the all ORM expressions. e.g. we don't do Max(fields=['field_a', 'field_b'])\r\n\r\nYup that makes sense. Should we raise an exception if both `*args` and `fields` are used?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619080283/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619081208",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619081208",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619081208,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA4MTIwOA==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:29:11Z",
          "updated_at": "2020-04-24T15:29:11Z",
          "author_association": "MEMBER",
          "body": "I this so, raising a `TypeError` to make sure both are exclusive seems like the most appropriate option.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619081208/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619082193",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619082193",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619082193,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA4MjE5Mw==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:30:46Z",
          "updated_at": "2020-04-24T15:37:52Z",
          "author_association": "MEMBER",
          "body": "Should we require `Field('field').desc()` to be used when wanting to specifying a descending field through `expressions` or support we support `'-field'` there as well?\r\n\r\nI personally think we shouldn't support `'-field'` in `*expressions` just like we don't do anywhere else the expression API.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619082193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619084477",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619084477",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619084477,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA4NDQ3Nw==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:34:46Z",
          "updated_at": "2020-04-24T15:34:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I personally think we shouldn't support -field in *expressions\r\n\r\nI agree. In my experience using mixed ordering in indexes is not so common that it warrants that shortcut.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619084477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619090169",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619090169",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619090169,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA5MDE2OQ==",
          "user": {
            "login": "MarkusH",
            "id": 475613,
            "node_id": "MDQ6VXNlcjQ3NTYxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/475613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkusH",
            "html_url": "https://github.com/MarkusH",
            "followers_url": "https://api.github.com/users/MarkusH/followers",
            "following_url": "https://api.github.com/users/MarkusH/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkusH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkusH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkusH/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkusH/orgs",
            "repos_url": "https://api.github.com/users/MarkusH/repos",
            "events_url": "https://api.github.com/users/MarkusH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkusH/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-24T15:44:31Z",
          "updated_at": "2020-04-24T15:44:31Z",
          "author_association": "MEMBER",
          "body": "> > I personally think we shouldn't support -field in *expressions\r\n> \r\n> I agree. In my experience using mixed ordering in indexes is not so common that it warrants that shortcut.\r\n\r\nWorks for me :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619090169/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/619438910",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-619438910",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 619438910,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQzODkxMA==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-25T20:50:28Z",
          "updated_at": "2020-04-25T21:15:32Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've been looking into this a bit more and in my opinion we are at a bit of a crossway. We either allow `django.db.backends.base.schema.BaseDatabaseSchemaEditor._create_index_sql` to be passed expressions in the `fields` argument or a new `expressions` argument.\r\n\r\nhttps://github.com/django/django/blob/d6db186427d33889e4d2f3b56e02807d51fc0376/django/db/backends/base/schema.py#L959-L986\r\n\r\n`_create_index_sql` would now be responsible of compiling the expressions along with some new DSL-class, `Expressions`? [This method](https://github.com/django/django/pull/11929/files#diff-803276386305dab54c20b97d3d34b82fR64-R81) would be moved into the schema editor or a `Expressions` DSL-class. The main issue with the current `Columns` DSL-class is the quoting of columns which should not be done on expresssions as that\u2019s already handled.\r\n\r\nThe other option is to pass the already compiled SQL into `_create_index_sql`, as is the implementation today, but then we have the issue of the `Columns` DSL-class not knowing if the column-string is a compiled expression or a column which needs quoting, thus the hack that @MarkusH highlighted in https://github.com/django/django/pull/11929#discussion_r414609238.\r\n\r\nI feel like the former approach is the correct one but it would touch a lot mode in the schema editor and DSL so I wanted to discuss this before starting any work.\r\n\r\n> I guess we could keep the fields kwarg around and automatically turn it into expressions = list(map(F, fields))\r\n\r\nI looked into this and it _should_ be fine if we make sure to never wrap `F` expressions in parens, we need to do the wrapping for all other expressions.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/619438910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/620590366",
          "html_url": "https://github.com/django/django/pull/11929#issuecomment-620590366",
          "issue_url": "https://api.github.com/repos/django/django/issues/11929",
          "id": 620590366,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU5MDM2Ng==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-28T12:58:55Z",
          "updated_at": "2020-04-28T12:59:49Z",
          "author_association": "MEMBER",
          "body": "@hannseman \r\n\r\nI think that allowing either `fields` or `expressions` to be passed to `_create_index_sql` and using the old mechanism when `fields` is provided is the way to go. Providing resolved expressions via `expressions` to `_create_index_sql` should remove the need for manual quoting since [`F` resolves to `Col` which handles its quoting itself](https://github.com/django/django/blob/9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b/django/db/models/expressions.py#L779-L783).\r\n\r\nI suspect a new DSL `Expression(Reference)` reference will be required to implement `references_` method [based on `get_source_expressions`](https://github.com/django/django/blob/9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b/django/db/models/sql/query.py#L1647-L1652) and `rename_column_references` to use a similar logic but use `set_source_expressions` to create renamed cols and assign them.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/620590366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/6734",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/6734/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/6734/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/6734/events",
      "html_url": "https://github.com/django/django/pull/6734",
      "id": 158714352,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NzI3MzQ5NjY=",
      "number": 6734,
      "title": "Fixed #8936 -- Added view permissions and a read-only admin [rebased]",
      "user": {
        "login": "olivierdalang",
        "id": 1894106,
        "node_id": "MDQ6VXNlcjE4OTQxMDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olivierdalang",
        "html_url": "https://github.com/olivierdalang",
        "followers_url": "https://api.github.com/users/olivierdalang/followers",
        "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
        "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
        "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
        "repos_url": "https://api.github.com/users/olivierdalang/repos",
        "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 79,
      "created_at": "2016-06-06T16:05:04Z",
      "updated_at": "2018-05-16T23:06:32Z",
      "closed_at": "2018-05-16T22:26:53Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/6734",
        "html_url": "https://github.com/django/django/pull/6734",
        "diff_url": "https://github.com/django/django/pull/6734.diff",
        "patch_url": "https://github.com/django/django/pull/6734.patch",
        "merged_at": "2018-05-16T22:26:53Z"
      },
      "body": "Hi,\n\nThis is just a rebase of https://github.com/django/django/pull/5297\nThe only difference (besides fixing the merge conflicts) is that `ModelAdmin.declared_fieldsets` doesn't exist anymore and was replaced by `get_fieldsets`.\n\nThanks,\n\nOlivier\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/6734/reactions",
        "total_count": 13,
        "+1": 13,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/6734/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/247371059",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-247371059",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 247371059,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzM3MTA1OQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-09-15T15:59:28Z",
          "updated_at": "2016-09-15T15:59:28Z",
          "author_association": "MEMBER",
          "body": "The test failures are:\nadmin_views.tests.UserAdminTest.test_user_fk_change_popup\nadmin_views.tests.UserAdminTest.test_user_fk_delete_popup\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/247371059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/247718990",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-247718990",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 247718990,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzcxODk5MA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-09-16T21:59:49Z",
          "updated_at": "2016-09-16T21:59:49Z",
          "author_association": "MEMBER",
          "body": "Did you fix https://github.com/django/django/pull/5297#issuecomment-234072204?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/247718990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/251138167",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-251138167",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 251138167,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTEzODE2Nw==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-10-03T15:29:04Z",
          "updated_at": "2016-10-03T15:29:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi,\n\nIt seems these tests fail because of a newline in the template (to comply with flake) :\n\n```\nself.assertContains(response, 'class=\"related-widget-wrapper-link change-related\" id=\"change_id_owner\"')\n```\n\n```\nAssertionError: False is not true : Couldn't find 'class=\"related-widget-wrapper-link change-related\" id=\"change_id_owner\"' in response\n```\n\nwhile this appears in the template :\n\n```\n        <a class=\"related-widget-wrapper-link change-related\"\n            id=\"change_id_owner\"\n```\n\nAn easy fix is to add the line break in the test, but this will fail again if the template gets changed. I see there's the `html` parameter to `assertContains`, but it doesn't seem to work with partial match (the test only tests for the `class` and the `id` attribute, it doesn't match since there are also a `data-href-template` and a `title` html attributes.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/251138167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/251145375",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-251145375",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 251145375,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTE0NTM3NQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-10-03T15:54:56Z",
          "updated_at": "2016-10-03T15:54:56Z",
          "author_association": "MEMBER",
          "body": "I don't have a strong opinion about how to fix that.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/251145375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/251410969",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-251410969",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 251410969,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTQxMDk2OQ==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-10-04T14:50:02Z",
          "updated_at": "2016-10-04T14:50:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi,\n\nI made the changes :\n- missing space & flake8\n- failing tests (I just added the line break in the tested string, it's not very elegant but I don't see how to do it without making the test case too complex)\n- https://github.com/django/django/pull/5297#issuecomment-234072204 including another edge case when the inline has view and delete permissions\n\nI intend to squash those latter commits if they look good to you.\n\nI suggest closing #5297 to avoid having comments at different places.\n\nI removed the patch needs improvement flag on the ticket. Let me know if I can do anything more for this ! \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/251410969/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/253639042",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-253639042",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 253639042,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYzOTA0Mg==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-10-13T21:07:14Z",
          "updated_at": "2016-10-13T21:07:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "There's a failing build, but it looks like it's travis fault : `FATAL: Could not checkout ea3c082f7160685ab0c8215745dd191e0a85424c` \nAny way to restart the tests ?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/253639042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/253639855",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-253639855",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 253639855,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYzOTg1NQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-10-13T21:10:26Z",
          "updated_at": "2016-10-13T21:10:26Z",
          "author_association": "MEMBER",
          "body": "Rebase so the patch merges cleanly and squash commits (in general, there's no need to push incremental commits for minor changes; just squash right away). Of course with a patch of this size, after someday reviews the patch the first time , it might be useful to push incremental changes so they don't have to recheck the entire patch again.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/253639855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/258606714",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-258606714",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 258606714,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODYwNjcxNA==",
          "user": {
            "login": "yigitguler",
            "id": 1478210,
            "node_id": "MDQ6VXNlcjE0NzgyMTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1478210?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yigitguler",
            "html_url": "https://github.com/yigitguler",
            "followers_url": "https://api.github.com/users/yigitguler/followers",
            "following_url": "https://api.github.com/users/yigitguler/following{/other_user}",
            "gists_url": "https://api.github.com/users/yigitguler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yigitguler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yigitguler/subscriptions",
            "organizations_url": "https://api.github.com/users/yigitguler/orgs",
            "repos_url": "https://api.github.com/users/yigitguler/repos",
            "events_url": "https://api.github.com/users/yigitguler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yigitguler/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-05T11:48:28Z",
          "updated_at": "2016-11-05T11:48:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "This will be a nice addition to the Django Admin. Can't wait to see it!\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/258606714/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/258837991",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-258837991",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 258837991,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODgzNzk5MQ==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-07T13:41:29Z",
          "updated_at": "2016-11-07T13:41:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "Ok I think the PR is ready !\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/258837991/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/261015510",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-261015510",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 261015510,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTAxNTUxMA==",
          "user": {
            "login": "slurms",
            "id": 1132361,
            "node_id": "MDQ6VXNlcjExMzIzNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132361?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slurms",
            "html_url": "https://github.com/slurms",
            "followers_url": "https://api.github.com/users/slurms/followers",
            "following_url": "https://api.github.com/users/slurms/following{/other_user}",
            "gists_url": "https://api.github.com/users/slurms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slurms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slurms/subscriptions",
            "organizations_url": "https://api.github.com/users/slurms/orgs",
            "repos_url": "https://api.github.com/users/slurms/repos",
            "events_url": "https://api.github.com/users/slurms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slurms/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-16T17:37:52Z",
          "updated_at": "2016-11-16T17:37:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "We've been testing this in our own admin site and found a couple of things:\n- using `prepopulated_fields` with view only permissions fails (tries to access a field which doesn't exist on the form due to excludes).\n- using custom admin forms with form fields that only exist on the form fails (`label_for_field` issue).\n\nI'll try and write a couple of failing test cases.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/261015510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/264610169",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-264610169",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 264610169,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDYxMDE2OQ==",
          "user": {
            "login": "hirokiky",
            "id": 854049,
            "node_id": "MDQ6VXNlcjg1NDA0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/854049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hirokiky",
            "html_url": "https://github.com/hirokiky",
            "followers_url": "https://api.github.com/users/hirokiky/followers",
            "following_url": "https://api.github.com/users/hirokiky/following{/other_user}",
            "gists_url": "https://api.github.com/users/hirokiky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hirokiky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hirokiky/subscriptions",
            "organizations_url": "https://api.github.com/users/hirokiky/orgs",
            "repos_url": "https://api.github.com/users/hirokiky/repos",
            "events_url": "https://api.github.com/users/hirokiky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hirokiky/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-12-03T02:36:47Z",
          "updated_at": "2016-12-03T02:36:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi. It's awesome PR and I tried it with my existing web app and existing database..\r\nMy question is how can I migrate from existing database? \r\nAs the Options.default_permissions doc said [here](https://github.com/django/django/pull/6734/files#diff-441cf273fa22534a25e767bb35062b7aR337), old existing apps can't use this new feature. \r\n\r\nI tried recreating the database and tried this feature, It worked with my app. \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/264610169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/264811461",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-264811461",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 264811461,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDgxMTQ2MQ==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-12-05T09:55:47Z",
          "updated_at": "2016-12-05T09:55:47Z",
          "author_association": "MEMBER",
          "body": "@hirokiky: I see no reason why old existing apps cannot use this feature - the note states that backwards compatibility is maintained by ensuring that having a _change_ permission also implicitly means that the user has the _view_ permission for the same model. This is to avoid loss of access to pages in the admin site when Django is upgraded because users would not have the new _view_ permissions by default. After upgrade _change_ permissions can be removed and _view_ permissions added as required. (It also rarely makes sense to be able to change something but not view it!)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/264811461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/266980734",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-266980734",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 266980734,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njk4MDczNA==",
          "user": {
            "login": "hirokiky",
            "id": 854049,
            "node_id": "MDQ6VXNlcjg1NDA0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/854049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hirokiky",
            "html_url": "https://github.com/hirokiky",
            "followers_url": "https://api.github.com/users/hirokiky/followers",
            "following_url": "https://api.github.com/users/hirokiky/following{/other_user}",
            "gists_url": "https://api.github.com/users/hirokiky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hirokiky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hirokiky/subscriptions",
            "organizations_url": "https://api.github.com/users/hirokiky/orgs",
            "repos_url": "https://api.github.com/users/hirokiky/repos",
            "events_url": "https://api.github.com/users/hirokiky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hirokiky/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-12-14T09:06:04Z",
          "updated_at": "2016-12-14T09:13:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "@pope1ni Yes. Admin pages can be seen for existing users.\r\n\r\nBut with migrated DB, I can't apply `Can view <model>` for users. there isn't any `Can view <model>` permissions at change users page on admin.\r\nThe reason is that there aren't any `Can view <model>` permission on Permission model.\r\n\r\nanyway thank you. my comment was not enough.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/266980734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/282325277",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-282325277",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 282325277,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjMyNTI3Nw==",
          "user": {
            "login": "bittner",
            "id": 665072,
            "node_id": "MDQ6VXNlcjY2NTA3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/665072?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bittner",
            "html_url": "https://github.com/bittner",
            "followers_url": "https://api.github.com/users/bittner/followers",
            "following_url": "https://api.github.com/users/bittner/following{/other_user}",
            "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bittner/subscriptions",
            "organizations_url": "https://api.github.com/users/bittner/orgs",
            "repos_url": "https://api.github.com/users/bittner/repos",
            "events_url": "https://api.github.com/users/bittner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bittner/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-24T15:50:31Z",
          "updated_at": "2017-02-24T15:50:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "Any chance this feature will end up in Django 1.11? Not too much time left, right?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/282325277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/282325571",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-282325571",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 282325571,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjMyNTU3MQ==",
          "user": {
            "login": "auvipy",
            "id": 6212603,
            "node_id": "MDQ6VXNlcjYyMTI2MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6212603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auvipy",
            "html_url": "https://github.com/auvipy",
            "followers_url": "https://api.github.com/users/auvipy/followers",
            "following_url": "https://api.github.com/users/auvipy/following{/other_user}",
            "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions",
            "organizations_url": "https://api.github.com/users/auvipy/orgs",
            "repos_url": "https://api.github.com/users/auvipy/repos",
            "events_url": "https://api.github.com/users/auvipy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auvipy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-24T15:51:39Z",
          "updated_at": "2017-02-24T15:51:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "1.11 is already feature freez",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/282325571/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 3,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/282341572",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-282341572",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 282341572,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjM0MTU3Mg==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-24T16:50:05Z",
          "updated_at": "2017-02-24T16:50:05Z",
          "author_association": "MEMBER",
          "body": "New features aren't allowed after the alpha release, see https://code.djangoproject.com/wiki/Version1.11Roadmap.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/282341572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/284174316",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-284174316",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 284174316,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3NDMxNg==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-03-04T19:19:02Z",
          "updated_at": "2017-03-04T19:19:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi all,\r\n\r\n@pope1ni Thanks a lot for the detailed review. I made some of the changes (the easy picks).\r\n\r\nI didn't do the initial implementation  Do you think there could be a better solution than get_uneditable_fields() ?\r\n\r\nSo here's the todo list to get this ready, am I missing something ?\r\n\r\n- [ ] Fix problems reported by @slurms  (@slurms, can you provide the tests ?)\r\n- [ ] Make it clear what to do to deal with old apps so that the view permission is created (@timgraham, any pointer on this ? I kind of naively thought the permissions would be created with migrations)\r\n- [ ] Explain get_uneditable_fields in the code (@PetrDlouhy , since you did the initial implementation, could you help me on this ? thanks again by the way)\r\n- [ ] Rebase on master\r\n\r\nJust a disclaimer : this is my first serious contribution to django, so reviewers please don't assume I'm exactly knowing what I'm doing\r\n\r\nLet's hope it will make it into Django one day :)\r\n\r\n\r\n\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/284174316/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/284184546",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-284184546",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 284184546,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NDU0Ng==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-03-04T21:37:28Z",
          "updated_at": "2017-03-04T21:37:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "Ok I just rebased, it was less painful than expected.\r\n\r\n- [ ] Fix problems reported by @slurms  (@slurms, can you provide the tests ?)\r\n- [ ] Make it clear what to do to deal with old apps so that the view permission is created (@timgraham, any pointer on this ? I kind of naively thought the permissions would be created with migrations)\r\n- [ ] Explain get_uneditable_fields in the code (@PetrDlouhy , since you did the initial implementation, could you help me on this ? thanks again by the way)\r\n- [X] Rebase on master",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/284184546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/284999953",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-284999953",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 284999953,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDk5OTk1Mw==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-03-08T10:06:50Z",
          "updated_at": "2017-03-08T10:06:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@pope1ni thanks for the detailed review. I made all changes about style improvement and am starting to look into the three good questions you ask",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/284999953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/286387999",
          "html_url": "https://github.com/django/django/pull/6734#issuecomment-286387999",
          "issue_url": "https://api.github.com/repos/django/django/issues/6734",
          "id": 286387999,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjM4Nzk5OQ==",
          "user": {
            "login": "PetrDlouhy",
            "id": 156755,
            "node_id": "MDQ6VXNlcjE1Njc1NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/156755?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PetrDlouhy",
            "html_url": "https://github.com/PetrDlouhy",
            "followers_url": "https://api.github.com/users/PetrDlouhy/followers",
            "following_url": "https://api.github.com/users/PetrDlouhy/following{/other_user}",
            "gists_url": "https://api.github.com/users/PetrDlouhy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PetrDlouhy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PetrDlouhy/subscriptions",
            "organizations_url": "https://api.github.com/users/PetrDlouhy/orgs",
            "repos_url": "https://api.github.com/users/PetrDlouhy/repos",
            "events_url": "https://api.github.com/users/PetrDlouhy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PetrDlouhy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-03-14T10:59:25Z",
          "updated_at": "2017-03-14T10:59:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "@olivergeorge Thank You for pushing this forward. The `uneditable_fields` are fields, that user can't edit either because he doesn't have permission or their edition is forbidden by admin settings. With introduction of view only permissions we need to be able to display all fields in read only mode.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/286387999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/17515",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/17515/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/17515/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/17515/events",
      "html_url": "https://github.com/django/django/pull/17515",
      "id": 2008205033,
      "node_id": "PR_kwDOAD-Lgs5gOnkg",
      "number": 17515,
      "title": "Added #34277 --  Add Conditional WHERE Clause to bulk_create for SQLite and PostgreSQL",
      "user": {
        "login": "HamaBarhamou",
        "id": 77896711,
        "node_id": "MDQ6VXNlcjc3ODk2NzEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HamaBarhamou",
        "html_url": "https://github.com/HamaBarhamou",
        "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
        "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
        "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
        "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
        "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
        "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
        "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 26,
      "created_at": "2023-11-23T13:09:03Z",
      "updated_at": "2025-04-17T09:04:48Z",
      "closed_at": null,
      "author_association": "NONE",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/17515",
        "html_url": "https://github.com/django/django/pull/17515",
        "diff_url": "https://github.com/django/django/pull/17515.diff",
        "patch_url": "https://github.com/django/django/pull/17515.patch",
        "merged_at": null
      },
      "body": "[#34227](https://code.djangoproject.com/ticket/34277)\r\nThis pull request introduces a significant enhancement to Django's ORM by adding a conditional WHERE clause capability to the `bulk_create` method for SQLite and PostgreSQL backends. This feature allows users to specify conditions under which updates should occur in case of conflicts during bulk insert operations, offering more control and flexibility in data handling.\r\n\r\n**Key Changes and Implementation:**\r\n- Added a `where_clause` parameter to the `bulk_create` method.\r\n- Integrated this feature with SQLite and PostgreSQL backends by handling the `where_clause` in the respective database operations.\r\n- Created comprehensive tests to ensure functionality and reliability across the supported databases.\r\n\r\n**Future Vision and Rationale for Current Scope:**\r\n- The current implementation accepts raw SQL strings for the `where_clause`. The goal was to establish a foundation upon which further enhancements can be built.\r\n- Future work could involve extending support to other databases and allowing Django's `Q` and `F` expressions for the `where_clause`, making it more \"Djangonic\". However, this would require a more intricate handling and understanding of each database's capabilities and syntax.\r\n- I decided to limit the scope of this initial implementation to ensure reliability and ease of integration. Tackling the complexity of database-specific syntax and Django expressions in a single go could introduce risks and prolong the review and integration process.\r\n- A dedicated ticket and subsequent contributions will focus on these advanced features, ensuring thorough testing and consideration for each step of the enhancement.\r\n\r\nThis contribution represents a starting point for a broader feature addition to Django's ORM. I'm looking forward to feedback and discussions on how we can further evolve this functionality in future iterations.\r\n",
      "closed_by": {
        "login": "HamaBarhamou",
        "id": 77896711,
        "node_id": "MDQ6VXNlcjc3ODk2NzEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HamaBarhamou",
        "html_url": "https://github.com/HamaBarhamou",
        "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
        "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
        "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
        "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
        "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
        "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
        "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/17515/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/17515/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1824437980",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1824437980",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1824437980,
          "node_id": "IC_kwDOAD-Lgs5svrbc",
          "user": {
            "login": "shangxiao",
            "id": 1845938,
            "node_id": "MDQ6VXNlcjE4NDU5Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1845938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangxiao",
            "html_url": "https://github.com/shangxiao",
            "followers_url": "https://api.github.com/users/shangxiao/followers",
            "following_url": "https://api.github.com/users/shangxiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangxiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangxiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangxiao/subscriptions",
            "organizations_url": "https://api.github.com/users/shangxiao/orgs",
            "repos_url": "https://api.github.com/users/shangxiao/repos",
            "events_url": "https://api.github.com/users/shangxiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangxiao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-23T13:26:38Z",
          "updated_at": "2023-11-23T13:26:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "@HamaBarhamou Thanks \ud83c\udfc6 I left a few cursory comments",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1824437980/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1825570576",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1825570576",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1825570576,
          "node_id": "IC_kwDOAD-Lgs5sz_8Q",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-24T11:56:48Z",
          "updated_at": "2023-11-24T11:56:48Z",
          "author_association": "NONE",
          "body": "> Thanks for the initial work on this - it'll be a nice feature to have.\r\n> \r\n> I've added a bunch of comments with regards to making things more consistent, but I think the main blocker to progress will be properly supporting passing expressions to `where_clause` rather than backend-specific SQL which will leave this open to increased risk of SQL injection.\r\n\r\nThank you so much, ngnpope, for your constructive and detailed feedback. I am delighted to hear that this feature will be a welcomed addition and I take note of your suggestions to improve my pull request. I will work on the modifications you have recommended and incorporate them into the code. Your assistance is highly valuable and greatly contributes to my understanding of the Django project.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1825570576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1847368554",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1847368554",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1847368554,
          "node_id": "IC_kwDOAD-Lgs5uHJtq",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-08T15:24:10Z",
          "updated_at": "2023-12-08T15:24:10Z",
          "author_association": "NONE",
          "body": "Dear colleagues, @ngnpope , @shangxiao ,  I believe I have completed the modifications for my recent pull request. I eagerly await your feedback and suggestions for any necessary improvements. Thank you for your support and collaboration",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1847368554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1850909422",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1850909422",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1850909422,
          "node_id": "IC_kwDOAD-Lgs5uUqLu",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-11T21:22:41Z",
          "updated_at": "2023-12-11T21:25:07Z",
          "author_association": "NONE",
          "body": "> Thanks for the updates @HamaBarhamou \ud83d\ude42\r\n> \r\n> I think you missed some of my previous comments. Unfortunately GitHub collapses stuff and it's easy to miss - look for the \"XX hidden conversations\" bits and click \"Load more...\".\r\n> \r\n> I've added some more comments. The big things of interest going forward are:\r\n> \r\n> * Where do we compile the condition expression - can we push down, etc. ?\r\n> * Can we make the condition expression more general than hardcoding to `F` and `Q`?\r\n> * How do we handle PostgreSQL's `EXCLUDED`?\r\n>   \r\n>   * I think this could be a subclass of `F` with some special handling perhaps\r\n>   * We could also probably use the name `EXCLUDED` on MySQL for the table alias\r\n>     \r\n>     * Currently we have `AS new`, but that can be anything and `new` is a bit generic\r\n\r\n\r\n\r\n> * Comment g\u00e9rons-nous les PostgreSQL `EXCLUDED`?\r\n\r\nHello @ngnpope  and the team \ud83d\ude42,\r\n\r\nThank you for your insightful questions. Here are my thoughts:\r\n\r\nCompiling the condition expression: I will further reflect on the possibility of pushing the condition expression lower in the execution stack. It's an interesting point that I wish to explore more.\r\n\r\nGeneralizing the condition expression: My approach did not involve specific hardcoding for F and Q. I have utilized Django's existing mechanisms, which, to my understanding, are already suited to handle these expressions in a general manner. If my understanding diverges from what you expect, I am open to clarifications.\r\n\r\nHandling EXCLUDED in PostgreSQL: My work is a continuation of PR [#13065](https://github.com/django/django/pull/13065) where EXCLUDED was incorporated. My goal has been to add a WHERE clause to the existing query. If you think there are aspects I might have missed or misinterpreted regarding EXCLUDED, I am open to your guidance to ensure my contribution aligns perfectly with the project's expectations.\r\n\r\nI am still in a learning phase and appreciate your patience and guidance in this process.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1850909422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1861400613",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1861400613",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1861400613,
          "node_id": "IC_kwDOAD-Lgs5u8rgl",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-18T19:22:15Z",
          "updated_at": "2023-12-18T19:32:22Z",
          "author_association": "NONE",
          "body": "Dear Team @ngnpope @shangxiao ,\r\n\r\nI am writing to inform you that I have completed the necessary adjustments on the project and am ready for another review.\r\n\r\nHowever, I would like to seek your opinion on a specific point: is the current state of my work, which does not yet include an implementation for the MySQL backends, sufficient for acceptance? In other words, is it imperative to also integrate MySQL for my contribution to be considered complete, or are the current improvements adequate for acceptance?\r\n\r\nThank you for your feedback and guidance.\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1861400613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1867052074",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1867052074",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1867052074,
          "node_id": "IC_kwDOAD-Lgs5vSPQq",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-21T23:34:29Z",
          "updated_at": "2023-12-21T23:39:42Z",
          "author_association": "NONE",
          "body": "Hello team @ngnpope, @felixxm, and @shangxiao \ud83d\ude4c,\r\n\r\nI'm ready for another review. \ud83d\ude80\r\n\r\nI would like to bring to your attention the keyword EXCLUDED introduced in Django. I'm wondering if we should consider renaming EXCLUDED to avoid confusion with the EXCLUDED keyword specific to SQLite and PostgreSQL. From Django's perspective, EXCLUDED refers to the fields of new rows being inserted into the database, which implies using backend-specific keywords (like EXCLUDED, VALUES, NEW...). Hence, it seems necessary to clearly distinguish EXCLUDED in the Django context from EXCLUDED in the backend context.\r\n\r\nWhat are your thoughts on this? Your insights and suggestions would be greatly appreciated. \ud83d\ude0a\ud83d\udc4d\r\n\r\nThanks for your time and continued collaboration! \ud83c\udf1f\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1867052074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1868283034",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1868283034",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1868283034,
          "node_id": "IC_kwDOAD-Lgs5vW7ya",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-23T12:19:10Z",
          "updated_at": "2023-12-23T12:19:10Z",
          "author_association": "NONE",
          "body": "I'm ready for a new revision",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1868283034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1878295243",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1878295243",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1878295243,
          "node_id": "IC_kwDOAD-Lgs5v9ILL",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-05T08:24:20Z",
          "updated_at": "2024-01-05T08:24:20Z",
          "author_association": "MEMBER",
          "body": "> As a suggestion, you might want to reduce the scope of this PR to getting condition into bulk_create which supports F and Q expressions. Then once that's landed, you can create a new PR with adding Excluded support.\r\n\r\n@sarahboyce I already requested that `Excluded` be added straightaway as it is, in my mind, a primary requirement of this feature.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1878295243/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1878822676",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1878822676",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1878822676,
          "node_id": "IC_kwDOAD-Lgs5v_I8U",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-05T15:08:13Z",
          "updated_at": "2024-01-05T15:08:13Z",
          "author_association": "NONE",
          "body": "> > \u00c0 titre de suggestion, vous souhaiterez peut-\u00eatre r\u00e9duire la port\u00e9e de ce PR \u00e0 obtenir une condition dans Bulk_create qui prend en charge les expressions F et Q. Ensuite, une fois que cela est obtenu, vous pouvez cr\u00e9er un nouveau PR en ajoutant le support exclu.\r\n> \r\n> @sarahboyceJ'ai d\u00e9j\u00e0 demand\u00e9 que cela `Excluded`soit ajout\u00e9 imm\u00e9diatement car c'est, \u00e0 mon avis, une exigence principale de cette fonctionnalit\u00e9.\r\n\r\nthe idea of limiting the scope of this functionality and opening a pull request for the rest is good. only it must be applied to the case of mysql, limiting this feature only for sqlit and protesql. i tried to integrate mysql and gave up because i realized that it would be more complicated to manage, because mysql does not natively support conditional updates like protesql and sqlite. so in my opinion it deserves another tikect.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1878822676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1880170588",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1880170588",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1880170588,
          "node_id": "IC_kwDOAD-Lgs5wESBc",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-07T21:03:02Z",
          "updated_at": "2024-01-07T21:03:02Z",
          "author_association": "NONE",
          "body": "ready for another revision",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1880170588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1882795968",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1882795968",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1882795968,
          "node_id": "IC_kwDOAD-Lgs5wOS_A",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-09T10:22:07Z",
          "updated_at": "2024-01-09T10:22:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @HamaBarhamou, thank you for adding the test for `abulk_create` and the formatting changes \u2b50 \ud83c\udf89 \r\n\r\nA couple of things have been missed\r\n\r\n- Please update the release notes based off this feedback: https://github.com/django/django/pull/17515/files#r1442594149\r\n- Please consider the documentation feedback I gave here: https://github.com/django/django/pull/17515#discussion_r1442588641\r\n\r\nThen the last one is whether you can have applied changes to have `Excluded` subclass `F` based off this discussion: https://github.com/django/django/pull/17515#discussion_r1442597457\r\nThink with a new year, you can approach this with fresh eyes and see if you can get this to work \ud83e\udd1e ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1882795968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1883157926",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1883157926",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1883157926,
          "node_id": "IC_kwDOAD-Lgs5wPrWm",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-09T14:32:25Z",
          "updated_at": "2024-01-09T14:32:25Z",
          "author_association": "NONE",
          "body": "> Ensuite, la derni\u00e8re question est de savoir si vous pouvez avoir appliqu\u00e9 des modifications pour avoir `Excluded`une sous-classe `F`bas\u00e9e sur cette discussion\u00a0: [#17515 (commentaire)](https://github.com/django/django/pull/17515#discussion_r1442597457) Pensez \u00e0 une nouvelle ann\u00e9e, vous pouvez aborder cela avec un regard neuf et voir si vous pouvez faire fonctionner cela \ud83e\udd1e\r\n\r\nI don't know if you saw my comments. I had already solved the problem of Excluded sous class de F in my last commit.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1883157926/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1883190177",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1883190177",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1883190177,
          "node_id": "IC_kwDOAD-Lgs5wPzOh",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-09T14:49:31Z",
          "updated_at": "2024-01-09T14:49:31Z",
          "author_association": "NONE",
          "body": "\r\n> Quelques choses ont \u00e9t\u00e9 manqu\u00e9es\r\n> \r\n> * Veuillez mettre \u00e0 jour les notes de version en fonction de ces commentaires\u00a0: https://github.com/django/django/pull/17515/files#r1442594149\r\n> * Veuillez prendre en compte les commentaires sur la documentation que j'ai donn\u00e9s ici\u00a0: [Ajout de #34277 -- Ajouter une clause WHERE conditionnelle \u00e0 Bulk_create pour SQLite et PostgreSQL \u00a0#17515 (commentaire)](https://github.com/django/django/pull/17515#discussion_\r\n> \r\n\r\nI see it on my github comment .\r\n![msg git](https://github.com/django/django/assets/77896711/c964e6a1-31b9-4c67-9f86-911855c7f6e6)\r\nMaybe you haven't seen my previous comments, I wonder if they have been registered by github.\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1883190177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1883227300",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1883227300",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1883227300,
          "node_id": "IC_kwDOAD-Lgs5wP8Sk",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-09T15:08:46Z",
          "updated_at": "2024-01-09T15:11:35Z",
          "author_association": "NONE",
          "body": "> * Veuillez mettre \u00e0 jour les notes de version en fonction de ces commentaires\u00a0: https://github.com/django/django/pull/17515/files#r1442594149\r\n\r\nI applied @ngnpope's suggestion here in his [comment ] (https://github.com/django/django/pull/17515#discussion_r1404166128)\r\nThere must be a reason for this.\r\nYou didn't say anything about it. Which of you two suggestions should I follow?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1883227300/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1891113638",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1891113638",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1891113638,
          "node_id": "IC_kwDOAD-Lgs5wuBqm",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-14T23:42:09Z",
          "updated_at": "2024-01-14T23:42:09Z",
          "author_association": "NONE",
          "body": "ready for another review",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1891113638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1980385030",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1980385030",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1980385030,
          "node_id": "IC_kwDOAD-Lgs52CkcG",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-03-06T08:59:52Z",
          "updated_at": "2024-03-06T08:59:52Z",
          "author_association": "NONE",
          "body": "ready for another revision",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1980385030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1983064562",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1983064562",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1983064562,
          "node_id": "IC_kwDOAD-Lgs52Myny",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-03-07T09:19:29Z",
          "updated_at": "2024-03-07T09:20:40Z",
          "author_association": "NONE",
          "body": "> I've only managed a quick pass through right now - will have to have a more thorough look later.\r\n> \r\n> Please can you rebase **and squash all commits** so that we can have a clean slate for the next phase of review - there's quite a bit of clutter in the commit history now. And please ensure that any `@username` mentions are removed from the commit message so that we don't get pinged multiple times every time you push to the branch? Thank you.\r\n\r\nNice to see you again ngnpope. ok i'll see how to do it and i'll get back to you if there's a problem.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1983064562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1985428085",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1985428085",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1985428085,
          "node_id": "IC_kwDOAD-Lgs52Vzp1",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-03-08T10:19:43Z",
          "updated_at": "2024-03-08T10:19:43Z",
          "author_association": "NONE",
          "body": "Hi @ngnpope @kezabelle , don't forget to check the \"Patch needs improvement:\" box if you've finished the revision.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1985428085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1991998231",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1991998231",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1991998231,
          "node_id": "IC_kwDOAD-Lgs52u3sX",
          "user": {
            "login": "HamaBarhamou",
            "id": 77896711,
            "node_id": "MDQ6VXNlcjc3ODk2NzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77896711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamaBarhamou",
            "html_url": "https://github.com/HamaBarhamou",
            "followers_url": "https://api.github.com/users/HamaBarhamou/followers",
            "following_url": "https://api.github.com/users/HamaBarhamou/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamaBarhamou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamaBarhamou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamaBarhamou/subscriptions",
            "organizations_url": "https://api.github.com/users/HamaBarhamou/orgs",
            "repos_url": "https://api.github.com/users/HamaBarhamou/repos",
            "events_url": "https://api.github.com/users/HamaBarhamou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamaBarhamou/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-03-12T15:57:26Z",
          "updated_at": "2024-03-12T15:57:26Z",
          "author_association": "NONE",
          "body": "Hi @ngnpope ready for another revision",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1991998231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1992085103",
          "html_url": "https://github.com/django/django/pull/17515#issuecomment-1992085103",
          "issue_url": "https://api.github.com/repos/django/django/issues/17515",
          "id": 1992085103,
          "node_id": "IC_kwDOAD-Lgs52vM5v",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-03-12T16:34:23Z",
          "updated_at": "2024-03-12T16:34:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hi @ngnpope ready for another revision\r\n\r\nHello @HamaBarhamou! Thank you for your continued work in this branch. I wanted to mention two things:\r\n\r\n1. I believe that Nick asked you to please squash all commits into one. This does not seem to have done. If you have any doubts, [this post is a good resource to learn](https://adamj.eu/tech/2022/03/25/how-to-squash-and-rebase-a-git-branch/).\r\n2. There is no need to mention people by nickname when a PR is ready for a re-review, reviewers will get to this when they have some availability. The proper procedure to get a re-review is described in [these docs](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#patch-style). You just need to unset the relevant ticket flags so this PR gets added back to the \"patches needing review\" section of the [Django Developer Dahsboard](https://dashboard.djangoproject.com/).\r\n\r\nYou already did (2) which is great, but you'd still need to do the first request (rebase and squash). I'll set the ticket to \"patch needs improvement\" again just so we reflect the latest status following the reviewers comments.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1992085103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18627",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18627/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18627/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18627/events",
      "html_url": "https://github.com/django/django/pull/18627",
      "id": 2552587019,
      "node_id": "PR_kwDOAD-Lgs5851eh",
      "number": 18627,
      "title": "Fixed #35859 -- Implement Tasks interface as per DEP 14",
      "user": {
        "login": "RealOrangeOne",
        "id": 6527489,
        "node_id": "MDQ6VXNlcjY1Mjc0ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6527489?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RealOrangeOne",
        "html_url": "https://github.com/RealOrangeOne",
        "followers_url": "https://api.github.com/users/RealOrangeOne/followers",
        "following_url": "https://api.github.com/users/RealOrangeOne/following{/other_user}",
        "gists_url": "https://api.github.com/users/RealOrangeOne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RealOrangeOne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RealOrangeOne/subscriptions",
        "organizations_url": "https://api.github.com/users/RealOrangeOne/orgs",
        "repos_url": "https://api.github.com/users/RealOrangeOne/repos",
        "events_url": "https://api.github.com/users/RealOrangeOne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RealOrangeOne/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 7,
      "created_at": "2024-09-27T10:32:24Z",
      "updated_at": "2025-07-18T08:09:10Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18627",
        "html_url": "https://github.com/django/django/pull/18627",
        "diff_url": "https://github.com/django/django/pull/18627.diff",
        "patch_url": "https://github.com/django/django/pull/18627.patch",
        "merged_at": null
      },
      "body": "#### Trac ticket number\r\n\r\nticket-35859\r\n\r\nhttps://github.com/django/deps/blob/main/accepted/0014-background-workers.rst\r\n\r\n#### Branch description\r\n\r\nThis PR implements the first parts of `django.tasks`, as implemented in [`django-tasks`](https://github.com/realOrangeOne/django-tasks):\r\n\r\n- Common API interface\r\n- Base backend\r\n- Task / result classes\r\n- Immediate / Dummy backends\r\n\r\nThe database backend is intentionally absent, and will be added in future (**after** this PR is merged). This makes the PR significantly smaller, and easier to review.\r\n\r\nThe commits are also not squashed, to assist with iterative reviewing. I'll squash them all towards the end once the change is approved.\r\n\r\n##### Notable deviations from the DEP\r\n\r\n- The email backend has been removed, as it isn't possible to be API-compatible, due to the need to return the number of successfully-sent emails.\r\n- Enqueue and finished task signals were added, to allow easier introspection from day 1.\r\n\r\n#### Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable (TBC).\r\n- [ ] I have attached screenshots in both light and dark modes for any UI changes.\r\n",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18627/reactions",
        "total_count": 64,
        "+1": 26,
        "-1": 0,
        "laugh": 0,
        "hooray": 12,
        "confused": 0,
        "heart": 26,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18627/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2407151979",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2407151979",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2407151979,
          "node_id": "IC_kwDOAD-Lgs6Pejlr",
          "user": {
            "login": "hvdklauw",
            "id": 13875,
            "node_id": "MDQ6VXNlcjEzODc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hvdklauw",
            "html_url": "https://github.com/hvdklauw",
            "followers_url": "https://api.github.com/users/hvdklauw/followers",
            "following_url": "https://api.github.com/users/hvdklauw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hvdklauw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hvdklauw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hvdklauw/subscriptions",
            "organizations_url": "https://api.github.com/users/hvdklauw/orgs",
            "repos_url": "https://api.github.com/users/hvdklauw/repos",
            "events_url": "https://api.github.com/users/hvdklauw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hvdklauw/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-11T10:51:14Z",
          "updated_at": "2024-10-11T10:51:14Z",
          "author_association": "NONE",
          "body": "Just one comment: Missing periods at the end of some of the docstrings.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2407151979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2428525816",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2428525816",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2428525816,
          "node_id": "IC_kwDOAD-Lgs6QwFz4",
          "user": {
            "login": "RealOrangeOne",
            "id": 6527489,
            "node_id": "MDQ6VXNlcjY1Mjc0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6527489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RealOrangeOne",
            "html_url": "https://github.com/RealOrangeOne",
            "followers_url": "https://api.github.com/users/RealOrangeOne/followers",
            "following_url": "https://api.github.com/users/RealOrangeOne/following{/other_user}",
            "gists_url": "https://api.github.com/users/RealOrangeOne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RealOrangeOne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RealOrangeOne/subscriptions",
            "organizations_url": "https://api.github.com/users/RealOrangeOne/orgs",
            "repos_url": "https://api.github.com/users/RealOrangeOne/repos",
            "events_url": "https://api.github.com/users/RealOrangeOne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RealOrangeOne/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-22T07:53:48Z",
          "updated_at": "2024-10-22T07:53:48Z",
          "author_association": "MEMBER",
          "body": "@carltongibson (as shepherd :sheep: ), what's the best way to get some Review Team eyeballs on this? Social media posting only gets the reviews so far.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2428525816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2428549338",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2428549338",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2428549338,
          "node_id": "IC_kwDOAD-Lgs6QwLja",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-22T08:04:19Z",
          "updated_at": "2024-10-22T08:04:19Z",
          "author_association": "MEMBER",
          "body": "@RealOrangeOne Good hustle! Right... let me mention it to some folks.\r\n\r\nBut also \u2014 create a Trac ticket \"Add DEP 14 Task interface\" (or similar), check Has Patch, link here, and change the title to `Fixed #... -- `. (Please also add carltongibson to the CC field on the ticket.) \u2014 That way it will appear on the Fellow's \"Patches needing review\" list, which is pretty much all important. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2428549338/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2428643189",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2428643189",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2428643189,
          "node_id": "IC_kwDOAD-Lgs6Qwid1",
          "user": {
            "login": "RealOrangeOne",
            "id": 6527489,
            "node_id": "MDQ6VXNlcjY1Mjc0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6527489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RealOrangeOne",
            "html_url": "https://github.com/RealOrangeOne",
            "followers_url": "https://api.github.com/users/RealOrangeOne/followers",
            "following_url": "https://api.github.com/users/RealOrangeOne/following{/other_user}",
            "gists_url": "https://api.github.com/users/RealOrangeOne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RealOrangeOne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RealOrangeOne/subscriptions",
            "organizations_url": "https://api.github.com/users/RealOrangeOne/orgs",
            "repos_url": "https://api.github.com/users/RealOrangeOne/repos",
            "events_url": "https://api.github.com/users/RealOrangeOne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RealOrangeOne/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-22T08:41:53Z",
          "updated_at": "2024-10-22T08:41:53Z",
          "author_association": "MEMBER",
          "body": "I had a feeling a ticket might be the way forward. Opened ticket-35859.\r\n\r\n_Something something more content for the DEP talk_",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2428643189/reactions",
            "total_count": 5,
            "+1": 0,
            "-1": 0,
            "laugh": 3,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2456479678",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2456479678",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2456479678,
          "node_id": "IC_kwDOAD-Lgs6Saue-",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-05T08:01:10Z",
          "updated_at": "2024-11-05T08:01:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have this checked out and am going through and reviewing this. Excited about getting this moving forward, but have a lot of little nits and things I think we want to clean up. There's so much scar tissue around backends that I know we all have, so I think we can provide something great but not complicated here!\r\n\r\nReally don't want to expand the scope, maybe some of this will involve simply hiding some stuff to future PRs. In any case hope to have finished reviewing this later tonight or tomorrow ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2456479678/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2817376494",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2817376494",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2817376494,
          "node_id": "IC_kwDOAD-Lgs6n7cDu",
          "user": {
            "login": "malkoG",
            "id": 2427963,
            "node_id": "MDQ6VXNlcjI0Mjc5NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2427963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malkoG",
            "html_url": "https://github.com/malkoG",
            "followers_url": "https://api.github.com/users/malkoG/followers",
            "following_url": "https://api.github.com/users/malkoG/following{/other_user}",
            "gists_url": "https://api.github.com/users/malkoG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malkoG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malkoG/subscriptions",
            "organizations_url": "https://api.github.com/users/malkoG/orgs",
            "repos_url": "https://api.github.com/users/malkoG/repos",
            "events_url": "https://api.github.com/users/malkoG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malkoG/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-20T22:54:12Z",
          "updated_at": "2025-04-20T22:54:12Z",
          "author_association": "NONE",
          "body": "Looking forward for this go out, any update on this?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2817376494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2817990612",
          "html_url": "https://github.com/django/django/pull/18627#issuecomment-2817990612",
          "issue_url": "https://api.github.com/repos/django/django/issues/18627",
          "id": 2817990612,
          "node_id": "IC_kwDOAD-Lgs6n9x_U",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-21T09:05:25Z",
          "updated_at": "2025-04-21T09:05:25Z",
          "author_association": "MEMBER",
          "body": "@malkoG https://justinmayer.com/posts/any-updates/",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2817990612/reactions",
            "total_count": 7,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 5,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/14819",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/14819/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/14819/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/14819/events",
      "html_url": "https://github.com/django/django/pull/14819",
      "id": 984806213,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NzI0MjAxNTI3",
      "number": 14819,
      "title": "Fixed #31026 -- Switched form rendering to template engine",
      "user": {
        "login": "smithdc1",
        "id": 39445562,
        "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smithdc1",
        "html_url": "https://github.com/smithdc1",
        "followers_url": "https://api.github.com/users/smithdc1/followers",
        "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
        "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
        "organizations_url": "https://api.github.com/users/smithdc1/orgs",
        "repos_url": "https://api.github.com/users/smithdc1/repos",
        "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/smithdc1/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 27,
      "created_at": "2021-09-01T07:26:52Z",
      "updated_at": "2021-09-20T16:19:08Z",
      "closed_at": "2021-09-20T16:01:10Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/14819",
        "html_url": "https://github.com/django/django/pull/14819",
        "diff_url": "https://github.com/django/django/pull/14819.diff",
        "patch_url": "https://github.com/django/django/pull/14819.patch",
        "merged_at": "2021-09-20T16:01:10Z"
      },
      "body": "Follows @codingjoe's work at #12133 for [ticket 31026](https://code.djangoproject.com/ticket/31026).\r\n\r\nI've tried to capture all of the review comments from the previous PR. In addition, I've added a decorator to run the form tests with both the DTL and Jinja, and fixed the test failures this highlighted. I've also made a number of doc changes. \r\n\r\nI'm unsure about how I've added the decorator to run the tests with both DTL and Jinja, this feels a bit unclean and I'd appreciate feedback on this. \r\n\r\nAlso the doc changes are _hard_ to judge, but suspect I'm now blind to my own errors on these. ",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/14819/reactions",
        "total_count": 8,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 1,
        "confused": 0,
        "heart": 4,
        "rocket": 1,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/14819/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/913091016",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-913091016",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 913091016,
          "node_id": "IC_kwDOAD-Lgs42bKnI",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-05T05:45:57Z",
          "updated_at": "2021-09-05T05:45:57Z",
          "author_association": "MEMBER",
          "body": "I've pushed a commit with a number of edits from the reivew comments. While I've still got more to do I thought the changes I've already made are large enough to share. \r\n\r\nOne of the key changes here is that I've added much more documentation on `ErrorList` and deprecated the method of cusomising this using string concatination. I think this is the same approach to having deprecated `_html_output` for the main `Form` class. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/913091016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/915420295",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-915420295",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 915420295,
          "node_id": "IC_kwDOAD-Lgs42kDSH",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-08T17:14:12Z",
          "updated_at": "2021-09-19T19:29:55Z",
          "author_association": "MEMBER",
          "body": "Hi All,\r\n\r\nI've pushed my second batch of edits. I think the to do list now is:\r\n\r\n- [x] `|stringformat:'s'` do we need it in the `attrs` template?\r\n- [x] Move some tests to a separate class as a preliminary change\r\n- [x] Any issues with `\\n` being added due to use of templates?\r\n- [x] Should we use `unordered_list`?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/915420295/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/915498153",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-915498153",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 915498153,
          "node_id": "IC_kwDOAD-Lgs42kWSp",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-08T19:09:28Z",
          "updated_at": "2021-09-08T19:09:28Z",
          "author_association": "MEMBER",
          "body": "You are a hero for taking this on! (I know my reviews can be quite in depth on some of these bigger ticket items...)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/915498153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/915820972",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-915820972",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 915820972,
          "node_id": "IC_kwDOAD-Lgs42llGs",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-09T07:05:51Z",
          "updated_at": "2021-09-09T07:05:51Z",
          "author_association": "MEMBER",
          "body": "Thank you for taking the time for reviewing! Are you ok if I squash the commits (and add the test move preliminary commit) at this stage? \n\nI think we're then nearing the time to put it in the review queue? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/915820972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/916004908",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-916004908",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 916004908,
          "node_id": "IC_kwDOAD-Lgs42mSAs",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-09T11:31:41Z",
          "updated_at": "2021-09-09T11:31:41Z",
          "author_association": "MEMBER",
          "body": "Yup, go ahead! We're definitely ready for more eyes and I think that @carltongibson will be happy to see this one get over the finish line.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/916004908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/916008215",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-916008215",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 916008215,
          "node_id": "IC_kwDOAD-Lgs42mS0X",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-09T11:36:21Z",
          "updated_at": "2021-09-09T11:36:21Z",
          "author_association": "MEMBER",
          "body": "Yep! Current head-down, but looking forward to looking at this again. Thanks both! ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/916008215/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/918370972",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-918370972",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 918370972,
          "node_id": "IC_kwDOAD-Lgs42vTqc",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-13T16:36:10Z",
          "updated_at": "2021-09-13T16:36:10Z",
          "author_association": "MEMBER",
          "body": "@ngnpope I think we should add templates for `ErrorDict` as well. \n\nI wonder if we can create a `RenderableError` class which the dict and list can inherit from as some of the methods could be the same. \ud83e\udd14",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/918370972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/918553854",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-918553854",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 918553854,
          "node_id": "IC_kwDOAD-Lgs42wAT-",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-13T20:33:14Z",
          "updated_at": "2021-09-13T20:34:25Z",
          "author_association": "MEMBER",
          "body": "> @ngnpope I think we should add templates for `ErrorDict` as well.\r\n\r\nAh, I missed that! Yes, there are bits to template in there. I'm not sure we'll be able to reuse the same templates for both `ErrorDict` and `ErrorList` so we'll need to split them out, i.e. `django/forms/templates/django/forms/errors/{dict,list}/ul.html`, etc. The only other way we might be able to handle it in Django templates without `isinstance()` is to check `{% if errors %}` first and then `{% if errors.items %}`, but even if that works the template may look messy. Feel free to try either way.\r\n\r\n> I wonder if we can create a `RenderableError` class which the dict and list can inherit from as some of the methods could be the same.\r\n\r\nPerhaps if we move `Renderable` into `django.forms.utils` and have something like the following:\r\n\r\n```python\r\nclass Renderable:\r\n    def get_context(self):\r\n        raise NotImplementedError('Must be overridden by subclasses.')\r\n\r\n    def render(self, template_name=None, context=None, renderer=None):\r\n        return mark_safe((renderer or self.renderer).render(\r\n            template_name or self.template_name,\r\n            context or self.get_context(),\r\n        ))\r\n\r\n    def __str__(self):\r\n        return self.render()\r\n\r\n\r\nclass RenderableError(Renderable):\r\n    def as_json(self, escape_html=False):\r\n        return json.dumps(self.get_json_data(escape_html))\r\n\r\n    def as_ul(self):\r\n        return self.render(self.template_name_ul)\r\n\r\n    def as_text(self):\r\n        return self.render(self.template_name_text)\r\n\r\n\r\nclass RenderableForm(Renderable):\r\n    def as_p(self):\r\n        \"\"\"Render as <p> elements.\"\"\"\r\n        return self.render(self.template_name_p)\r\n\r\n    def as_table(self):\r\n        \"\"\"Render as <tr> elements excluding the surrounding <table> tag.\"\"\"\r\n        return self.render(self.template_name_table)\r\n\r\n    def as_ul(self):\r\n        \"\"\"Render as <li> elements excluding the surrounding <ul> tag.\"\"\"\r\n        return self.render(self.template_name_ul)\r\n```\r\n\r\nA few things of note:\r\n- `BaseForm` and `BaseFormSet` would inherit from `RenderableForm`.\r\n- `ErrorDict` and `ErrorList` would inherit from `RenderableError`.\r\n- `ErrorList.render()` is pushed up and shared in `Renderable.render()`.\r\n- We can push the implementation of `__str__()` for all four classes up into `Renderable`.\r\n- We could create `.../django/forms/errors/{dict,list}/text.txt` for `.as_text()` for consistency. (?)\r\n- We would need to make `renderable` settable in `ErrorDict.__init__()`. (I'm not sure if we'd need to subclass `UserDict`...)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/918553854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/918584157",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-918584157",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 918584157,
          "node_id": "IC_kwDOAD-Lgs42wHtd",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-13T21:16:45Z",
          "updated_at": "2021-09-13T21:16:45Z",
          "author_association": "MEMBER",
          "body": "Thank you for your comments. I'll look more closely in the morning. I started to make progress on this so will be interesting to see how close I am to your proposals.\n\nOne thing I can across but haven't fully stepped through yet is the `html_safe` decorator. If we move the `str` methods we'll need to move those as well. Further it also makes a `mark_safe` call, but the render method has already called this? \ud83e\udd14 ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/918584157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/918588723",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-918588723",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 918588723,
          "node_id": "IC_kwDOAD-Lgs42wI0z",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-13T21:23:14Z",
          "updated_at": "2021-09-13T21:23:14Z",
          "author_association": "MEMBER",
          "body": "> One thing I can across but haven't fully stepped through yet is the `html_safe` decorator.\r\n\r\nAh, yeah, I noticed that, then forgot. Maybe we can't do that, or just have to move `@html_safe` to `RenderableError` if is isn't valid for `BaseForm` and `BaseFormSet`. Hmm. You'll have to play.\r\n\r\nAlso a thought was the `SafeString` deprecation thingy you did for `ErrorList` items? Will `ErrorDict` be affected independently or is it handled because `ErrorDict`s contain `ErrorList`s...? I haven't dug enough to understand - just throwing this out there.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/918588723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/919439577",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-919439577",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 919439577,
          "node_id": "IC_kwDOAD-Lgs42zYjZ",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-14T19:10:35Z",
          "updated_at": "2021-09-14T19:10:35Z",
          "author_association": "MEMBER",
          "body": "A fair number of changes here, I'll try and explain my thinking on the couple of key areas. \r\n\r\n- I have dropped use of `@html_safe` in place of adding `__html__` to `Renderable`. The aim is to avoid duplicate `mark_safe` calls. \r\n- I am slightly unsure about the `SafeString` deprecation. It's needed (finds notes) due to this [test](https://github.com/django/django/blob/0e8be73812a6e62d5a6b12a585d133b56bc2bf52/tests/forms_tests/tests/test_forms.py#L3582), and it being [documented](https://docs.djangoproject.com/en/3.2/ref/forms/api/#customizing-the-error-list-format)  as a way of customising errors. However, by doing so in this way you loose the `mark_safe` wrapped provided by `@html_safe`. It's documented so I think we need to manage it, although I find it somewhat surprising. I wonder if we need to worry about rendering of `ErrorDicts` as Django doesn't call `str` on this call with the primary use being to access the `ErrorLists` they contain. They also seem lightly documented and tested. \r\n\r\n``` python \r\nfrom django.forms.utils import ErrorList\r\n\r\ne = ErrorList(['Error One', 'Error Two'])\r\n\r\nprint(str(e))\r\n# type is safestring\r\nprint(type(str(e)))\r\n\r\n\r\nclass CustomErrorList(ErrorList):\r\n    def __str__(self):\r\n        return 'Custom!'\r\n\r\ne = CustomErrorList(['Error One', 'Error Two'])\r\n\r\nprint(str(e))\r\n# type is str\r\nprint(type(str(e)))\r\n\r\n\r\n``` ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/919439577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/919448301",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-919448301",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 919448301,
          "node_id": "IC_kwDOAD-Lgs42zart",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-14T19:23:41Z",
          "updated_at": "2021-09-14T19:23:41Z",
          "author_association": "MEMBER",
          "body": "> * I wonder if we need to worry about rendering of `ErrorDicts` as Django doesn't call `str` on this call with the primary use being to access the `ErrorLists` they contain. They also seem lightly documented and tested.\r\n\r\nRegarding lightly documented, `ErrorDict` is explicitly mentioned once in `docs/releases/1.7.txt` and nowhere else!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/919448301/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/919748690",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-919748690",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 919748690,
          "node_id": "IC_kwDOAD-Lgs420kBS",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-15T06:51:46Z",
          "updated_at": "2021-09-15T06:51:46Z",
          "author_association": "MEMBER",
          "body": "> Hi @smithdc1 (@ngnpope) \u2014 thanks for the work on this.\r\n> \r\n> I need to go over the `ErrorList` changes.\r\n> \r\n> Some initial comments on the `FormSets`. I'm surprised to see the `as_p()` and `as_ul` options there \u2014 are we sure about adding those? I would have thought just `render` proxying to `__str__` and `template_name` would be enough.\r\n> \r\n> IIRC, `p` tags don't validly accept other block level elements and there are other issues with table and ul rendering... Refs #32339\r\n> The existing rendering is table based\u00a0\u2014\u00a0OK \u2014 but do we want to add API for `p` and `ul` rendering?\r\n> \r\n> I had thought the move would be towards deprecating those methods, or at least encouraging the `template_name` plus `__str__` usage? So... how about **not** adding extra hooks to formset rendering? \ud83e\udd14 (Sorry if this has already been covered in the discussion.)\r\n\r\nSo `.as_p()` and `.as_ul()` already exist on `BaseFormSet`, we're not adding API. And, yes, `.as_p()` is particularly problematic.\r\n\r\nSo, regardless of whether we choose to deprecate, we need to convert them to templates. Ideally with this release users won't notice.\r\n\r\nI think we should pick it up next cycle to handle the questions of adding `.as_div()` or just making `<div>` the default, whether to deprecate all `.as_*()`, whether to fix `.as_table()` markup, and the accessibility stuff, e.g. `role=\"presentation\"`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/919748690/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/920945297",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-920945297",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 920945297,
          "node_id": "IC_kwDOAD-Lgs425IKR",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-16T14:18:56Z",
          "updated_at": "2021-09-16T14:24:36Z",
          "author_association": "MEMBER",
          "body": "> I'll then be out for the day, wedding anniversary\r\n\r\nCongratulations. Good work! \ud83c\udf81 \r\nGiven the feature freeze, let us know if you want any input \u2014 but it looks close to me. I'm going to ask @felixxm to look again. \ud83d\udc4d ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/920945297/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/921002759",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-921002759",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 921002759,
          "node_id": "IC_kwDOAD-Lgs425WMH",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-16T15:26:05Z",
          "updated_at": "2021-09-16T15:26:05Z",
          "author_association": "MEMBER",
          "body": "> I'll then be out for the day, wedding anniversary\r\n\r\nHope you have a lovely day \ud83c\udf1e \r\n\r\n> Congratulations. Good work!\r\n\r\nHear! Hear! Thanks for converting my barrage of comments to code.\ud83e\uddb8\ud83c\udffb",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/921002759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/921002995",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-921002995",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 921002995,
          "node_id": "IC_kwDOAD-Lgs425WPz",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-16T15:26:20Z",
          "updated_at": "2021-09-16T15:26:20Z",
          "author_association": "MEMBER",
          "body": "> Given the feature freeze, let us know if you want any input ...\n\nI think the answer is that 'it depends' \ud83d\ude00. \n\nI'm at work tomorrow, so if comments are available in a couple of hours time I can look at them this evening, if not it'll be over the weekend. But is that too tight for the feature freeze on Monday? \n\n\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/921002995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/921217263",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-921217263",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 921217263,
          "node_id": "IC_kwDOAD-Lgs426Kjv",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-16T20:20:41Z",
          "updated_at": "2021-09-16T20:21:33Z",
          "author_association": "MEMBER",
          "body": "I've rebased for the merge conflicts and pushed edits where I can. Theres a few small areas left where there is discussion and I'm unsure on the best way forward. \r\n\r\nAlso Jenkins doesn't seem to have picked up the latest changes here. **EDIT**: ahh there it is. \ud83e\udd1e \r\n\r\n>  I think this is really good\r\n\r\n> Hear! Hear! Thanks for converting my barrage of comments to code.\r\n\r\nThank you both, I've really enjoyed working on this. @ngnpope -- thank you for all your review comments. I've learnt a lot from you, I really need to have a sit down once this is merged to reflect upon this (may need a bit of a rest first though \ud83d\ude04)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/921217263/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/921585225",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-921585225",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 921585225,
          "node_id": "IC_kwDOAD-Lgs427kZJ",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-17T07:50:43Z",
          "updated_at": "2021-09-17T07:50:43Z",
          "author_association": "MEMBER",
          "body": "I merged tests cleanups in 91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc and 4ca508a68916dd43da45fd6e8b9004824a62d9c8, and rebased this PR.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/921585225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/921649092",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-921649092",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 921649092,
          "node_id": "IC_kwDOAD-Lgs427z_E",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-17T09:26:15Z",
          "updated_at": "2021-09-17T09:26:15Z",
          "author_association": "MEMBER",
          "body": "@felixxm conscious of the feature freeze. Is it ok if I look at these over the weekend? Not sure if that works for you? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/921649092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/921658270",
          "html_url": "https://github.com/django/django/pull/14819#issuecomment-921658270",
          "issue_url": "https://api.github.com/repos/django/django/issues/14819",
          "id": 921658270,
          "node_id": "IC_kwDOAD-Lgs4272Oe",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-09-17T09:40:16Z",
          "updated_at": "2021-09-17T09:40:16Z",
          "author_association": "MEMBER",
          "body": "> @felixxm conscious of the feature freeze. Is it ok if I look at these over the weekend? Not sure if that works for you?\r\n\r\nIt should be fine, thanks :+1: We also have an entire Monday.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/921658270/reactions",
            "total_count": 4,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/7560",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/7560/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/7560/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/7560/events",
      "html_url": "https://github.com/django/django/pull/7560",
      "id": 189399947,
      "node_id": "MDExOlB1bGxSZXF1ZXN0OTM3NzA4NTU=",
      "number": 7560,
      "title": "Refs #27332 -- Add feature to express conditional join on queryset",
      "user": {
        "login": "ticosax",
        "id": 1174343,
        "node_id": "MDQ6VXNlcjExNzQzNDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ticosax",
        "html_url": "https://github.com/ticosax",
        "followers_url": "https://api.github.com/users/ticosax/followers",
        "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
        "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
        "organizations_url": "https://api.github.com/users/ticosax/orgs",
        "repos_url": "https://api.github.com/users/ticosax/repos",
        "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ticosax/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 40,
      "created_at": "2016-11-15T14:03:51Z",
      "updated_at": "2017-09-14T13:03:34Z",
      "closed_at": "2017-09-14T13:03:34Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/7560",
        "html_url": "https://github.com/django/django/pull/7560",
        "diff_url": "https://github.com/django/django/pull/7560.diff",
        "patch_url": "https://github.com/django/django/pull/7560.patch",
        "merged_at": null
      },
      "body": "```python\r\nQuerySet().filtered_relation('relation', alias='alias_relation', condition=Q())\r\n```\r\nEDIT for new API:\r\n```python\r\nfrom django.db.models import FilteredRelation\r\nQuerySet().annotate(alias_relation=FilteredRelation('relation', condition=Q()))\r\n```\r\nhttps://code.djangoproject.com/ticket/27332\r\n\r\n@akaariai I'm not fully satisfied with the implementation. I had to fight the ORM to make it work in my direction.\r\nSo I hope someone will be able to spot quickly the wrong choices I made, to put me back on the right path. Hopefully the foundations are good enough to improve from there.",
      "closed_by": {
        "login": "ticosax",
        "id": 1174343,
        "node_id": "MDQ6VXNlcjExNzQzNDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ticosax",
        "html_url": "https://github.com/ticosax",
        "followers_url": "https://api.github.com/users/ticosax/followers",
        "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
        "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
        "organizations_url": "https://api.github.com/users/ticosax/orgs",
        "repos_url": "https://api.github.com/users/ticosax/repos",
        "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ticosax/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/7560/reactions",
        "total_count": 3,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 3,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/7560/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/262846826",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-262846826",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 262846826,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mjg0NjgyNg==",
          "user": {
            "login": "auvipy",
            "id": 6212603,
            "node_id": "MDQ6VXNlcjYyMTI2MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6212603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auvipy",
            "html_url": "https://github.com/auvipy",
            "followers_url": "https://api.github.com/users/auvipy/followers",
            "following_url": "https://api.github.com/users/auvipy/following{/other_user}",
            "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions",
            "organizations_url": "https://api.github.com/users/auvipy/orgs",
            "repos_url": "https://api.github.com/users/auvipy/repos",
            "events_url": "https://api.github.com/users/auvipy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auvipy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-24T21:31:05Z",
          "updated_at": "2016-11-24T21:31:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "i guess @holvianssi is his active id",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/262846826/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/262919567",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-262919567",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 262919567,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkxOTU2Nw==",
          "user": {
            "login": "holvianssi",
            "id": 19683629,
            "node_id": "MDQ6VXNlcjE5NjgzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19683629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holvianssi",
            "html_url": "https://github.com/holvianssi",
            "followers_url": "https://api.github.com/users/holvianssi/followers",
            "following_url": "https://api.github.com/users/holvianssi/following{/other_user}",
            "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions",
            "organizations_url": "https://api.github.com/users/holvianssi/orgs",
            "repos_url": "https://api.github.com/users/holvianssi/repos",
            "events_url": "https://api.github.com/users/holvianssi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holvianssi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-25T09:52:33Z",
          "updated_at": "2016-11-25T09:52:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "I tried a couple of approaches and this was best I was able to come up with https://github.com/holvi/django/tree/anssi-filtered_relation",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/262919567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/262924663",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-262924663",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 262924663,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkyNDY2Mw==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-25T10:18:23Z",
          "updated_at": "2016-11-25T10:24:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @holvianssi,\r\nIt looks very nice.\r\n<strike>the rebase didn't work like expected. I lost original ownership. The second commit is your work.</strike>\r\n I granted you collaborator of my repo so you can push your changes with your name on my branch.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/262924663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/262932500",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-262932500",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 262932500,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkzMjUwMA==",
          "user": {
            "login": "holvianssi",
            "id": 19683629,
            "node_id": "MDQ6VXNlcjE5NjgzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19683629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holvianssi",
            "html_url": "https://github.com/holvianssi",
            "followers_url": "https://api.github.com/users/holvianssi/followers",
            "following_url": "https://api.github.com/users/holvianssi/following{/other_user}",
            "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions",
            "organizations_url": "https://api.github.com/users/holvianssi/orgs",
            "repos_url": "https://api.github.com/users/holvianssi/repos",
            "events_url": "https://api.github.com/users/holvianssi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holvianssi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-25T10:59:22Z",
          "updated_at": "2016-11-25T10:59:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "I had some problems with rebase, sorry for the author change! You can just cherry-pick my commit and continue from there. I likely won't have much time for this, but I'll try to review your work if at all possible.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/262932500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/263231759",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-263231759",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 263231759,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzIzMTc1OQ==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-11-28T10:08:39Z",
          "updated_at": "2016-11-28T10:08:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "@holvianssi I think we managed to get something mergeable.\r\n\r\nof course some commits needs to be fixed up, I'll keep them until we reach consensus to ease the review with incremental changes.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/263231759/reactions",
            "total_count": 4,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 3,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/269992803",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-269992803",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 269992803,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTk5MjgwMw==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-02T16:24:11Z",
          "updated_at": "2017-01-02T16:24:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham Thank you for your feedback. I will raise awareness of this pull request on the mailing list.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/269992803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/270015823",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-270015823",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 270015823,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDAxNTgyMw==",
          "user": {
            "login": "softzer0",
            "id": 7763533,
            "node_id": "MDQ6VXNlcjc3NjM1MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/softzer0",
            "html_url": "https://github.com/softzer0",
            "followers_url": "https://api.github.com/users/softzer0/followers",
            "following_url": "https://api.github.com/users/softzer0/following{/other_user}",
            "gists_url": "https://api.github.com/users/softzer0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/softzer0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/softzer0/subscriptions",
            "organizations_url": "https://api.github.com/users/softzer0/orgs",
            "repos_url": "https://api.github.com/users/softzer0/repos",
            "events_url": "https://api.github.com/users/softzer0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/softzer0/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-02T20:15:42Z",
          "updated_at": "2017-01-02T20:16:05Z",
          "author_association": "NONE",
          "body": "Great, I'm looking forward to its final implementation in Django!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/270015823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/270337737",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-270337737",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 270337737,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDMzNzczNw==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-04T10:14:34Z",
          "updated_at": "2017-01-04T10:14:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you @Ian-Foote , I addressed your comments and rebased the branch against master to solve the conflict.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/270337737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/271324042",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-271324042",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 271324042,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTMyNDA0Mg==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-09T16:00:26Z",
          "updated_at": "2017-01-09T16:00:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "Any chance before feature freeze ? :grimacing:",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/271324042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/272631855",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-272631855",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 272631855,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjYzMTg1NQ==",
          "user": {
            "login": "softzer0",
            "id": 7763533,
            "node_id": "MDQ6VXNlcjc3NjM1MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/softzer0",
            "html_url": "https://github.com/softzer0",
            "followers_url": "https://api.github.com/users/softzer0/followers",
            "following_url": "https://api.github.com/users/softzer0/following{/other_user}",
            "gists_url": "https://api.github.com/users/softzer0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/softzer0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/softzer0/subscriptions",
            "organizations_url": "https://api.github.com/users/softzer0/orgs",
            "repos_url": "https://api.github.com/users/softzer0/repos",
            "events_url": "https://api.github.com/users/softzer0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/softzer0/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-14T15:42:22Z",
          "updated_at": "2017-01-14T15:42:22Z",
          "author_association": "NONE",
          "body": "Any news before feature freeze? Or it happened already?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/272631855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/272634087",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-272634087",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 272634087,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjYzNDA4Nw==",
          "user": {
            "login": "auvipy",
            "id": 6212603,
            "node_id": "MDQ6VXNlcjYyMTI2MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6212603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auvipy",
            "html_url": "https://github.com/auvipy",
            "followers_url": "https://api.github.com/users/auvipy/followers",
            "following_url": "https://api.github.com/users/auvipy/following{/other_user}",
            "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions",
            "organizations_url": "https://api.github.com/users/auvipy/orgs",
            "repos_url": "https://api.github.com/users/auvipy/repos",
            "events_url": "https://api.github.com/users/auvipy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auvipy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-14T16:18:10Z",
          "updated_at": "2017-01-14T16:18:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "@ticosax probably you need a rebase",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/272634087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/272862470",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-272862470",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 272862470,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjg2MjQ3MA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-01-16T13:31:53Z",
          "updated_at": "2017-01-16T13:31:53Z",
          "author_association": "MEMBER",
          "body": "Sorry, this won't make it as I haven't had time to review in detail and I don't see any other particularly detailed reviews.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/272862470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/279976977",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-279976977",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 279976977,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTk3Njk3Nw==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-15T10:42:12Z",
          "updated_at": "2017-02-15T10:42:12Z",
          "author_association": "MEMBER",
          "body": "Do you think there might be a way to specify if the join should force the use of INNER or LEFT? It's a common problem that people have, and it feels like this patch should be able to deliver that. Something like:\r\n\r\n```\r\nQuerySet().filtered_relation('relation', alias='alias_relation', condition=Q(), force_left=True)\r\nQuerySet().filtered_relation('relation', alias='alias_relation', condition=Q(), force_inner=True)\r\n```\r\n\r\nThoughts?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/279976977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280017248",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280017248",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280017248,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDAxNzI0OA==",
          "user": {
            "login": "holvianssi",
            "id": 19683629,
            "node_id": "MDQ6VXNlcjE5NjgzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19683629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holvianssi",
            "html_url": "https://github.com/holvianssi",
            "followers_url": "https://api.github.com/users/holvianssi/followers",
            "following_url": "https://api.github.com/users/holvianssi/following{/other_user}",
            "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions",
            "organizations_url": "https://api.github.com/users/holvianssi/orgs",
            "repos_url": "https://api.github.com/users/holvianssi/repos",
            "events_url": "https://api.github.com/users/holvianssi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holvianssi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-15T13:58:25Z",
          "updated_at": "2017-02-15T13:58:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "About left joins, I think we should always generate the join as LEFT join. If the user wants to have INNER join, let's recommend doing `.filter(alias_relation__isnull=False)`. Now Django should be smart enough to turn that join to INNER join.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280017248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280020964",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280020964",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280020964,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDAyMDk2NA==",
          "user": {
            "login": "holvianssi",
            "id": 19683629,
            "node_id": "MDQ6VXNlcjE5NjgzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19683629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holvianssi",
            "html_url": "https://github.com/holvianssi",
            "followers_url": "https://api.github.com/users/holvianssi/followers",
            "following_url": "https://api.github.com/users/holvianssi/following{/other_user}",
            "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions",
            "organizations_url": "https://api.github.com/users/holvianssi/orgs",
            "repos_url": "https://api.github.com/users/holvianssi/repos",
            "events_url": "https://api.github.com/users/holvianssi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holvianssi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-15T14:13:41Z",
          "updated_at": "2017-02-15T14:13:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "There are two cases where this needs additional tests.\r\n\r\nIf you do a filtered relation against a NOT NULL field, then the join should be generated as LEFT join instead of INNER join. Assume book.author is not nullable, then `Book.objects.filtered_relation('author', alias='only_young_authors', condition=Q('author__age__lte=20'))` should produce a query with LEFT JOIN for author.\r\n\r\nWe need to consider what should happen in split exclude cases:\r\n```\r\n qs1 = Author.objects.filtered_relation('friends', alias='young_friends', Q(friends__age__lte=20))\r\n qs2 = Author.objects.all()\r\n```\r\nnow, `qs1.exclude(young_friends__age__gte=10)` should produce a subquery like `qs2.exclude(friends__age__gte=10)` does for the filter clause. The test would be something along the lines of having one author with friends with ages 5 and 10 and 15, and another with friends of age 5 and 25 and 30.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280020964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280029631",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280029631",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280029631,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDAyOTYzMQ==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-15T14:46:23Z",
          "updated_at": "2017-02-15T14:46:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "@holvianssi Nice to see you back.\r\nI will work on adding those new use cases.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280029631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280069583",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280069583",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280069583,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA2OTU4Mw==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-15T16:58:03Z",
          "updated_at": "2017-02-15T16:59:18Z",
          "author_association": "CONTRIBUTOR",
          "body": "@holvianssi 0aac5d81a85f754719781bbb5f44dd01dff6c5d6 shows that you were right.\r\nexclude() was not supported at all.\r\n\r\nYou mentioned 2 use cases that are missing. I'm not sure I understood both, just one instead.\r\nplease can you clarify in view of latest commit ?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280069583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280308773",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280308773",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280308773,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDMwODc3Mw==",
          "user": {
            "login": "holvianssi",
            "id": 19683629,
            "node_id": "MDQ6VXNlcjE5NjgzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19683629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holvianssi",
            "html_url": "https://github.com/holvianssi",
            "followers_url": "https://api.github.com/users/holvianssi/followers",
            "following_url": "https://api.github.com/users/holvianssi/following{/other_user}",
            "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions",
            "organizations_url": "https://api.github.com/users/holvianssi/orgs",
            "repos_url": "https://api.github.com/users/holvianssi/repos",
            "events_url": "https://api.github.com/users/holvianssi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holvianssi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-16T11:42:26Z",
          "updated_at": "2017-02-16T11:42:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "The other case can be seen with the following example data:\r\n   Book -> Author: age = 30\r\n\r\nWhere the model is something like Book.author = ForeignKey(Author, null=False)\r\n\r\nAnd the query is:\r\n```\r\nqs = Book.objects.filtered_relation(\r\n    'author', alias='young_authors', condition=Q(author__age__lte=20)\r\n)\r\nself.assertEqual(qs.filter(young_authors__isnull=True).count(), 1)\r\n```\r\nAs an additional performance improvement, if you do some other query against this relation, then the join type should be INNER. For example:\r\n```\r\n    self.assertIn('INNER JOIN' in str(qs.filter(young_authors__age__gte=10).query))\r\n```\r\nbut this case is not that important, it's just a performance optimization.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280308773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280312114",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280312114",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280312114,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDMxMjExNA==",
          "user": {
            "login": "holvianssi",
            "id": 19683629,
            "node_id": "MDQ6VXNlcjE5NjgzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19683629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holvianssi",
            "html_url": "https://github.com/holvianssi",
            "followers_url": "https://api.github.com/users/holvianssi/followers",
            "following_url": "https://api.github.com/users/holvianssi/following{/other_user}",
            "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions",
            "organizations_url": "https://api.github.com/users/holvianssi/orgs",
            "repos_url": "https://api.github.com/users/holvianssi/repos",
            "events_url": "https://api.github.com/users/holvianssi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holvianssi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-16T11:58:38Z",
          "updated_at": "2017-02-16T11:58:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "There is still another case to consider - should .filter(young_friends__age__lte=20).filter(young_friends__name__icontains='a') produce two joins, or reuse the same join (the question is if the query should match if there is a young friend with age less than 20 and 'a' in the name, or if it should match if there is a young friend with age less than 20, and a possibly separate young friend with 'a' in the name). If you query for .filter(friends__age__lte=20).filter(friends__name__icontains='a'), you'll get two joins with Django.\r\n\r\nThere are cases where it would be useful to be able to say \"add this join to the query, further .filter() or .exclude() operations will work against that exact join\", and there are cases where you want the current Django semantics for the added relation. So, I'm not sure which way would be the best one forward. If it would be possible it would be nice to have current Django semantics as default, but be able to say \"I want this join, I know what I'm doing\" as an option. But doing both might make this too complicated to work on.\r\n\r\nI hope this makes even some sense. We are getting into the dark areas of split_exclude(), join promotion and multiple joins for same reverse foreign key relation...",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280312114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/280364533",
          "html_url": "https://github.com/django/django/pull/7560#issuecomment-280364533",
          "issue_url": "https://api.github.com/repos/django/django/issues/7560",
          "id": 280364533,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDM2NDUzMw==",
          "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-16T15:36:02Z",
          "updated_at": "2017-02-16T15:36:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "You know how to scare people :wink:\r\nI will try harder, thank you for your commitment, this is helpful.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/280364533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/13065",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/13065/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/13065/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/13065/events",
      "html_url": "https://github.com/django/django/pull/13065",
      "id": 638395835,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MTc2NzQz",
      "number": 13065,
      "title": "Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().",
      "user": {
        "login": "ChihSeanHsu",
        "id": 34153546,
        "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChihSeanHsu",
        "html_url": "https://github.com/ChihSeanHsu",
        "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
        "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
        "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
        "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
        "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
        "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 25,
      "created_at": "2020-06-14T17:34:29Z",
      "updated_at": "2022-01-20T14:50:50Z",
      "closed_at": "2022-01-20T04:52:24Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/13065",
        "html_url": "https://github.com/django/django/pull/13065",
        "diff_url": "https://github.com/django/django/pull/13065.diff",
        "patch_url": "https://github.com/django/django/pull/13065.patch",
        "merged_at": "2022-01-20T04:52:24Z"
      },
      "body": "[Ticket #31685](https://code.djangoproject.com/ticket/31685#)\r\n\r\nAdding `upsert_conflicts` arguments to `bulk_create`.\r\nThis change only supports to mysql, sqlite3 and postgresql.\r\n\r\n- [x] unittest\r\n- [x] refactor\r\n- [x] document",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/13065/reactions",
        "total_count": 7,
        "+1": 7,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/13065/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/644849658",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-644849658",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 644849658,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDg0OTY1OA==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-06-16T15:48:53Z",
          "updated_at": "2020-06-16T15:50:47Z",
          "author_association": "MEMBER",
          "body": "I just gave the patch a quick glance, but I am wondering if it wouldn't make more sense to have the argument similar to the `ForeignKey.on_delete`, ie `on_conflict = models.IGNORE | models.UPDATE`? This might allow for more advanced \"on conflict update set xyz=aaa\" forms in the future.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/644849658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/644865681",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-644865681",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 644865681,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDg2NTY4MQ==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-06-16T16:17:15Z",
          "updated_at": "2020-06-16T16:17:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I just gave the patch a quick glance, but I am wondering if it wouldn't make more sense to have the argument similar to the `ForeignKey.on_delete`, ie `on_conflict = models.IGNORE | models.UPDATE`? This might allow for more advanced \"on conflict update set xyz=aaa\" forms in the future.\r\n\r\nIt's a good idea. I'll change this argument to what you suggest.\r\nThanks for your help.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/644865681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/644897004",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-644897004",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 644897004,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDg5NzAwNA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-06-16T17:13:08Z",
          "updated_at": "2020-06-16T17:13:08Z",
          "author_association": "MEMBER",
          "body": "> I just gave the patch a quick glance, but I am wondering if it wouldn't make more sense to have the argument similar to the ForeignKey.on_delete, ie on_conflict = models.IGNORE | models.UPDATE? This might allow for more advanced \"on conflict update set xyz=aaa\" forms in the future.\r\n\r\nIt was discussed in the original ticket-28668 and #9192, see [comment](https://github.com/django/django/pull/9192#issuecomment-409054225).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/644897004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/644897724",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-644897724",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 644897724,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDg5NzcyNA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-06-16T17:14:32Z",
          "updated_at": "2020-06-16T17:14:32Z",
          "author_association": "MEMBER",
          "body": "I would change `upsert_conflicts` to `update_conflicts` (`True`/`False`).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/644897724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/646067512",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-646067512",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 646067512,
          "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjA2NzUxMg==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-06-18T14:47:10Z",
          "updated_at": "2020-06-18T14:47:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I would change `upsert_conflicts` to `update_conflicts` (`True`/`False`).\r\n\r\nOkay, I've changed upsert to update.\r\nAnd you provide the topic that is about not using string constant instead of boolean argument.\r\nI use boolean arguments(update_conflicts, ignore_conflicts) for  high-level function `bulk_create` , but use string constant in low-level function that's called by `bulk_create`. Because we can decrease some duplicate code by using string constant in low-level function.\r\n\r\nI don' know it is a good way to doing like this or not.\r\nCould anyone give some advice?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/646067512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/717307547",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-717307547",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 717307547,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzMwNzU0Nw==",
          "user": {
            "login": "chrisconlan",
            "id": 14984085,
            "node_id": "MDQ6VXNlcjE0OTg0MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14984085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisconlan",
            "html_url": "https://github.com/chrisconlan",
            "followers_url": "https://api.github.com/users/chrisconlan/followers",
            "following_url": "https://api.github.com/users/chrisconlan/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisconlan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisconlan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisconlan/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisconlan/orgs",
            "repos_url": "https://api.github.com/users/chrisconlan/repos",
            "events_url": "https://api.github.com/users/chrisconlan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisconlan/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-10-27T15:04:43Z",
          "updated_at": "2020-10-27T15:04:43Z",
          "author_association": "NONE",
          "body": "Thank you for writing this pull request. Looking forward to using this feature",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/717307547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/718100893",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-718100893",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 718100893,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcxODEwMDg5Mw==",
          "user": {
            "login": "jacobtylerwalls",
            "id": 38668450,
            "node_id": "MDQ6VXNlcjM4NjY4NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobtylerwalls",
            "html_url": "https://github.com/jacobtylerwalls",
            "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
            "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
            "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
            "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-10-28T17:44:42Z",
          "updated_at": "2020-10-28T17:45:02Z",
          "author_association": "MEMBER",
          "body": "Hi @ChihSeanHsu I noticed you ticked Needs Tests and Needs Documentation on the ticket, which signals to reviewers this isn't ready to review. Be sure to untick those if you've got tests and docs and you're ready for a review. Also this would be a good time to resolve the merge conflict. Thanks! ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/718100893/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/720098190",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-720098190",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 720098190,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDA5ODE5MA==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-01T14:35:36Z",
          "updated_at": "2020-11-01T14:35:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hi @ChihSeanHsu I noticed you ticked Needs Tests and Needs Documentation on the ticket, which signals to reviewers this isn't ready to review. Be sure to untick those if you've got tests and docs and you're ready for a review. Also this would be a good time to resolve the merge conflict. Thanks!\r\n\r\nHi @jacobtylerwalls,\r\nThanks for your notification, I'll merge conflict later.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/720098190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/723931722",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-723931722",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 723931722,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzkzMTcyMg==",
          "user": {
            "login": "alextatarinov",
            "id": 17722304,
            "node_id": "MDQ6VXNlcjE3NzIyMzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/17722304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alextatarinov",
            "html_url": "https://github.com/alextatarinov",
            "followers_url": "https://api.github.com/users/alextatarinov/followers",
            "following_url": "https://api.github.com/users/alextatarinov/following{/other_user}",
            "gists_url": "https://api.github.com/users/alextatarinov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alextatarinov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alextatarinov/subscriptions",
            "organizations_url": "https://api.github.com/users/alextatarinov/orgs",
            "repos_url": "https://api.github.com/users/alextatarinov/repos",
            "events_url": "https://api.github.com/users/alextatarinov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alextatarinov/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-09T10:45:50Z",
          "updated_at": "2020-11-09T10:47:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @ChihSeanHsu, great job! However, I think there is some room for improvement. \r\nWith `ignore_conflicts` it makes sense to just say \"ON CONFLICT DO NOTHING\" (on any conflict), but IMHO it is more complicated with upsert.\r\nThere is more than fields with `unique=True` that can produce the conflict. At least, there are `unique_together`, and actually, there can be any unique constraint added either via RunSQL or manual database change, and we don't know what exactly is going to conflict. Therefore, there is a need for a more granular API, which allows users to specify both `unique_fields` for the `ON CONFLICT` part and `update_fields`, similarly to `update_or_create`.\r\nWe are using [this library](https://django-manager-utils.readthedocs.io/en/latest/ref/method-documentation.html#manager_utils.manager_utils.bulk_upsert), and in my experience, it does not seem possible to automatically infer the intended behavior (what to update on what fields conflict) and must be specified by the developer.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/723931722/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/723944525",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-723944525",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 723944525,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzk0NDUyNQ==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-09T11:09:36Z",
          "updated_at": "2020-11-09T11:09:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "@alextatarinov good point, we would need similar logic to what's used in `Model._get_unique_checks` to take `unique_together` and `UniqueConstraint` in account:\r\n\r\nhttps://github.com/django/django/blob/10f8b82d195caa3745ba37d9424893763f89653e/django/db/models/base.py#L1037-L1045\r\n\r\nBut as you say it would probably make more sense to let the user specify the fields to conflict on.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/723944525/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/724063699",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-724063699",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 724063699,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDA2MzY5OQ==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-09T14:54:52Z",
          "updated_at": "2020-11-09T14:54:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @alextatarinov , thanks for your suggestion, I'll add it to this pull request.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/724063699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/727599873",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-727599873",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 727599873,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzU5OTg3Mw==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-15T16:46:44Z",
          "updated_at": "2020-11-15T16:46:44Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @alextatarinov and @hannseman,\r\n\r\nI have a question need to clarify, this new feature is based on `bulk_create` and it is based on `INSERT ... ON DUPLICATE KEY DO ...` or `INSERT ... ON CONFLICT (...) DO ...`.\r\nConflicts will only happen when pk or unique keys duplicates, because it's a insert action.\r\nIMHO, we only need to let user input what fields(`update_fields`) they want to update, and I'll add more detailed in get `unique_fields`.\r\nOr do you two have any other concern?\r\n\r\nAnd upsert function in [this library](https://github.com/ambitioninc/django-manager-utils/tree/master) is not using this SQL command, it controls this action in application level not database.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/727599873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/727610104",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-727610104",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 727610104,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzYxMDEwNA==",
          "user": {
            "login": "alextatarinov",
            "id": 17722304,
            "node_id": "MDQ6VXNlcjE3NzIyMzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/17722304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alextatarinov",
            "html_url": "https://github.com/alextatarinov",
            "followers_url": "https://api.github.com/users/alextatarinov/followers",
            "following_url": "https://api.github.com/users/alextatarinov/following{/other_user}",
            "gists_url": "https://api.github.com/users/alextatarinov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alextatarinov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alextatarinov/subscriptions",
            "organizations_url": "https://api.github.com/users/alextatarinov/orgs",
            "repos_url": "https://api.github.com/users/alextatarinov/repos",
            "events_url": "https://api.github.com/users/alextatarinov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alextatarinov/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-15T17:56:56Z",
          "updated_at": "2020-11-15T18:51:14Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hello again, @ChihSeanHsu. If you specify `native=True`, the linked library uses the `ON CONFLICT` statement via the `querybuilder` library.\r\nI see where your logic goes, but I think there is a reason why the conflict target is required to provide when using `DO UPDATE` (https://www.postgresql.org/docs/9.5/sql-insert.html#SQL-ON-CONFLICT). It means the database cannot automatically infer the conflict target, neither we can do it in Django. I am not sure why, one thing that comes to mind is that the row inserted can conflict with multiple other rows on different constraints, and the database won't know which row to update. Therefore, it's the developer who should specify unique fields that may lead to conflict + update. \r\nOn a side note, I think the inability to specify unique_fields for ignore_conflicts is also a shortcoming and should be addressed (maybe even in this ticket).\r\n\r\nP.S. I am nowhere an expert, so I suggest we ask someone more experienced.\r\nP.P.S. It turns out, that when multiple rows conflict, all of them are updated in MySQL (which does not allow specifying unique_fields). You can also add a LIMIT to update only X first rows matched. https://stackoverflow.com/a/16377933.\r\n Now I really wonder why PostgreSQL requires the conflict_target with ON UPDATE. I believe PostgreSQL is better designed than MySQL in general, so I would say their approach is preferable (require to specify unique_fields). But if I am not mistaking, this is not supported by MySQL, unfortunately. Not sure which API and behavior would be the best then.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/727610104/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/727628166",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-727628166",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 727628166,
          "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzYyODE2Ng==",
          "user": {
            "login": "hannseman",
            "id": 758858,
            "node_id": "MDQ6VXNlcjc1ODg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/758858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannseman",
            "html_url": "https://github.com/hannseman",
            "followers_url": "https://api.github.com/users/hannseman/followers",
            "following_url": "https://api.github.com/users/hannseman/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannseman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannseman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannseman/subscriptions",
            "organizations_url": "https://api.github.com/users/hannseman/orgs",
            "repos_url": "https://api.github.com/users/hannseman/repos",
            "events_url": "https://api.github.com/users/hannseman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannseman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-15T20:05:53Z",
          "updated_at": "2020-11-15T20:24:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'm not really sure that collecting all unique fields and then using them for `conflict_target` will work in PostgresSQL. My understanding is that it expects a field or a set of fields that can be inferred as a unique constraint. In other words the fields that is passed as `conflict_target` needs to match a single unique constraint. https://www.postgresql.org/docs/current/sql-insert.html#SQL-ON-CONFLICT\r\n\r\nFor example:\r\n```sql\r\nCREATE TABLE person(\r\n    email varchar UNIQUE,\r\n    phone varchar UNIQUE,\r\n    name varchar\r\n);\r\n```\r\n\r\n```python\r\npersons = [Person(name=\"Some name\", phone=\"+46700000000\", email=\"test@example.com\")]\r\nPerson.objects.bulk_create(persons, update_conflicts=True, update_fields=[\"name\"])\r\n```\r\n\r\nWould generate the following SQL:\r\n\r\n```sql\r\nINSERT INTO person(email, phone, name) VALUES ('test@example.com', '+46700000000', 'Some name')\r\nON CONFLICT (email, phone)\r\nDO UPDATE SET name = EXCLUDED.name;\r\n```\r\n\r\nThis would error with `ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification` as no composite index on `(email, phone)` exists.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/727628166/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/731284109",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-731284109",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 731284109,
          "node_id": "MDEyOklzc3VlQ29tbWVudDczMTI4NDEwOQ==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-11-20T16:56:34Z",
          "updated_at": "2020-11-20T16:56:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hello again,\r\n\r\n> \r\n> \r\n> Hello again, @ChihSeanHsu. If you specify `native=True`, the linked library uses the `ON CONFLICT` statement via the `querybuilder` library.\r\n> I see where your logic goes, but I think there is a reason why the conflict target is required to provide when using `DO UPDATE` (https://www.postgresql.org/docs/9.5/sql-insert.html#SQL-ON-CONFLICT). It means the database cannot automatically infer the conflict target, neither we can do it in Django. I am not sure why, one thing that comes to mind is that the row inserted can conflict with multiple other rows on different constraints, and the database won't know which row to update. Therefore, it's the developer who should specify unique fields that may lead to conflict + update.\r\n> On a side note, I think the inability to specify unique_fields for ignore_conflicts is also a shortcoming and should be addressed (maybe even in this ticket).\r\n> \r\n> P.S. I am nowhere an expert, so I suggest we ask someone more experienced.\r\n> P.P.S. It turns out, that when multiple rows conflict, all of them are updated in MySQL (which does not allow specifying unique_fields). You can also add a LIMIT to update only X first rows matched. https://stackoverflow.com/a/16377933.\r\n> Now I really wonder why PostgreSQL requires the conflict_target with ON UPDATE. I believe PostgreSQL is better designed than MySQL in general, so I would say their approach is preferable (require to specify unique_fields). But if I am not mistaking, this is not supported by MySQL, unfortunately. Not sure which API and behavior would be the best then.\r\n\r\n\r\nAfter I surveyed and as you mentioned, the `unique_fields` argument is only for user using postgresql and sqlite.\r\nIf user use mysql as their database, they only can specify `update_fields`.\r\nIn my opinion, it's not a good solution, but there is this kind of limit.\r\n\r\n\r\n> \r\n> \r\n> I'm not really sure that collecting all unique fields and then using them for `conflict_target` will work in PostgresSQL. My understanding is that it expects a field or a set of fields that can be inferred as a unique constraint. In other words the fields that is passed as `conflict_target` needs to match a single unique constraint. https://www.postgresql.org/docs/current/sql-insert.html#SQL-ON-CONFLICT\r\n> \r\n> For example:\r\n> \r\n> ```sql\r\n> CREATE TABLE person(\r\n>     email varchar UNIQUE,\r\n>     phone varchar UNIQUE,\r\n>     name varchar\r\n> );\r\n> ```\r\n> \r\n> ```python\r\n> persons = [Person(name=\"Some name\", phone=\"+46700000000\", email=\"test@example.com\")]\r\n> Person.objects.bulk_create(persons, update_conflicts=True, update_fields=[\"name\"])\r\n> ```\r\n> \r\n> Would generate the following SQL:\r\n> \r\n> ```sql\r\n> INSERT INTO person(email, phone, name) VALUES ('test@example.com', '+46700000000', 'Some name')\r\n> ON CONFLICT (email, phone)\r\n> DO UPDATE SET name = EXCLUDED.name;\r\n> ```\r\n> \r\n> This would error with `ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification` as no composite index on `(email, phone)` exists.\r\n\r\nAnd I will add more unittest to cover this situation.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/731284109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/749082631",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-749082631",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 749082631,
          "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTA4MjYzMQ==",
          "user": {
            "login": "lithammer",
            "id": 177685,
            "node_id": "MDQ6VXNlcjE3NzY4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/177685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lithammer",
            "html_url": "https://github.com/lithammer",
            "followers_url": "https://api.github.com/users/lithammer/followers",
            "following_url": "https://api.github.com/users/lithammer/following{/other_user}",
            "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions",
            "organizations_url": "https://api.github.com/users/lithammer/orgs",
            "repos_url": "https://api.github.com/users/lithammer/repos",
            "events_url": "https://api.github.com/users/lithammer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lithammer/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-12-21T17:00:09Z",
          "updated_at": "2020-12-21T17:09:34Z",
          "author_association": "NONE",
          "body": "Not sure if it's my place to comment but... I wonder if the API could be made a bit more flexible by modeling a bit more like `QuerySet.update()`? For example we have a use-case where we want increment fields when there's a conflict, rather than replacing. Something similar to this:\r\n\r\n```sql\r\nCREATE TABLE foo (\r\n    timestamp timestamp NOT NULL,\r\n    num_requests integer NOT NULL\r\n);\r\n```\r\n\r\n```sql\r\nINSERT INTO\r\n    foo (timestamp, num_requests)\r\nVALUES\r\n    ('2020-12-21T12:00:00', 10)\r\nON CONFLICT\r\n    (timestamp)\r\nDO UPDATE SET\r\n    num_requests = foo.num_requests + EXCLUDE.num_requests;\r\n```\r\n\r\n```python\r\nfoos = [\r\n    Foo(timestamp=\"2020-12-21T12:00:00\", num_requests=F(\"num_requests\") + 10),\r\n]\r\nFoo.objects.bulk_create(foos, update_conflicts=True, update_fields=[\"num_requests\"])\r\n```\r\n\r\nNot sure how portable that is though, or if it's mostly a PostgreSQL thing.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/749082631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/766358850",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-766358850",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 766358850,
          "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjM1ODg1MA==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-01-24T14:41:21Z",
          "updated_at": "2021-01-24T14:41:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "> ```python\r\n> \"num_requests\"\r\n> ```\r\n\r\nHi @lithammer,\r\n\r\nIt's a good suggestion, but `bulk_create` action is base on `InsertQuery` and `F` is not allowed to use in it.\r\nIf we want to support this flexible usage, we need to refactor lot of code.\r\n\r\nBut if there is requirement, we can discuss it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/766358850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/822564693",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-822564693",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 822564693,
          "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjU2NDY5Mw==",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-04-19T15:34:48Z",
          "updated_at": "2021-04-19T15:34:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @cjerdonek,\r\n\r\nI've modified this PR.\r\nThanks for your review.\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/822564693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/945176606",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-945176606",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 945176606,
          "node_id": "IC_kwDOAD-Lgs44VkAe",
          "user": {
            "login": "jacobtylerwalls",
            "id": 38668450,
            "node_id": "MDQ6VXNlcjM4NjY4NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobtylerwalls",
            "html_url": "https://github.com/jacobtylerwalls",
            "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
            "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
            "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
            "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-10-17T18:58:55Z",
          "updated_at": "2021-10-17T18:58:55Z",
          "author_association": "MEMBER",
          "body": "Thanks for the continued work here. Is this ready for re-review? If so, please make sure to uncheck Needs Improvement on the ticket each time it's ready for re-review. (Would be helpful if you could also bump the release note and change annotations to 4.1). Cheers.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/945176606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/945840694",
          "html_url": "https://github.com/django/django/pull/13065#issuecomment-945840694",
          "issue_url": "https://api.github.com/repos/django/django/issues/13065",
          "id": 945840694,
          "node_id": "IC_kwDOAD-Lgs44YGI2",
          "user": {
            "login": "ChihSeanHsu",
            "id": 34153546,
            "node_id": "MDQ6VXNlcjM0MTUzNTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34153546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChihSeanHsu",
            "html_url": "https://github.com/ChihSeanHsu",
            "followers_url": "https://api.github.com/users/ChihSeanHsu/followers",
            "following_url": "https://api.github.com/users/ChihSeanHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChihSeanHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChihSeanHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChihSeanHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ChihSeanHsu/orgs",
            "repos_url": "https://api.github.com/users/ChihSeanHsu/repos",
            "events_url": "https://api.github.com/users/ChihSeanHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChihSeanHsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-10-18T14:34:06Z",
          "updated_at": "2021-10-18T14:34:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Thanks for the continued work here. Is this ready for re-review? If so, please make sure to uncheck Needs Improvement on the ticket each time it's ready for re-review. (Would be helpful if you could also bump the release note and change annotations to 4.1). Cheers.\r\n\r\nHi @jacobtylerwalls ,\r\nThanks for your remind.\r\nI've update release note to 4.1 and change ticket status.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/945840694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/16942",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/16942/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/16942/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/16942/events",
      "html_url": "https://github.com/django/django/pull/16942",
      "id": 1741956958,
      "node_id": "PR_kwDOAD-Lgs5SNFHF",
      "number": 16942,
      "title": "Fixed #34429 -- Allowed setting unusable passwords for users in the auth forms.",
      "user": {
        "login": "fsbraun",
        "id": 16904477,
        "node_id": "MDQ6VXNlcjE2OTA0NDc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fsbraun",
        "html_url": "https://github.com/fsbraun",
        "followers_url": "https://api.github.com/users/fsbraun/followers",
        "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
        "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
        "organizations_url": "https://api.github.com/users/fsbraun/orgs",
        "repos_url": "https://api.github.com/users/fsbraun/repos",
        "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fsbraun/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [
        {
          "id": 5617636389,
          "node_id": "LA_kwDOAD-Lgs8AAAABTtZUJQ",
          "url": "https://api.github.com/repos/django/django/labels/selenium",
          "name": "selenium",
          "color": "CB0D8F",
          "default": false,
          "description": "Apply to have Selenium tests run on a PR"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 57,
      "created_at": "2023-06-05T14:54:52Z",
      "updated_at": "2024-05-23T12:15:18Z",
      "closed_at": "2024-02-20T18:07:51Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/16942",
        "html_url": "https://github.com/django/django/pull/16942",
        "diff_url": "https://github.com/django/django/pull/16942.diff",
        "patch_url": "https://github.com/django/django/pull/16942.patch",
        "merged_at": "2024-02-20T18:07:51Z"
      },
      "body": "ticket-34429\r\n\r\n## Feature added\r\nThis PR introduces a new functionality to the admin change password form: the checkbox (on by default) \"Allow login\"\r\n\r\n<img width=\"715\" alt=\"image\" src=\"https://github.com/django/django/assets/16904477/96cfe15f-8a92-4d73-9d8c-44c9e0c0d584\">\r\n\r\nIf unchecked, the password field disappears and the form sets an unusable password upon submission. The user is warned before.\r\n\r\n<img width=\"715\" alt=\"image\" src=\"https://github.com/django/django/assets/16904477/9c651847-2101-4167-9161-fb8022cee851\">\r\n\r\n## Tests\r\n\r\nExisting tests have been changed to contain the new form field.\r\n\r\nA new test was added to test the functionality.\r\n\r\n## Other effects\r\nThis PR adds three new strings which will have to be translated.",
      "closed_by": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/16942/reactions",
        "total_count": 4,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 2,
        "confused": 0,
        "heart": 0,
        "rocket": 2,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/16942/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1577141837",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1577141837",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1577141837,
          "node_id": "IC_kwDOAD-Lgs5eAUZN",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-05T16:52:02Z",
          "updated_at": "2023-06-05T17:09:43Z",
          "author_association": "CONTRIBUTOR",
          "body": "@ngnpope Thank you for the suggestions! Let me briefly comment and ask one more question:\r\n\r\n* Probably we do not need to wait for `DOMContentLoaded` since the script is loaded as `async`. It would probably miss the event (which might be fired before it is loaded). I'll remove the event in total.\r\n* Using the `hidden` property might clash with custom css which might set something like `.form-row {\u00a0display: block\u00a0}` effectively disabling the `hidden` property. OK, if I stay with `style.display`? I believe it is more robust.\r\n\r\nWill, of course, also make the other changes.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1577141837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1577237326",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1577237326",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1577237326,
          "node_id": "IC_kwDOAD-Lgs5eArtO",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-05T18:02:16Z",
          "updated_at": "2023-06-05T18:02:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "One more thing to add: I did use `function () { ... }` instead of `() => { ...\u00a0}` since otherwise `this` is not defined properly.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1577237326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1577856889",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1577856889",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1577856889,
          "node_id": "IC_kwDOAD-Lgs5eDC95",
          "user": {
            "login": "shangxiao",
            "id": 1845938,
            "node_id": "MDQ6VXNlcjE4NDU5Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1845938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangxiao",
            "html_url": "https://github.com/shangxiao",
            "followers_url": "https://api.github.com/users/shangxiao/followers",
            "following_url": "https://api.github.com/users/shangxiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangxiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangxiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangxiao/subscriptions",
            "organizations_url": "https://api.github.com/users/shangxiao/orgs",
            "repos_url": "https://api.github.com/users/shangxiao/repos",
            "events_url": "https://api.github.com/users/shangxiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangxiao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-06T03:45:09Z",
          "updated_at": "2023-06-06T03:45:09Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have a remark about the wording \r\n\r\n> Allow login?\r\n> If unchecked, the user will not be able to log in.\r\n\r\nI think people are going to be confused about what the difference is between this and the active flag on the edit screen:\r\n\r\n> Active.\r\n> Designates whether this user should be treated as active. Unselect this instead of deleting accounts.\r\n\r\nNick I know you requested the addition of ? and I'm not saying it's good or bad but it is now inconsistent with other checkboxes (I'd just leave it off personally) \ud83d\ude1b\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1577856889/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1577862014",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1577862014",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1577862014,
          "node_id": "IC_kwDOAD-Lgs5eDEN-",
          "user": {
            "login": "shangxiao",
            "id": 1845938,
            "node_id": "MDQ6VXNlcjE4NDU5Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1845938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangxiao",
            "html_url": "https://github.com/shangxiao",
            "followers_url": "https://api.github.com/users/shangxiao/followers",
            "following_url": "https://api.github.com/users/shangxiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangxiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangxiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangxiao/subscriptions",
            "organizations_url": "https://api.github.com/users/shangxiao/orgs",
            "repos_url": "https://api.github.com/users/shangxiao/repos",
            "events_url": "https://api.github.com/users/shangxiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangxiao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-06T03:53:01Z",
          "updated_at": "2023-06-06T03:53:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "Can anything be done to stop the jumping checkbox? \ud83e\udd14\r\n\r\nhttps://github.com/django/django/assets/1845938/fe192289-704e-4db0-9f6f-9667d913c698\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1577862014/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1577863521",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1577863521",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1577863521,
          "node_id": "IC_kwDOAD-Lgs5eDElh",
          "user": {
            "login": "shangxiao",
            "id": 1845938,
            "node_id": "MDQ6VXNlcjE4NDU5Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1845938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangxiao",
            "html_url": "https://github.com/shangxiao",
            "followers_url": "https://api.github.com/users/shangxiao/followers",
            "following_url": "https://api.github.com/users/shangxiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangxiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangxiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangxiao/subscriptions",
            "organizations_url": "https://api.github.com/users/shangxiao/orgs",
            "repos_url": "https://api.github.com/users/shangxiao/repos",
            "events_url": "https://api.github.com/users/shangxiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangxiao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-06T03:55:39Z",
          "updated_at": "2023-06-06T03:55:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "Anyhoo nice work so far fsbraun! \ud83c\udfc6",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1577863521/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1577950730",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1577950730",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1577950730,
          "node_id": "IC_kwDOAD-Lgs5eDZ4K",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-06T05:44:39Z",
          "updated_at": "2023-06-06T05:53:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "@shangxiao Thanks very much for the comments:\r\n* The jumping can be stopped by putting the warning below the checkbox and above the submit button\r\n* Thanks for pointing out the \"active\" alternative. Really, an unusable password only prevents login using username and password (as @xi probably also pointed out). I tried to better name those.\r\n\r\n![login](https://github.com/django/django/assets/16904477/31e21b5f-1fca-4308-8cb3-15b72404a1be)\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1577950730/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1586951706",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1586951706",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1586951706,
          "node_id": "IC_kwDOAD-Lgs5elvYa",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-12T09:28:38Z",
          "updated_at": "2023-06-16T09:11:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks, everybody, for the constructive feedback. I have updated the PR:\r\n\r\n* @knyghty The help text now reads\r\n  \r\n   _Upon submission an unusable password will be set which prevents the user from logging in\r\n   using their username and password. The user's current password will be lost. Potential other\r\n   means of authentication remain unaffected._ \r\n \r\n* @xi This is gender-neural and clarifies that the current password will be lost\r\n\r\n* @knyghty I have moved the warning into the help_text div. This implies that once the form field sets the `aria-describedby`  property, it will include the help text **and** the warning. No need for two id to be provided to `aria-describedby` (which would be possible as far as I understand the docs).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1586951706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1620412226",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1620412226",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1620412226,
          "node_id": "IC_kwDOAD-Lgs5glYdC",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-04T15:02:38Z",
          "updated_at": "2023-07-04T15:02:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "Is there anything I can do to move this forward?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1620412226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1649864824",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1649864824",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1649864824,
          "node_id": "IC_kwDOAD-Lgs5iVvB4",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-25T13:37:53Z",
          "updated_at": "2023-08-08T08:19:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm Thank you for your detailed feedback. Indeed, I overlooked that this should also apply to the user add form. This is fixed now:\r\n* Since the change password and user add form are quite different (form with template and an admin form) I have refactored the HTML to avoid repetition and make it usable for both forms (using the `<template>` tag).\r\n* Indentation has been fixed\r\n* The initial value of `usable_password` now is `has_usable_password()`\r\n* I annotated the docs with `versionchanged`\r\n* Updated the docstrings for the tests\r\n* Added a Selenium test\r\n* Fixed the HTML layout issue (wrongly placed `>`)\r\n\r\nPlease let me know if there is anything else I can do!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1649864824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1716094188",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1716094188",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1716094188,
          "node_id": "IC_kwDOAD-Lgs5mSYTs",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-12T16:49:49Z",
          "updated_at": "2023-09-12T16:49:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm Is there anything I can do to get this PR over the finish line? Would you like to take a final look?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1716094188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1717547883",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1717547883",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1717547883,
          "node_id": "IC_kwDOAD-Lgs5mX7Nr",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T12:37:08Z",
          "updated_at": "2023-09-13T12:37:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I think people are going to be confused about what the difference is between this and the active flag on the edit screen:\r\n\r\nI started reviewing this PR and the first think I thought was exactly this. Was there a consideration of being more \"honest\" with the admin user operating the form, something like:\r\n\r\nLabel: \"Unset the password\"\r\nHelp text: \"Unsetting the password will render the login credentials unusable. The User will no longer be able to log in until a new password is set.\"\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1717547883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1717593298",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1717593298",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1717593298,
          "node_id": "IC_kwDOAD-Lgs5mYGTS",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T13:03:59Z",
          "updated_at": "2023-09-13T13:03:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "@nessita Thanks for taking the time to look through this. \r\n\r\nIndeed, the wording has been discussed [here](https://github.com/django/django/pull/16942#discussion_r1218526204) (and I also tried to get some input [here](https://code.djangoproject.com/ticket/34429#comment:6)).\r\n\r\nI did consider \"Set unusable password\" but this would require the user to understand the implications, namely, that the user cannot log in using a username and password. That's the root of the wording.\r\n\r\nIMHO, \"unsetting\" a password could be confused with \"set no password\". Also, even with an unusable password, you can potentially still log in with a different authentication backend.\r\n\r\nCurrent text: \r\n**Allow login with username and password**\r\n\r\nHelp text: \r\n**If unchecked, the user will have an unusable password and not be able to log in using their username and any password.** (I just realized this had a spelling error)\r\n\r\nWarning: \r\n**Upon submission, an unusable password will be set which prevents the user from logging in\r\n           using their username and password. The user's current password will be lost. Potential other\r\n           means of authentication remain unaffected.**\r\n\r\nI am not hung up on this, but also would like it to be as clear as possible. What's your call?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1717593298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1717700817",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1717700817",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1717700817,
          "node_id": "IC_kwDOAD-Lgs5mYgjR",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T14:04:00Z",
          "updated_at": "2023-09-13T14:04:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @nessita Thanks for taking the time to look through this.\r\n> \r\n> Indeed, the wording has been discussed [here](https://github.com/django/django/pull/16942#discussion_r1218526204) (and I also tried to get some input [here](https://code.djangoproject.com/ticket/34429#comment:6)).\r\n> \r\n> I did consider \"Set unusable password\" but this would require the user to understand the implications, namely, that the user cannot log in using a username and password. That's the root of the wording.\r\n> \r\n> IMHO, \"unsetting\" a password could be confused with \"set no password\". Also, even with an unusable password, you can potentially still log in with a different authentication backend.\r\n> \r\n> Current text: **Allow login with username and password**\r\n\r\nMy main concern with this sentence is that, given that Django allows the User model to be customized so that the `USERNAME_FIELD` could be something other than `username`, like email or something system specific, saying `username` here would not be a accurate for those cases.\r\n\r\nAlso, considering that this flow occurs within the context of the admin, I would suggest to be more direct with the admin user and explicitly saying that the password will be set and it will be unususable. Otherwise I can see admin user scratching their head wondering what's the difference with marking a user as inactive.\r\n\r\n> Help text: **If unchecked, the user will have an unusable password and not be able to log in using their username and any password.** (I just realized this had a spelling error)\r\n\r\nSame concern about saying `username`,  we could say \"credentials\" as I suggested?\r\n \r\n> Warning: **Upon submission, an unusable password will be set which prevents the user from logging in using their username and password. The user's current password will be lost. Potential other means of authentication remain unaffected.**\r\n\r\nI would omit \"upon submission\", I think this is implied from every help text. With that in mind, I would suggest: \r\n\r\nAn unusable password will be set which prevents the user from logging in until a new password is set. The user's current password will be lost, though other means of authentication (if configured) remain unaffected.\r\n\r\n> I am not hung up on this, but also would like it to be as clear as possible. What's your call?\r\n\r\nI proposed a few alternatives above. The summary would be:\r\n* not saying \"username and password\" explicitly, and\r\n* being clear about how this action is different from making a user inactive",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1717700817/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1717755980",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1717755980",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1717755980,
          "node_id": "IC_kwDOAD-Lgs5mYuBM",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T14:33:36Z",
          "updated_at": "2023-09-13T14:33:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "There is also a potentially awkward user flow when:\r\n1. A user `tesuser1` has an unusable password\r\n2. Later on, the admin user goes to this user's change form to set a valid password:\r\n![image](https://github.com/django/django/assets/124304/ba4dba7e-7f28-4701-a28f-db5e5fcde5b8)\r\n4. The admin user is presented with a \"change password\" form where no password fields are available:\r\n![image](https://github.com/django/django/assets/124304/8135a66e-ddae-4de6-9263-4c4227b52a2c)\r\n\r\nI wonder if we should enable the password fields when going from \"change the password using <this form>\"?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1717755980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1718000552",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1718000552",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1718000552,
          "node_id": "IC_kwDOAD-Lgs5mZpuo",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T17:02:52Z",
          "updated_at": "2023-09-13T17:12:40Z",
          "author_association": "CONTRIBUTOR",
          "body": "@nessita Indeed, I initially had the password fields enabled by default. @felixxm requested it differently here: https://github.com/django/django/pull/16942#discussion_r1261060471 \r\n\r\nI can revert the change. A third option might be to change the help text if the user does not have a usable password to something like: \"Currently this user does not have a usable password. Enable this to set a password for this user\". \r\n\r\nAn update for wording is coming up.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1718000552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1718268478",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1718268478",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1718268478,
          "node_id": "IC_kwDOAD-Lgs5marI-",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T20:23:48Z",
          "updated_at": "2023-09-13T20:23:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @nessita Indeed, I initially had the password fields enabled by default. @felixxm requested it differently here: [#16942 (comment)](https://github.com/django/django/pull/16942#discussion_r1261060471)\r\n\r\nOh, I see. I can understand the goal of having the form properly initialized, but I guess is weird when coming from \"no password set\". I guess we can proceed as is and then evaluate potential/future ticket reports.\r\n\r\n> I can revert the change.\r\n\r\nNo need for now.\r\n\r\n> A third option might be to change the help text if the user does not have a usable password to something like: \"Currently this user does not have a usable password. Enable this to set a password for this user\".\r\n\r\nI like this proposal. May I suggest:\r\n\r\nThe current password is not usable, check this option to set a new password for user authentication.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1718268478/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1718315346",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1718315346",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1718315346,
          "node_id": "IC_kwDOAD-Lgs5ma2lS",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-13T21:04:14Z",
          "updated_at": "2023-09-13T21:20:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "@nessita **Thanks once more for helping to clarify all this!** Here's my update. Messages are:\r\n\r\nLabel:\r\n**Set password**\r\n\r\nHelp text (1/2) for \"add user\" and \"change password\" if the current password is usable: \r\n**Not setting a password will render the login credentials unusable.  The user will no longer be able authenticate using a password until a new password is set.** \r\n\r\nHelp text (2/2) for \"change password\" if the current password is unusable: \r\n**The current password is not usable, check this option to set a new password for user authentication.**\r\n\r\nWarning: \r\n**If no password is set, the user is prevented from authenticating using any password.\r\n          A user's current password will be lost. Potential other means of authentication\r\n          remain unaffected.**\r\n          \r\n(Updated after [cd00672](https://github.com/django/django/pull/16942/commits/cd00672f86a74274e3a679eafd55d770e457aebc) for better consistency with `No password set.` wording in the change user form.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1718315346/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1721079754",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1721079754",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1721079754,
          "node_id": "IC_kwDOAD-Lgs5mlZfK",
          "user": {
            "login": "fsbraun",
            "id": 16904477,
            "node_id": "MDQ6VXNlcjE2OTA0NDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16904477?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fsbraun",
            "html_url": "https://github.com/fsbraun",
            "followers_url": "https://api.github.com/users/fsbraun/followers",
            "following_url": "https://api.github.com/users/fsbraun/following{/other_user}",
            "gists_url": "https://api.github.com/users/fsbraun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fsbraun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fsbraun/subscriptions",
            "organizations_url": "https://api.github.com/users/fsbraun/orgs",
            "repos_url": "https://api.github.com/users/fsbraun/repos",
            "events_url": "https://api.github.com/users/fsbraun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fsbraun/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-15T10:58:16Z",
          "updated_at": "2023-09-15T10:58:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'll give it a try. There's an issue with postgres selenium tests which I cannot reproduce.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1721079754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1721107590",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1721107590",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1721107590,
          "node_id": "IC_kwDOAD-Lgs5mlgSG",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-15T11:19:42Z",
          "updated_at": "2023-09-15T11:19:42Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I'll give it a try. There's an issue with postgres selenium tests which I cannot reproduce.\r\n\r\nIt appears to be an issue with flakiness rather than to do with your change set \ud83d\udc4d",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1721107590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1721168352",
          "html_url": "https://github.com/django/django/pull/16942#issuecomment-1721168352",
          "issue_url": "https://api.github.com/repos/django/django/issues/16942",
          "id": 1721168352,
          "node_id": "IC_kwDOAD-Lgs5mlvHg",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-15T12:07:30Z",
          "updated_at": "2023-09-15T12:07:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I'll give it a try. There's an issue with postgres selenium tests which I cannot reproduce.\r\n\r\nThanks! re: selenium, see Sarah's comment (test is flaky).\r\n\r\nI'll do another UI review now. If possible, would you also, please, rebase onto main?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1721168352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/16851",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/16851/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/16851/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/16851/events",
      "html_url": "https://github.com/django/django/pull/16851",
      "id": 1706809072,
      "node_id": "PR_kwDOAD-Lgs5QWFAg",
      "number": 16851,
      "title": "Refs  #21961 : Added support for database-level cascading options",
      "user": {
        "login": "Akash-Kumar-Sen",
        "id": 71623442,
        "node_id": "MDQ6VXNlcjcxNjIzNDQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Akash-Kumar-Sen",
        "html_url": "https://github.com/Akash-Kumar-Sen",
        "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
        "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
        "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
        "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
        "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
        "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 23,
      "created_at": "2023-05-12T02:04:14Z",
      "updated_at": "2025-07-16T16:05:46Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/16851",
        "html_url": "https://github.com/django/django/pull/16851",
        "diff_url": "https://github.com/django/django/pull/16851.diff",
        "patch_url": "https://github.com/django/django/pull/16851.patch",
        "merged_at": null
      },
      "body": "Ticket : https://code.djangoproject.com/ticket/21961\r\nFollowing PR : #14550",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/16851/reactions",
        "total_count": 63,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 30,
        "confused": 0,
        "heart": 33,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/16851/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1547624678",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1547624678",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1547624678,
          "node_id": "IC_kwDOAD-Lgs5cPuDm",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-15T10:46:57Z",
          "updated_at": "2023-05-15T10:46:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "Having it in a single `on_delete` kwarg sounds more reasonable as I was not aware of the sync issues, I will update the patch accordingly.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1547624678/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1573249256",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1573249256",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1573249256,
          "node_id": "IC_kwDOAD-Lgs5dxeDo",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-02T06:59:03Z",
          "updated_at": "2023-06-02T06:59:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you for the suggestions @LilyFoote . Updated the patch with the follwing : \r\n- Reduced the number of queries to exactly 1.\r\n- Optimized the logic inside the nested for loops.\r\n- Make the error messages more understandable.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1573249256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1692754517",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1692754517",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1692754517,
          "node_id": "IC_kwDOAD-Lgs5k5WJV",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-25T04:52:13Z",
          "updated_at": "2023-08-25T04:52:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "- Added tests for migrations.\r\n\r\n**There are two issues I could not figure out after a lot of try, some help would be great :**\r\n- MySQL specific error in the test ```delete.tests.DatabaseLevelOnDeleteTests.test_foreign_key_db_default```\r\n- I am not sure how to test the serializer. (Some docs link or links of some similar tests would be helpful)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1692754517/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1692946527",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1692946527",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1692946527,
          "node_id": "IC_kwDOAD-Lgs5k6FBf",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-25T08:07:51Z",
          "updated_at": "2023-08-25T08:07:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "Not sure if I will be of much help but I am rooting for you to get this in! :partying_face: \r\n\r\n> * MySQL specific error in the test `delete.tests.DatabaseLevelOnDeleteTests.test_foreign_key_db_default`\r\n\r\nFirstly, this is not where I think it is failing. To me it looks like it is struggling to create the table `DBDefaultsFK` (`delete_dbdefaultsfk`) which is in `tests/delete/models.py` (when the tests are being set up it first creates all tables so it isn't from a specific assert or test). \r\n\r\nI do not know what I am talking about here. It sounds like there might be some kinda [type mismatch](https://dba.stackexchange.com/questions/203509/mysql-foreign-key-constraint-is-incorrectly-formed) so I would first look at the generated SQL to create that table on MySQL.\r\n\r\n(I would also be tempted to play around with the table such as changing `on_delete=models.DB_SET_DEFAULT` to `on_delete=models.RESTRICT` to check whether `db_default` itself is driving the error or the deletion behaviour - but that probably reflects that I don't understand how it all works so want to bump my way around)\r\n\r\n> * I am not sure how to test the serializer. (Some docs link or links of some similar tests would be helpful)\r\n\r\nHave you looked into `tests/migrations/test_writer.py WriterTests` to me it looks like there are some serializer tests in there?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1692946527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1692967628",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1692967628",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1692967628,
          "node_id": "IC_kwDOAD-Lgs5k6KLM",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-25T08:25:11Z",
          "updated_at": "2023-08-25T08:25:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "\r\n> Firstly, this is not where I think it is failing. To me it looks like it is struggling to create the table `DBDefaultsFK` (`delete_dbdefaultsfk`) which is in `tests/delete/models.py` (when the tests are being set up it first creates all tables so it isn't from a specific assert or test).\r\n\r\nI have tried to print the queries. the delete query in ```foo.delete()``` is causing the error, the queries before that are the following, these seems to be executed succesfully:\r\n```\r\nquery =  CREATE TABLE `delete_dbdefaultsfk` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `language_code_id` integer DEFAULT %s NOT NULL)\r\nargs =  [1]\r\nquery =  ALTER TABLE `delete_dbdefaultsfk` ADD CONSTRAINT `delete_dbdefaultsfk_language_code_id_04474ba9_fk_delete_foo_id` FOREIGN KEY (`language_code_id`) REFERENCES `delete_foo` (`id`) ON DELETE SET DEFAULT\r\nargs =  ()\r\n```\r\n\r\n> \r\n> I do not know what I am talking about here. It sounds like there might be some kinda [type mismatch](https://dba.stackexchange.com/questions/203509/mysql-foreign-key-constraint-is-incorrectly-formed) so I would first look at the generated SQL to create that table on MySQL.\r\n\r\nThis could be possible reason for the error, I'll take a look at this one.\r\n> \r\n> (I would also be tempted to play around with the table such as changing `on_delete=models.DB_SET_DEFAULT` to `on_delete=models.RESTRICT` to check whether `db_default` itself is driving the error or the deletion behaviour - but that probably reflects that I don't understand how it all works so want to bump my way around)\r\n\r\nI have looked into the tests for ```db_default``` and that seems to be working fine.\r\n> \r\n> Have you looked into `tests/migrations/test_writer.py WriterTests` to me it looks like there are some serializer tests in there?\r\n\r\nI missed that one, will take a look.\r\nThank you for the feedback Sarah",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1692967628/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1693734608",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1693734608",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1693734608,
          "node_id": "IC_kwDOAD-Lgs5k9FbQ",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-25T17:53:56Z",
          "updated_at": "2023-08-25T17:53:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "Ah @Akash-Kumar-Sen I realised there are two errors, one for MariaDB (https://djangoci.com/job/pr-mariadb/database=mysql,label=mariadb,python=python3.11/21757/console) this is failing on the table creation and the other failures are (as you said) for the test `delete.tests.DatabaseLevelOnDeleteTests.test_foreign_key_db_default`\r\n\r\nI am reading the MySQL documentation on foreign keys here: https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html\r\nThis sounds interesting:\r\n> - SET DEFAULT: This action is recognized by the MySQL parser, but both [InnoDB](https://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html) and [NDB](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster.html) reject table definitions containing ON DELETE SET DEFAULT or ON UPDATE SET DEFAULT clauses.\r\n\r\n> For storage engines that support foreign keys, MySQL rejects any [INSERT](https://dev.mysql.com/doc/refman/8.0/en/insert.html) or [UPDATE](https://dev.mysql.com/doc/refman/8.0/en/update.html) operation that attempts to create a foreign key value in a child table if there is no matching candidate key value in the parent table.\r\n\r\nApparently MariaDB uses the InnoDB storage engine by default - I think that explains why the table create is failing there. \r\n\r\nIt makes me think _maybe_ Django should not allow `on_delete=DB_SET_DEFAULT` for MySQL :thinking: \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1693734608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1707641349",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1707641349",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1707641349,
          "node_id": "IC_kwDOAD-Lgs5lyIoF",
          "user": {
            "login": "sarahboyce",
            "id": 42296566,
            "node_id": "MDQ6VXNlcjQyMjk2NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboyce",
            "html_url": "https://github.com/sarahboyce",
            "followers_url": "https://api.github.com/users/sarahboyce/followers",
            "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
            "repos_url": "https://api.github.com/users/sarahboyce/repos",
            "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-06T04:34:19Z",
          "updated_at": "2023-09-06T04:34:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "@Akash-Kumar-Sen I think go for the disabling MySQL support plan (also needs a docs adjustment). \ud83d\udc4d  \r\nThe alpha feature freeze is coming up. If there is a solution which adds MySQL support, IMO we can always add it in a following release as to not block this work ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1707641349/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1709414579",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1709414579",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1709414579,
          "node_id": "IC_kwDOAD-Lgs5l45iz",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-07T03:14:55Z",
          "updated_at": "2023-09-07T03:14:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @Akash-Kumar-Sen I think go for the disabling MySQL support plan (also needs a docs adjustment). \r\n\r\nDone @sarahboyce .\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1709414579/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1719710388",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1719710388",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1719710388,
          "node_id": "IC_kwDOAD-Lgs5mgLK0",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-14T15:47:33Z",
          "updated_at": "2023-09-14T15:47:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @nessita You said to ping you on PRs we'd like in\u2026 \u2014 this one if possible, but it may be too much left to do. It's pretty close to the deadline now.\r\n\r\nThank you @carltongibson for the ping! Indeed we're really close to the deadline, so sadly I'm not sure we'll complete the review before Monday. Mariusz and I discussed it, but given the size and complexity of this work, it's unlikely we'll get it done in time.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1719710388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1719723319",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1719723319",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1719723319,
          "node_id": "IC_kwDOAD-Lgs5mgOU3",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-14T15:55:37Z",
          "updated_at": "2023-09-14T15:55:37Z",
          "author_association": "MEMBER",
          "body": "@nessita I think that is the correct call \ud83d\udc4d ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1719723319/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1721575863",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1721575863",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1721575863,
          "node_id": "IC_kwDOAD-Lgs5mnSm3",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-15T16:51:25Z",
          "updated_at": "2023-09-15T16:51:25Z",
          "author_association": "MEMBER",
          "body": "Hi @Akash-Kumar-Sen \u2014 Yes (at quick read through) that looks like it's doing the right thing at the model-level. \n\nThe issue I hit was that trying to update an actual project the actual field in the database wasn't changed. (`CASCADE` to `DB_CASCADE` on PostgreSQL 14) \n\nThe change in the field was correctly detected, the migration was generated, and when applied it reported success, but the constraint wasn't applied to the field. (No `ON DELETE ...` in the DDL.) \n\nThe test I'd like to see would hit the actual database. \n\nSomething like: \n\n1. Create a pair of models with `CASCADE`. \n2. Create some instances. \n3. Delete the parent model. \n4. Assert the children were deleted (by Django)\n5. Migrate the child model to use `DB_CASCADE`. \n6. Create some more instances. \n7. Delete the parent model again. \n8. Assert the children were deleted (by the database). \n\nIt's step 8 that failed for me (because the field was never updated). \n\nAs I say, I may have done something wrong. I didn't have time to look into this more fully yet. \n\nBut all I did was update (a small group of) my models and migrate. It should have worked. (Or errored loudly.) ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1721575863/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1739101059",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1739101059",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1739101059,
          "node_id": "IC_kwDOAD-Lgs5nqJOD",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-28T12:50:06Z",
          "updated_at": "2023-09-28T12:50:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "@Akash-Kumar-Sen Do you have some failing tests you can push?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1739101059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1739104822",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1739104822",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1739104822,
          "node_id": "IC_kwDOAD-Lgs5nqKI2",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-09-28T12:52:23Z",
          "updated_at": "2023-09-28T13:29:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @Akash-Kumar-Sen Do you have some failing tests you can push?\r\n\r\n@LilyFoote  here is a failing test.\r\nhttps://github.com/django/django/blob/ceb6dafb82a8d328f3324bb4357812e2ab5ba40c/tests/migrations/test_operations.py#L244",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1739104822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1755459259",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1755459259",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1755459259,
          "node_id": "IC_kwDOAD-Lgs5ooi67",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-10-10T13:44:10Z",
          "updated_at": "2023-10-10T13:44:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I also think we might need to take a different approach to the `subTest`s, to allow us to cleanly test the backwards migrations also do the right thing.\r\n>\r\n\r\nThank you for the review @LilyFoote , what's your suggestion on the  `subTest`s framework? \r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1755459259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1755491297",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1755491297",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1755491297,
          "node_id": "IC_kwDOAD-Lgs5ooqvh",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-10-10T14:01:31Z",
          "updated_at": "2023-10-10T14:01:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > I also think we might need to take a different approach to the `subTest`s, to allow us to cleanly test the backwards migrations also do the right thing.\r\n> \r\n> Thank you for the review @LilyFoote , what's your suggestion on the `subTest`s framework?\r\n\r\nI'm not really sure. Maybe there's a way to have a group of asserts associated with each `on_delete` option, and then call each after migrate and backwards migrate?\r\n\r\nIf you can't get that working, I think giving up on `subTest` might be reasonable - maybe create a new testcase or test file for these tests and just have all of them as distinct test methods? I know there's going to be loads of them, but maybe that's easier to write...",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1755491297/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1755519985",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1755519985",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1755519985,
          "node_id": "IC_kwDOAD-Lgs5ooxvx",
          "user": {
            "login": "Akash-Kumar-Sen",
            "id": 71623442,
            "node_id": "MDQ6VXNlcjcxNjIzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/71623442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akash-Kumar-Sen",
            "html_url": "https://github.com/Akash-Kumar-Sen",
            "followers_url": "https://api.github.com/users/Akash-Kumar-Sen/followers",
            "following_url": "https://api.github.com/users/Akash-Kumar-Sen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akash-Kumar-Sen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akash-Kumar-Sen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akash-Kumar-Sen/subscriptions",
            "organizations_url": "https://api.github.com/users/Akash-Kumar-Sen/orgs",
            "repos_url": "https://api.github.com/users/Akash-Kumar-Sen/repos",
            "events_url": "https://api.github.com/users/Akash-Kumar-Sen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akash-Kumar-Sen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-10-10T14:17:01Z",
          "updated_at": "2023-10-10T14:17:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "I will make this more exhaustive following your suggestions. \r\n> I'm not really sure. Maybe there's a way to have a group of asserts associated with each on_delete option, and then call each after\r\n\r\nThis approach seems the simplest one.  Next update is going to have less lines of codes than this one \ud83d\ude0e",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1755519985/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1857108045",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1857108045",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1857108045,
          "node_id": "IC_kwDOAD-Lgs5usThN",
          "user": {
            "login": "ColemanDunn",
            "id": 42652642,
            "node_id": "MDQ6VXNlcjQyNjUyNjQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/42652642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ColemanDunn",
            "html_url": "https://github.com/ColemanDunn",
            "followers_url": "https://api.github.com/users/ColemanDunn/followers",
            "following_url": "https://api.github.com/users/ColemanDunn/following{/other_user}",
            "gists_url": "https://api.github.com/users/ColemanDunn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ColemanDunn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ColemanDunn/subscriptions",
            "organizations_url": "https://api.github.com/users/ColemanDunn/orgs",
            "repos_url": "https://api.github.com/users/ColemanDunn/repos",
            "events_url": "https://api.github.com/users/ColemanDunn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ColemanDunn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-15T01:04:49Z",
          "updated_at": "2023-12-15T01:04:49Z",
          "author_association": "NONE",
          "body": "Anything blocking this from getting approved?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1857108045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1879051519",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-1879051519",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 1879051519,
          "node_id": "IC_kwDOAD-Lgs5wAAz_",
          "user": {
            "login": "falexwolf",
            "id": 16916678,
            "node_id": "MDQ6VXNlcjE2OTE2Njc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16916678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/falexwolf",
            "html_url": "https://github.com/falexwolf",
            "followers_url": "https://api.github.com/users/falexwolf/followers",
            "following_url": "https://api.github.com/users/falexwolf/following{/other_user}",
            "gists_url": "https://api.github.com/users/falexwolf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/falexwolf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/falexwolf/subscriptions",
            "organizations_url": "https://api.github.com/users/falexwolf/orgs",
            "repos_url": "https://api.github.com/users/falexwolf/repos",
            "events_url": "https://api.github.com/users/falexwolf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/falexwolf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-05T17:52:49Z",
          "updated_at": "2024-01-05T17:52:49Z",
          "author_association": "NONE",
          "body": "I just arrived here from the original 10-year-old ticket and am blown away by how far this work has gotten now.\r\n\r\nI'm looking forward to the feature and am grateful for the work in this PR. \ud83d\ude4f \r\n\r\nGood luck with what seems like minor requests from felixxm, @Akash-Kumar-Sen!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1879051519/reactions",
            "total_count": 16,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 16,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2274924309",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-2274924309",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 2274924309,
          "node_id": "IC_kwDOAD-Lgs6HmJcV",
          "user": {
            "login": "rickydua",
            "id": 7446226,
            "node_id": "MDQ6VXNlcjc0NDYyMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7446226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickydua",
            "html_url": "https://github.com/rickydua",
            "followers_url": "https://api.github.com/users/rickydua/followers",
            "following_url": "https://api.github.com/users/rickydua/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickydua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickydua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickydua/subscriptions",
            "organizations_url": "https://api.github.com/users/rickydua/orgs",
            "repos_url": "https://api.github.com/users/rickydua/repos",
            "events_url": "https://api.github.com/users/rickydua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickydua/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-08T04:23:57Z",
          "updated_at": "2024-08-08T04:23:57Z",
          "author_association": "NONE",
          "body": "Looking forward for this go out, any update on this?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2274924309/reactions",
            "total_count": 22,
            "+1": 4,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 1,
            "eyes": 13
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2706099373",
          "html_url": "https://github.com/django/django/pull/16851#issuecomment-2706099373",
          "issue_url": "https://api.github.com/repos/django/django/issues/16851",
          "id": 2706099373,
          "node_id": "IC_kwDOAD-Lgs6hS8yt",
          "user": {
            "login": "quiqueporta",
            "id": 897921,
            "node_id": "MDQ6VXNlcjg5NzkyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/897921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quiqueporta",
            "html_url": "https://github.com/quiqueporta",
            "followers_url": "https://api.github.com/users/quiqueporta/followers",
            "following_url": "https://api.github.com/users/quiqueporta/following{/other_user}",
            "gists_url": "https://api.github.com/users/quiqueporta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quiqueporta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quiqueporta/subscriptions",
            "organizations_url": "https://api.github.com/users/quiqueporta/orgs",
            "repos_url": "https://api.github.com/users/quiqueporta/repos",
            "events_url": "https://api.github.com/users/quiqueporta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quiqueporta/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-07T10:32:22Z",
          "updated_at": "2025-03-10T12:18:02Z",
          "author_association": "NONE",
          "body": "Any update about this feature?\r\n![](https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExNGRkaWhvMGd1dDB2b3FpaHBmMzJzZGxsYnZiN3A5bDYydDdnN3BhMyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/QBd2kLB5qDmysEXre9/giphy.gif)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2706099373/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 2,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/9053",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/9053/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/9053/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/9053/events",
      "html_url": "https://github.com/django/django/pull/9053",
      "id": 256514323,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwMjExMTYx",
      "number": 9053,
      "title": "Fixed #28574 -- Add Queryset.explain() method",
      "user": {
        "login": "orf",
        "id": 1027207,
        "node_id": "MDQ6VXNlcjEwMjcyMDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orf",
        "html_url": "https://github.com/orf",
        "followers_url": "https://api.github.com/users/orf/followers",
        "following_url": "https://api.github.com/users/orf/following{/other_user}",
        "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
        "organizations_url": "https://api.github.com/users/orf/orgs",
        "repos_url": "https://api.github.com/users/orf/repos",
        "events_url": "https://api.github.com/users/orf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/orf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 25,
      "created_at": "2017-09-10T14:36:14Z",
      "updated_at": "2018-04-19T16:00:44Z",
      "closed_at": "2018-04-19T15:13:43Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/9053",
        "html_url": "https://github.com/django/django/pull/9053",
        "diff_url": "https://github.com/django/django/pull/9053.diff",
        "patch_url": "https://github.com/django/django/pull/9053.patch",
        "merged_at": "2018-04-19T15:13:43Z"
      },
      "body": "[Ticket](https://code.djangoproject.com/ticket/28574)\r\n\r\n```python\r\n>> qs = Tag.objects.filter(name='test').all()\r\n>> print(qs.explain())\r\nSeq Scan on queries_tag  (cost=0.00..23.00 rows=5 width=50)\r\n  Filter: ((name)::text = 'test'::text)\r\n>> print(qs.explain(verbose=True))\r\nSeq Scan on public.queries_tag  (cost=0.00..23.00 rows=5 width=50) (actual time=0.054..0.054 rows=0 loops=1)\r\n  Output: id, name, parent_id, category_id\r\n  Filter: ((queries_tag.name)::text = 'test'::text)\r\n  Rows Removed by Filter: 5\r\nPlanning time: 0.382 ms\r\nExecution time: 0.189 ms\r\n>> print(qs.explain(verbose=True, format='json'))\r\n[{'Execution Time': 0.177, 'Triggers': [], 'Planning Time': 0.419, 'Plan': {'Actual Loops': 1, 'Filter': \"((queries_tag.name)::text = 'test'::text)\", 'Node Type': 'Seq Scan', 'Rows Removed by Filter': 5, 'Alias': 'queries_tag', 'Output': ['id', 'name', 'parent_id', 'category_id'], 'Actual Startup Time': 0.067, 'Actual Total Time': 0.067, 'Relation Name': 'queries_tag', 'Parallel Aware': False, 'Plan Rows': 5, 'Plan Width': 50, 'Actual Rows': 0, 'Total Cost': 23.0, 'Schema': 'public', 'Startup Cost': 0.0}}]\r\n```\r\n\r\nI need to add docs, but I hope the general implementation is OK with regards to modifying the `operations` and `features` db-backend files, and their interaction with the compiler/queryset/query etc.",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/9053/reactions",
        "total_count": 4,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 4,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/9053/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/334948181",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-334948181",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 334948181,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDk0ODE4MQ==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-10-07T16:39:49Z",
          "updated_at": "2017-10-07T16:39:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the review @atombrella, I've made the requested changes \ud83d\udc4d \r\n\r\nI wasn't sure about adding `TEXT` to the list of supported formats on postgres, as mysql doesn't have some kind of default format you can specify in the same was as postgres. But I guess it's fine for postgres.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/334948181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/347237557",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-347237557",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 347237557,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzIzNzU1Nw==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-11-27T16:28:38Z",
          "updated_at": "2017-11-27T16:28:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you for the review @atombrella and @pope1ni. I've made the changes you suggested.\r\n\r\nI've made `qs.explain()` accept arbitrary keyword arguments that are converted into the correct syntax. As @pope1ni pointed out, there are a lot of rules regarding mutually exclusive flags and flags that work on certain versions. I think adding these rules in the code is going to be fragile and hard to maintain, so I sidestepped it - the `explain_query_prefix` function takes any keyword arguments and it's up to the caller to know what to pass in. \r\n\r\nWhat do you think?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/347237557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/347249577",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-347249577",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 347249577,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI0OTU3Nw==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-11-27T17:02:54Z",
          "updated_at": "2017-11-27T17:02:54Z",
          "author_association": "MEMBER",
          "body": "@orf - just read your comment. It may be worth having a list of options available in all versions of each database just to validate that the keys in kwargs are at least somewhat sane?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/347249577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/347254137",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-347254137",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 347254137,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI1NDEzNw==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-11-27T17:15:43Z",
          "updated_at": "2017-11-27T17:39:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the quick review @pope1ni. I'm really not a fan, I think the user will know best which flags are available and I don't want to be too restrictive here. Amazon has a couple of databases that supports the mysql and postgres protocol, but may have different/custom options available for EXPLAIN. There is also mariadb and citrus which are in a similar vein.\r\n\r\nSince this is primarily a developer/debugging feature I'd argue it's better to be lenient with what we accept than too restrictive. \r\n\r\nI'm open to the idea though if anyone else chimes in?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/347254137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/348789939",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-348789939",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 348789939,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc4OTkzOQ==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-12-03T16:13:24Z",
          "updated_at": "2017-12-03T16:16:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks again for the review @pope1ni, I've made the changes you've requested. I'm still not happy with the mysql output though, are you sure it wouldn't be useful to change the output to be somewhat similar to the outer databases, i.e [something similar to this](https://www.sitepoint.com/using-explain-to-write-better-mysql-queries/)\r\n\r\n```\r\nid: 1\r\nselect_type: SIMPLE\r\ntable: Country\r\ntype: const\r\npossible_keys: PRIMARY\r\nkey: PRIMARY\r\nkey_len: 3\r\nref: const\r\nrows: 1\r\nfiltered: 100.00\r\nExtra: \r\n```\r\n\r\nCurrently the output would be:\r\n\r\n` 1 SIMPLE Country const PRIMARY PRIMARY 3 const 1 100.00`\r\n\r\nIt would require some mysql specific code in the `SQLCompiler.explain` method, which might be a little too specific for that class, but IMO it would make it a lot more useful. What do you think? Are you sure we should leave it?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/348789939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/370383916",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-370383916",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 370383916,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDM4MzkxNg==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-05T10:59:01Z",
          "updated_at": "2018-03-05T10:59:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/370383916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/370423999",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-370423999",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 370423999,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQyMzk5OQ==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-05T13:48:03Z",
          "updated_at": "2018-03-05T13:48:03Z",
          "author_association": "MEMBER",
          "body": "And so of course the Oracle tests fail...  (Grrr.) ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/370423999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/370425050",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-370425050",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 370425050,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQyNTA1MA==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-05T13:51:30Z",
          "updated_at": "2018-03-05T13:52:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "where would be the fun if it didn't? :/\r\n\r\nI'll take a look tonight, but the error `cx_Oracle.DatabaseError: ORA-01036: illegal variable name/number` [according to this stack overflow post](https://stackoverflow.com/questions/21375288/ora-01036-illegal-variable-name-number-when-running-query-through-c-sharp) might not be easy to solve, apparently you can't use bind variables??\r\n\r\nI'm tempted to just raise a `NotSupportedError()` if I can't fix it?\r\n\r\nEdit: I also don't have a oracle system to test on, so this could be painful.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/370425050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/370441903",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-370441903",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 370441903,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ0MTkwMw==",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-05T14:47:17Z",
          "updated_at": "2018-03-05T14:47:17Z",
          "author_association": "MEMBER",
          "body": "So I read a little more into how Oracle does things with [EXPLAIN PLAN](https://docs.oracle.com/cd/B19306_01/server.102/b14211/ex_plan.htm#i25909).\r\n\r\nI found out the following issues:\r\n\r\n- We need to change `explain_prefix` to `EXPLAIN PLAN FOR`.\r\n- AFAICT Oracle doesn't return the output directly - it goes into [PLAN_TABLE](https://docs.oracle.com/cd/B19306_01/server.102/b14211/ex_plan.htm#i17492).\r\n- A `PLAN_TABLE` is automatically created per user, but we won't know if it has been renamed.\r\n- Displaying the output is non-trivial - there are (provided) [scripts](https://docs.oracle.com/cd/B19306_01/server.102/b14211/ex_plan.htm#i16938) to do so.\r\n\r\nTo start you can change the prefix and see whether that get things moving further. Beyond that, I'm not sure whether we can auto-exec another query to fetch the output or whether we just have to somehow return a message/warning to explain how to get the output...",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/370441903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/370448360",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-370448360",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 370448360,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ0ODM2MA==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-05T15:06:48Z",
          "updated_at": "2018-03-05T15:06:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "Damn, that seems quite convoluted. Thanks for doing some research. \r\n\r\nPerhaps we can use `SET STATEMENT_ID` with a GUID, then execute `SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY(NULL, [GUID]));`. Hopefully this comes back in postgres-style rows of strings that we can just join and return, but I couldn't see anything explicitly stating that with my brief look.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/370448360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373940794",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-373940794",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 373940794,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk0MDc5NA==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-17T18:08:38Z",
          "updated_at": "2018-03-17T19:12:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think I've managed to add support for explaining Oracle queries, but it is slightly hacky. Rather than significantly rework the implementation I opted to check if the vendor is `oracle` in the `explain_query` method, and if so ~~add in a random UUID~~ (UUID's are too long....) add a random string to the `explain_options` dict to give the plan a unique identifier.\r\n\r\nAfter we generate a query plan, it just returns the query you would need to execute to retrieve the plan. I'm not sure if we can execute this query inside the `explain_query` method itself (perhaps by using `connection.cursor`?). I've also got a test that actually does execute this statement to ensure it works, so lets hope it does.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373940794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373945527",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-373945527",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 373945527,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk0NTUyNw==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-17T19:15:37Z",
          "updated_at": "2018-03-17T19:15:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373945527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373955909",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-373955909",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 373955909,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk1NTkwOQ==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-17T21:58:17Z",
          "updated_at": "2018-03-17T23:12:27Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.\r\n\r\nEdit: if these next tests fail I'm just going to get Oracle set up locally and test there. Sorry about the spam",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373955909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373959716",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-373959716",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 373959716,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk1OTcxNg==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-17T23:11:29Z",
          "updated_at": "2018-03-17T23:11:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373959716/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373966607",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-373966607",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 373966607,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk2NjYwNw==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-18T01:50:56Z",
          "updated_at": "2018-03-18T01:50:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "So unfortunately it's not going to be possible to add support for Oracle to this feature. I've spent a while on it already and got something nearly working, but ran into a big roadblocker: You cannot use traditional SQL parameters with `EXPLAIN PLAN ...` in Oracle. For example, this fails:\r\n\r\n`cursor.execute('EXPLAIN PLAN SELECT * FROM something WHERE id = %s', [1])`\r\n\r\nYou should instead use an oracle specific (I think?) syntax:\r\n\r\n`cursor.execute('EXPLAIN PLAN SELECT * FROM something WHERE id = :id')`\r\n\r\nSo to support explaining queries with any kind of parameters we'd have to replace the parameters with `:NAME`, which I think is pretty impossible.\r\n\r\nSo, I've just disabled explaining queries on Oracle. My work on adding support still lives at https://github.com/orf/django/tree/28574-queryset-explain-oracle if any poor soul needs it in the future. I also defaulted the `supports_explaining_query_execution` feature to False, as I think third party backend support may be spotty.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373966607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373966896",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-373966896",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 373966896,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk2Njg5Ng==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-18T01:58:22Z",
          "updated_at": "2018-03-18T01:58:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373966896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/374238777",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-374238777",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 374238777,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDIzODc3Nw==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-19T14:49:26Z",
          "updated_at": "2018-03-19T14:49:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @carltongibson, thanks! Regarding using a property, I think that's a good idea. Reduces a bit of duplication. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/374238777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/374246879",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-374246879",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 374246879,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDI0Njg3OQ==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-19T15:11:38Z",
          "updated_at": "2018-03-19T15:11:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/374246879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/377922555",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-377922555",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 377922555,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzkyMjU1NQ==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-04-02T12:50:04Z",
          "updated_at": "2018-04-02T12:50:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the review, I've made the changes requested. The docs are failing to build but it appears to be an issue in the 'writing-documentation' file of all places, which I've not touched.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/377922555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/377922578",
          "html_url": "https://github.com/django/django/pull/9053#issuecomment-377922578",
          "issue_url": "https://api.github.com/repos/django/django/issues/9053",
          "id": 377922578,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzkyMjU3OA==",
          "user": {
            "login": "orf",
            "id": 1027207,
            "node_id": "MDQ6VXNlcjEwMjcyMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1027207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orf",
            "html_url": "https://github.com/orf",
            "followers_url": "https://api.github.com/users/orf/followers",
            "following_url": "https://api.github.com/users/orf/following{/other_user}",
            "gists_url": "https://api.github.com/users/orf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orf/subscriptions",
            "organizations_url": "https://api.github.com/users/orf/orgs",
            "repos_url": "https://api.github.com/users/orf/repos",
            "events_url": "https://api.github.com/users/orf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-04-02T12:50:11Z",
          "updated_at": "2018-04-02T12:50:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/377922578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/9983",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/9983/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/9983/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/9983/events",
      "html_url": "https://github.com/django/django/pull/9983",
      "id": 326733424,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTkwNzM5MzQx",
      "number": 9983,
      "title": "Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.",
      "user": {
        "login": "codingjoe",
        "id": 1772890,
        "node_id": "MDQ6VXNlcjE3NzI4OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codingjoe",
        "html_url": "https://github.com/codingjoe",
        "followers_url": "https://api.github.com/users/codingjoe/followers",
        "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
        "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
        "organizations_url": "https://api.github.com/users/codingjoe/orgs",
        "repos_url": "https://api.github.com/users/codingjoe/repos",
        "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/codingjoe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 59,
      "created_at": "2018-05-26T12:06:33Z",
      "updated_at": "2019-09-10T22:01:08Z",
      "closed_at": "2019-09-09T09:12:02Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/9983",
        "html_url": "https://github.com/django/django/pull/9983",
        "diff_url": "https://github.com/django/django/pull/9983.diff",
        "patch_url": "https://github.com/django/django/pull/9983.patch",
        "merged_at": "2019-09-09T09:12:02Z"
      },
      "body": "Ticket [#29444](https://code.djangoproject.com/ticket/29444)\r\n\r\nCurrently the PK is hardcoded as the only retuning object which is not necessary and currently blocking [#27452](https://code.djangoproject.com/ticket/27452).\r\n\r\n### Side note:\r\n\r\n**This change should be fully backwards compatible.** I am aware that this fix allows adding database defaults to all backends but MySQL. This is why **I want to keep this an undocumented API** for now.\r\nPeople will find out about it anyways.\r\n\r\nYou can implement a database default as follows:\r\n\r\n```python\r\nclass Default:\r\n    \"\"\"\r\n    Expression for ``DEFAULT``.\r\n\r\n    In an insert query this will return the database default.\r\n    \"\"\"\r\n\r\n    def as_sql(self, compiler, connection):\r\n        return connection.ops.pk_default_value(), []\r\n\r\n\r\nclass MyModel(models.Model):\r\n    my_uuid_with_db_default = models.UUIDField(default=Default)\r\n```\r\n\r\nIf you have a default set for your column in the database, it will return that instead of trying to set null.\r\nYou no longer need to call `refresh_from_db` or any other strange thing.",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/9983/reactions",
        "total_count": 4,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 4,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/9983/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/392327576",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-392327576",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 392327576,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMyNzU3Ng==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-05-27T12:29:15Z",
          "updated_at": "2018-05-27T12:29:15Z",
          "author_association": "MEMBER",
          "body": "I really like those changes and how small the actual diff is! Keep up the fantastic work",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/392327576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/392327691",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-392327691",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 392327691,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMyNzY5MQ==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-05-27T12:31:26Z",
          "updated_at": "2018-05-27T12:31:26Z",
          "author_association": "MEMBER",
          "body": "We probably should change `fetch_returned_insert_id` to a name more fitting ala `fetch_returned_data` or so -- or even separate that based on db support, dunno yet.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/392327691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/392334316",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-392334316",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 392334316,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMzNDMxNg==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-05-27T14:18:53Z",
          "updated_at": "2018-05-27T14:18:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "> We probably should change fetch_returned_insert_id to a name more fitting ala fetch_returned_data or so -- or even separate that based on db support, dunno yet.\r\n\r\n@apollo13 I wanted to keep the changeset small to get the concept across.\r\nBackwards compatibility with 3rd party backends is a good questions. If I am not mistaken this is not public API. That being said. Maybe it makes sense to rename the methods. This ways 3rd party backends can simply implement both methods.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/392334316/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/392362504",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-392362504",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 392362504,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjM2MjUwNA==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-05-27T20:08:09Z",
          "updated_at": "2018-05-27T20:08:09Z",
          "author_association": "MEMBER",
          "body": "Right, not sure what I was thinking (if at all) \ud83e\udd23\n\nOn May 27, 2018 4:46:56 PM GMT+02:00, Johannes Hoppe <notifications@github.com> wrote:\n>codingjoe commented on this pull request.\n>\n>\n>\n>> @@ -825,3 +825,12 @@ def _property_names(self):\n>             if isinstance(attr, property):\n>                 names.append(name)\n>         return frozenset(names)\n>+\n>+    @cached_property\n>+    def returning(self):\n>+        return [\n>+            field for field in self._get_fields(\n>+                forward=True, reverse=False,\n>include_parents=PROXY_PARENTS\n>+            )\n>+            if getattr(field, 'returning', False)\n>\n>Nope, this will raise an AttributeError in Py3 ;)\n>https://docs.python.org/3/library/functions.html#getattr\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/django/django/pull/9983#discussion_r191078837\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/392362504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/414077039",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-414077039",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 414077039,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA3NzAzOQ==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-18T18:18:58Z",
          "updated_at": "2018-08-18T18:18:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "@apollo13 ok I finshed this just now. All tests are passing.\r\nI still kept the changeset to an absolute minimum. We now could go ahead and refactor things a bit.\r\n\r\n@timgraham do you have any objections to changing the database backend API?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/414077039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/414078260",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-414078260",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 414078260,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA3ODI2MA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-18T18:39:55Z",
          "updated_at": "2018-08-18T18:39:55Z",
          "author_association": "MEMBER",
          "body": "I don't think we would merge this without documentation, even if MySQL is unsupported. By the way, `postgres_tests` is for testing things in `contrib.postgres`, however, there are no changes in that module so the test location seems incorrect. You can document database backend API changes in the existing section of the release notes.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/414078260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/414078381",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-414078381",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 414078381,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA3ODM4MQ==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-18T18:42:06Z",
          "updated_at": "2018-08-18T18:42:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "Ok, so does that mean I can refactor the API a bit as @apollo13 suggested?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/414078381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/414078575",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-414078575",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 414078575,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA3ODU3NQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-18T18:44:24Z",
          "updated_at": "2018-08-18T18:44:24Z",
          "author_association": "MEMBER",
          "body": "Sure, maybe put it in a separate commit at least for now to ease review.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/414078575/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/414141150",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-414141150",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 414141150,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE0MTE1MA==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-19T17:04:20Z",
          "updated_at": "2018-08-19T17:04:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "Ok, documented and renamed. I moved the tests too as you suggested @timgraham ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/414141150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/415448084",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-415448084",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 415448084,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ0ODA4NA==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-23T14:55:01Z",
          "updated_at": "2018-08-23T14:55:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "Ok, I:\r\n* added documentation for all db backend API change\r\n* removed all non relevant tests\r\n* removed the AutoField import dependency\r\n* rebased and squashed all chages\r\n\r\n@timgraham you would mind to give it one more look?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/415448084/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/416594228",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-416594228",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 416594228,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjU5NDIyOA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-08-28T13:58:35Z",
          "updated_at": "2018-08-28T13:58:35Z",
          "author_association": "MEMBER",
          "body": "Why must `last_insert_id` return a list? Should it be renamed to `last_insert_ids` for some future change? If not, it seems it could continue to return a single value and then `execute_sql()` could wrap the call in a list.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/416594228/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/417850018",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-417850018",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 417850018,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg1MDAxOA==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-09-01T10:46:06Z",
          "updated_at": "2018-09-01T10:46:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Why must last_insert_id return a list? Should it be renamed to last_insert_ids for some future change? If not, it seems it could continue to return a single value and then execute_sql() could wrap the call in a list.\r\n\r\nGood point @timgraham. I reverted the API change and wrapped the call in `execute_sql` as you suggested.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/417850018/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/419649445",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-419649445",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 419649445,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY0OTQ0NQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-09-08T15:07:26Z",
          "updated_at": "2018-09-08T15:07:26Z",
          "author_association": "MEMBER",
          "body": "There are a number of Oracle test failures.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/419649445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/419715393",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-419715393",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 419715393,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTcxNTM5Mw==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-09-09T13:16:58Z",
          "updated_at": "2018-09-09T13:17:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham I rebased again, now they are not ;)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/419715393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/419736047",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-419736047",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 419736047,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTczNjA0Nw==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-09-09T18:44:32Z",
          "updated_at": "2018-09-09T18:44:32Z",
          "author_association": "MEMBER",
          "body": "The Oracle tests don't run automatically, you need to use [the trigger phrase](https://code.djangoproject.com/wiki/Jenkins). See [OracleTestSetup](https://code.djangoproject.com/wiki/OracleTestSetup) if you need to set up a test environment.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/419736047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/419812918",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-419812918",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 419812918,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTgxMjkxOA==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-09-10T07:19:37Z",
          "updated_at": "2018-09-10T07:19:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks, I should have guessed something like that. I looked into this a bit. Oracle does support `RETURNING INTO` which works fairly similar. I will need to do my homework here. It seems plausible to make this behavior work for all databases that support returning statements.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/419812918/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/449571022",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-449571022",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 449571022,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTU3MTAyMg==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-12-22T13:40:17Z",
          "updated_at": "2018-12-22T13:40:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham I has some time to fix it. It works for oracle now as well, at least locally it did. Would you mind to trigger the build again?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/449571022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/459104698",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-459104698",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 459104698,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTEwNDY5OA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-01-30T20:53:37Z",
          "updated_at": "2019-01-30T20:53:37Z",
          "author_association": "MEMBER",
          "body": "Here are the failures on Oracle:\r\n```\r\n======================================================================\r\nERROR: test_json_serializer (serializers.test_data.SerializerDataTests)\r\npartial(func, *args, **keywords) - new function with partial application\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/serializers/test_data.py\", line 409, in serializerTest\r\n    serialized_data = serializers.serialize(format, objects, indent=2)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/__init__.py\", line 128, in serialize\r\n    s.serialize(queryset, **options)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/base.py\", line 115, in serialize\r\n    self.end_object(obj)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/json.py\", line 53, in end_object\r\n    json.dump(self.get_dump_object(obj), self.stream, **self.json_kwargs)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 38, in get_dump_object\r\n    data[\"pk\"] = self._value_from_field(obj, obj._meta.pk)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 47, in _value_from_field\r\n    return value if is_protected_type(value) else field.value_to_string(obj)\r\n  File \"/media/evo/djang\u014d/django/db/models/fields/__init__.py\", line 1281, in value_to_string\r\n    return '' if val is None else val.isoformat()\r\nAttributeError: 'str' object has no attribute 'isoformat'\r\n\r\n======================================================================\r\nERROR: test_python_serializer (serializers.test_data.SerializerDataTests)\r\npartial(func, *args, **keywords) - new function with partial application\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/serializers/test_data.py\", line 409, in serializerTest\r\n    serialized_data = serializers.serialize(format, objects, indent=2)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/__init__.py\", line 128, in serialize\r\n    s.serialize(queryset, **options)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/base.py\", line 115, in serialize\r\n    self.end_object(obj)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 32, in end_object\r\n    self.objects.append(self.get_dump_object(obj))\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 38, in get_dump_object\r\n    data[\"pk\"] = self._value_from_field(obj, obj._meta.pk)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 47, in _value_from_field\r\n    return value if is_protected_type(value) else field.value_to_string(obj)\r\n  File \"/media/evo/djang\u014d/django/db/models/fields/__init__.py\", line 1281, in value_to_string\r\n    return '' if val is None else val.isoformat()\r\nAttributeError: 'str' object has no attribute 'isoformat'\r\n\r\n======================================================================\r\nERROR: test_xml_serializer (serializers.test_data.SerializerDataTests)\r\npartial(func, *args, **keywords) - new function with partial application\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/serializers/test_data.py\", line 411, in serializerTest\r\n    for obj in serializers.deserialize(format, serialized_data):\r\n  File \"/media/evo/djang\u014d/django/core/serializers/xml_serializer.py\", line 168, in __next__\r\n    return self._handle_object(node)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/xml_serializer.py\", line 181, in _handle_object\r\n    node.getAttribute('pk'))\r\n  File \"/media/evo/djang\u014d/django/db/models/fields/__init__.py\", line 1246, in to_python\r\n    params={'value': value},\r\ndjango.core.exceptions.ValidationError: [\"'2006-06-16 00:00:00' value has an invalid date format. It must be in YYYY-MM-DD format.\"]\r\n\r\n======================================================================\r\nERROR: test_yaml_serializer (serializers.test_data.SerializerDataTests)\r\npartial(func, *args, **keywords) - new function with partial application\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/serializers/test_data.py\", line 409, in serializerTest\r\n    serialized_data = serializers.serialize(format, objects, indent=2)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/__init__.py\", line 128, in serialize\r\n    s.serialize(queryset, **options)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/base.py\", line 115, in serialize\r\n    self.end_object(obj)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 32, in end_object\r\n    self.objects.append(self.get_dump_object(obj))\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 38, in get_dump_object\r\n    data[\"pk\"] = self._value_from_field(obj, obj._meta.pk)\r\n  File \"/media/evo/djang\u014d/django/core/serializers/python.py\", line 47, in _value_from_field\r\n    return value if is_protected_type(value) else field.value_to_string(obj)\r\n  File \"/media/evo/djang\u014d/django/db/models/fields/__init__.py\", line 1281, in value_to_string\r\n    return '' if val is None else val.isoformat()\r\nAttributeError: 'str' object has no attribute 'isoformat'\r\n\r\n======================================================================\r\nFAIL: test_inline_formsets_with_custom_pk (model_formsets.tests.ModelFormsetTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/model_formsets/tests.py\", line 787, in test_inline_formsets_with_custom_pk\r\n    self.assertEqual(book1.pk, 77777)\r\nAssertionError: '77777' != 77777\r\n\r\n======================================================================\r\nFAIL: test_two_level_foreign_keys (model_fields.test_uuid.TestAsPrimaryKey)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/model_fields/test_uuid.py\", line 193, in test_two_level_foreign_keys\r\n    self.assertIsInstance(gc.uuidchild_ptr_id, uuid.UUID)\r\nAssertionError: '05dcf43b439849acaa4d295384cea021' is not an instance of <class 'uuid.UUID'>\r\n\r\n======================================================================\r\nFAIL: test_hidden_no_data_found_exception (backends.oracle.tests.TransactionalTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/media/evo/djang\u014d/tests/backends/oracle/tests.py\", line 82, in test_hidden_no_data_found_exception\r\n    Square.objects.create(root=2, square=4)\r\n  File \"/opt/python3.7.0/lib/python3.7/contextlib.py\", line 119, in __exit__\r\n    next(self.gen)\r\n  File \"/media/evo/djang\u014d/django/test/testcases.py\", line 675, in _assert_raises_or_warns_cm\r\n    yield cm\r\nAssertionError: DatabaseError not raised\r\n```\r\n@felixxm might have some insight about the implementation there.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/459104698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/459449767",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-459449767",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 459449767,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTQ0OTc2Nw==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-01-31T18:19:04Z",
          "updated_at": "2019-01-31T18:19:04Z",
          "author_association": "MEMBER",
          "body": "I will check Oracle failures at the weekend.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/459449767/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/461748666",
          "html_url": "https://github.com/django/django/pull/9983#issuecomment-461748666",
          "issue_url": "https://api.github.com/repos/django/django/issues/9983",
          "id": 461748666,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTc0ODY2Ng==",
          "user": {
            "login": "codingjoe",
            "id": 1772890,
            "node_id": "MDQ6VXNlcjE3NzI4OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1772890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codingjoe",
            "html_url": "https://github.com/codingjoe",
            "followers_url": "https://api.github.com/users/codingjoe/followers",
            "following_url": "https://api.github.com/users/codingjoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions",
            "organizations_url": "https://api.github.com/users/codingjoe/orgs",
            "repos_url": "https://api.github.com/users/codingjoe/repos",
            "events_url": "https://api.github.com/users/codingjoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codingjoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-02-08T09:52:43Z",
          "updated_at": "2019-02-08T09:52:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @codingjoe Thanks for this patch \ud83d\udc4d Sorry, but I'm a bit confused \ud83d\ude15 My understanding is that this change should allow for returning multiple fields (via `RETURNING` clause) during `INSERT`, but we're going to restrict this only to PKs (at least for now). Am I right?\r\n\r\nNo, not exactly. It will not be restricted to PKs on Postgres. Of all other DBs it will, since they don't support multiple return values. (Or in the case of Oracle, the db wrapper does not support it.)\r\n\r\n> I'm asking because in [`return_insert_columns()`](https://github.com/django/django/pull/9983/files#diff-ea23a0501b6f65fb447da98953a35dafR318) we have `SQL` with multiple columns and in the same time `cursor._insert_id_var` is always a single parameter and [fetch_returned_insert_columns()](https://github.com/django/django/pull/9983/files#diff-ea23a0501b6f65fb447da98953a35dafR229) returns a list with a single value \ud83e\udd14 IMO we should change `_insert_id_var` to the list of variables `_insert_vars` and fetch all of them in the `fetch_returned_insert_columns()` also we should probably run db converters on results (see [Variable.outconverter](https://cx-oracle.readthedocs.io/en/latest/variable.html#Variable.outconverter)) and make some changes in the `InsertReturnParameter.types` (see [DatabaseIntrospection.data_types_reverse](https://github.com/django/django/blob/master/django/db/backends/oracle/introspection.py#L15-L28)). If you want I can prepare some edits.\r\n\r\nI think I understood what you mean. It still is not consistent, mainly because some dbs don't support more than once return value. I would be interested to see what solution you have in mind. It might also be possible to just have multiple different `InsertCompiler`s for each db and not one, that tries to do everything, as it currently is.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/461748666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/2496",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/2496/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/2496/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/2496/events",
      "html_url": "https://github.com/django/django/pull/2496",
      "id": 30465836,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTQxNTIwOTM=",
      "number": 2496,
      "title": "Fixed #14030 -- Allowed annotations to accept non-aggregates",
      "user": {
        "login": "jarshwah",
        "id": 541083,
        "node_id": "MDQ6VXNlcjU0MTA4Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarshwah",
        "html_url": "https://github.com/jarshwah",
        "followers_url": "https://api.github.com/users/jarshwah/followers",
        "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
        "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
        "organizations_url": "https://api.github.com/users/jarshwah/orgs",
        "repos_url": "https://api.github.com/users/jarshwah/repos",
        "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jarshwah/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 44,
      "created_at": "2014-03-30T14:07:02Z",
      "updated_at": "2014-11-15T14:05:58Z",
      "closed_at": "2014-11-15T14:05:58Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/2496",
        "html_url": "https://github.com/django/django/pull/2496",
        "diff_url": "https://github.com/django/django/pull/2496.diff",
        "patch_url": "https://github.com/django/django/pull/2496.patch",
        "merged_at": null
      },
      "body": "This PR supersedes https://github.com/django/django/pull/2184 and fixes https://code.djangoproject.com/ticket/14030.\n\nAnnotate has learned to accept non-aggregates, and aggregates can now use F() objects and arithmetic, since they now derive from ExpressionNode:\n\n```\nAuthor.objects.annotate(combined_ages=Sum(F('age')+F('friends__age')))\nAuthor.objects.annotate(double_age=F('age')*2)\n```\n\n ML discussion: https://groups.google.com/forum/#!topic/django-developers/8vEAwSwJGMc\n\nI'm going to close the previous PR which only implements the aggregates refactor. The additional commits for this PR allow non-aggregate annotation, and includes the beginnings of documentation.\n\nThere's still a little bit to be done, but I'm confident that both of these items can be completed in a fairly short timeline (within a week if required immediately):\n- ~~Complete documentation~~\n- ~~Implement deprecation path~~\n  - ~~renamed aggregates to annotations attribute on sql/query.py~~\n  - ~~sql/aggregates should no longer be used~~\n\nI'm fairly sure the code is solid and ready for review. I admit, it's a big change. But it does increase the utility of aggregates and annotations significantly, and allows users to implement their own aggregates and expressions very succinctly.\n",
      "closed_by": {
        "login": "mjtamlyn",
        "id": 389581,
        "node_id": "MDQ6VXNlcjM4OTU4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/389581?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjtamlyn",
        "html_url": "https://github.com/mjtamlyn",
        "followers_url": "https://api.github.com/users/mjtamlyn/followers",
        "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}",
        "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions",
        "organizations_url": "https://api.github.com/users/mjtamlyn/orgs",
        "repos_url": "https://api.github.com/users/mjtamlyn/repos",
        "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mjtamlyn/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/2496/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/2496/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/39641443",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-39641443",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 39641443,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQxNDQz",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-04-05T15:29:57Z",
          "updated_at": "2014-04-05T15:29:57Z",
          "author_association": "MEMBER",
          "body": "First pass at documentation complete. I'm not sure if I've gone into too much detail by adding the `refs/models/expressions.txt` document, so a review of that would be great.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/39641443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/39664697",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-39664697",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 39664697,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY0Njk3",
          "user": {
            "login": "loic",
            "id": 36160,
            "node_id": "MDQ6VXNlcjM2MTYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36160?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/loic",
            "html_url": "https://github.com/loic",
            "followers_url": "https://api.github.com/users/loic/followers",
            "following_url": "https://api.github.com/users/loic/following{/other_user}",
            "gists_url": "https://api.github.com/users/loic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/loic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/loic/subscriptions",
            "organizations_url": "https://api.github.com/users/loic/orgs",
            "repos_url": "https://api.github.com/users/loic/repos",
            "events_url": "https://api.github.com/users/loic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/loic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-04-06T11:06:09Z",
          "updated_at": "2014-04-06T11:06:09Z",
          "author_association": "MEMBER",
          "body": "Solid patch.\n\nFor the record, a couple of issues discussed on IRC:\n- `Field.__init__` increments a counter every time it's called, `output_type` using field instances may be an issue.\n- Some parts of the documentation are fairly technical (i.e. \"Expression API\" and \"Writing your own Query Expressions\") which may scare people. Let's group these in a \"Technical details\" where the introduction clearly state who is the target audience.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/39664697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/40396241",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-40396241",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 40396241,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzk2MjQx",
          "user": {
            "login": "diwu1989",
            "id": 380950,
            "node_id": "MDQ6VXNlcjM4MDk1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/380950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diwu1989",
            "html_url": "https://github.com/diwu1989",
            "followers_url": "https://api.github.com/users/diwu1989/followers",
            "following_url": "https://api.github.com/users/diwu1989/following{/other_user}",
            "gists_url": "https://api.github.com/users/diwu1989/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diwu1989/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diwu1989/subscriptions",
            "organizations_url": "https://api.github.com/users/diwu1989/orgs",
            "repos_url": "https://api.github.com/users/diwu1989/repos",
            "events_url": "https://api.github.com/users/diwu1989/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diwu1989/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-04-14T17:48:47Z",
          "updated_at": "2014-04-14T17:48:47Z",
          "author_association": "NONE",
          "body": "Will this be part of Django 1.7?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/40396241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/40397613",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-40397613",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 40397613,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzk3NjEz",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-04-14T18:00:36Z",
          "updated_at": "2014-04-14T18:00:36Z",
          "author_association": "MEMBER",
          "body": "@diwu1989 Unfortunately Django 1.7 is feature frozen at this point.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/40397613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/40433089",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-40433089",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 40433089,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDMzMDg5",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-04-15T00:17:49Z",
          "updated_at": "2014-04-15T00:17:49Z",
          "author_association": "MEMBER",
          "body": "@diwu1989 The earliest this patch will be released is 1.8, but it needs review and testing if you're able to offer either.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/40433089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/42182542",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-42182542",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 42182542,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTgyNTQy",
          "user": {
            "login": "akaariai",
            "id": 125285,
            "node_id": "MDQ6VXNlcjEyNTI4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akaariai",
            "html_url": "https://github.com/akaariai",
            "followers_url": "https://api.github.com/users/akaariai/followers",
            "following_url": "https://api.github.com/users/akaariai/following{/other_user}",
            "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions",
            "organizations_url": "https://api.github.com/users/akaariai/orgs",
            "repos_url": "https://api.github.com/users/akaariai/repos",
            "events_url": "https://api.github.com/users/akaariai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akaariai/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-05T12:29:49Z",
          "updated_at": "2014-05-05T12:29:49Z",
          "author_association": "MEMBER",
          "body": "If you have time to rebase this on current master that would help a lot. If needed I can do that myself, but getting this pull up to date would be even better.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/42182542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/42182834",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-42182834",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 42182834,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTgyODM0",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-05T12:34:07Z",
          "updated_at": "2014-05-05T12:34:07Z",
          "author_association": "MEMBER",
          "body": "@akaariai want me to squash into a single commit too? Helps rebasing in the future.\n\nWill do this tonight or tomorrow.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/42182834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/43212537",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-43212537",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 43212537,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjEyNTM3",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-15T13:59:36Z",
          "updated_at": "2014-05-15T14:02:14Z",
          "author_association": "MEMBER",
          "body": "@akaariai and I spoke in IRC regarding the current implementation and whether it could be improved. Anssi made some good suggestions about splitting some classes up, and I looked into PeeWee for some inspiration. \n\nI've implemented those suggestions, and tidied up expressions to make them a little nicer. I've done so in a separate branch: https://github.com/jarshwah/django/compare/nonaggregate-annotations...refine-expressions?expand=1\n(I'll clean this up and merge back into this PR if the idea is sound).\n\nIs that the kind of thing you were expecting Anssi? And do you think this solves the \"alternate implementation\" you speak about in the draft DEP?\n\nPay particular attention to the split between `ExpressionNode` and `Expression` (now not all subclasses have unnecessary children). But also to the `Func` type, which now allows:\n\n`Model.objects.annotate(the_default=Func('COALESCE', F('field'), F('other'), Value(\"None\")))`\n\nNote that user supplied functions become trivial, and we can supply some standard ones directly. I'm very happy about how this branch turned out.\n\n(I've just noticed some errors when running the full test suite, so this isn't yet ready for merge).\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/43212537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/43756405",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-43756405",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 43756405,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzU2NDA1",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-21T13:50:29Z",
          "updated_at": "2014-05-21T13:50:29Z",
          "author_association": "MEMBER",
          "body": "I can review the docs in more detail later after Anssi's review.\n\nYou can also check the doc spelling automatically: https://docs.djangoproject.com/en/dev/internals/contributing/writing-documentation/#spelling-check\n\n```\ninternals/deprecation.rst:34:wll:s/deprecation                                                                                                                                          \nref/models/expressions.rst:228:Func:expressions                                                                                                                                         \nref/models/expressions.rst:241:annoated:\nref/models/expressions.rst:426:multijoin:\nreleases/1.8.rst:26:customise:ses/1.8 \n```\n\nNot sure how much testing you've done, but if you rebase the branch so it merges cleanly, we can run Jenkins against it to make sure there are no issues.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/43756405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/45088356",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-45088356",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 45088356,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg4MzU2",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-04T13:14:33Z",
          "updated_at": "2014-06-04T13:14:33Z",
          "author_association": "MEMBER",
          "body": "buildbot, add to whitelist.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/45088356/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/45088819",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-45088819",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 45088819,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg4ODE5",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-04T13:18:56Z",
          "updated_at": "2014-06-04T13:18:56Z",
          "author_association": "MEMBER",
          "body": "FYI I've tested with djangocore-box using python 2.7 and python 3.3 on postgres, postgis, mysql, and sqlite. Haven't tested against oracle, but I now have a local oracle db to test against if there are failures on CI.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/45088819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/45812992",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-45812992",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 45812992,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEyOTky",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-11T23:22:06Z",
          "updated_at": "2014-06-11T23:22:06Z",
          "author_association": "MEMBER",
          "body": "@jorgecarleitao most of your comments were made against old commits, and some aren't relevant anymore. If you'd like to comment on the up to date PR I'll address. \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/45812992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/45830429",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-45830429",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 45830429,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMwNDI5",
          "user": {
            "login": "jorgecarleitao",
            "id": 2772607,
            "node_id": "MDQ6VXNlcjI3NzI2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2772607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgecarleitao",
            "html_url": "https://github.com/jorgecarleitao",
            "followers_url": "https://api.github.com/users/jorgecarleitao/followers",
            "following_url": "https://api.github.com/users/jorgecarleitao/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgecarleitao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgecarleitao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgecarleitao/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgecarleitao/orgs",
            "repos_url": "https://api.github.com/users/jorgecarleitao/repos",
            "events_url": "https://api.github.com/users/jorgecarleitao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgecarleitao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-12T05:02:12Z",
          "updated_at": "2014-06-12T05:02:12Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah oops, I'm sorry.\n\nSo, `output_type` seems to represent an instance of the model field, and not the model field type; the docs use model field without specifying if it is an instance or its class, so the attribute name may be misleading. I wonder if it could become a field class.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/45830429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/45861988",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-45861988",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 45861988,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYxOTg4",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-12T10:24:45Z",
          "updated_at": "2014-06-12T10:24:45Z",
          "author_association": "MEMBER",
          "body": "@jorgecarleitao \nThere are many places in the documentation that show examples of using output_type as an instance. Here's the most relevant: https://github.com/django/django/pull/2496/files#diff-aae07b9b30724c776a40ebadc2cfc140R272\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/45861988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/45886097",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-45886097",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 45886097,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODg2MDk3",
          "user": {
            "login": "jorgecarleitao",
            "id": 2772607,
            "node_id": "MDQ6VXNlcjI3NzI2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2772607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgecarleitao",
            "html_url": "https://github.com/jorgecarleitao",
            "followers_url": "https://api.github.com/users/jorgecarleitao/followers",
            "following_url": "https://api.github.com/users/jorgecarleitao/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgecarleitao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgecarleitao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgecarleitao/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgecarleitao/orgs",
            "repos_url": "https://api.github.com/users/jorgecarleitao/repos",
            "events_url": "https://api.github.com/users/jorgecarleitao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgecarleitao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-12T12:42:05Z",
          "updated_at": "2014-06-12T12:42:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah,\nI'm sorry, the comment was not related with this PR in particular, but with the master; I've added a [ticket](https://code.djangoproject.com/ticket/22819) about it.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/45886097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/46570310",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-46570310",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 46570310,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTcwMzEw",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-06-19T14:52:07Z",
          "updated_at": "2014-06-19T14:52:07Z",
          "author_association": "MEMBER",
          "body": "There's currently an issue with the way `resolve_columns` is receiving it's data. The columns appear to be out of order, and any annotations that are added to the query aren't showing a field type. Noting it here so I remember to investigate and fix. Currently causing issues for mssql, but would probably break for Oracle, and specific tests that involve booleanfields with mysql.\n\nhttps://gist.github.com/jarshwah/35c367a4cf567c62b579 as an example of out of order columns for the test: annotations.tests.NonAggregateAnnotationTestCase.test_basic_annotation\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/46570310/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/48797401",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-48797401",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 48797401,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzk3NDAx",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-07-12T00:42:29Z",
          "updated_at": "2014-07-12T00:42:29Z",
          "author_association": "MEMBER",
          "body": "The build is failing due to: https://github.com/django/django/pull/2903\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/48797401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/52181006",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-52181006",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 52181006,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTgxMDA2",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-14T13:13:26Z",
          "updated_at": "2014-08-14T13:13:26Z",
          "author_association": "MEMBER",
          "body": "Josh, could you rebase this? I'll review the docs and send a diff with changes.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/52181006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/52192184",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-52192184",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 52192184,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTkyMTg0",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-14T14:43:33Z",
          "updated_at": "2014-08-14T14:43:33Z",
          "author_association": "MEMBER",
          "body": "Sure I'll try and get it done today. If I can't, it'll have to wait til next week as I'm busy over this weekend.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/52192184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/52272349",
          "html_url": "https://github.com/django/django/pull/2496#issuecomment-52272349",
          "issue_url": "https://api.github.com/repos/django/django/issues/2496",
          "id": 52272349,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjcyMzQ5",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-08-15T03:57:57Z",
          "updated_at": "2014-08-15T03:57:57Z",
          "author_association": "MEMBER",
          "body": "Rebase done. I got sick of constantly having to merge deprecated.txt and 1.8.txt so I moved my additions further up so it can be properly auto-merged by git rebase.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/52272349/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/15841",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/15841/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/15841/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/15841/events",
      "html_url": "https://github.com/django/django/pull/15841",
      "id": 1301597343,
      "node_id": "PR_kwDOAD-Lgs47PXak",
      "number": 15841,
      "title": "Fixed #33817 -- Added support for python-oracledb and deprecated cx_Oracle.",
      "user": {
        "login": "petronny",
        "id": 5357170,
        "node_id": "MDQ6VXNlcjUzNTcxNzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petronny",
        "html_url": "https://github.com/petronny",
        "followers_url": "https://api.github.com/users/petronny/followers",
        "following_url": "https://api.github.com/users/petronny/following{/other_user}",
        "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
        "organizations_url": "https://api.github.com/users/petronny/orgs",
        "repos_url": "https://api.github.com/users/petronny/repos",
        "events_url": "https://api.github.com/users/petronny/events{/privacy}",
        "received_events_url": "https://api.github.com/users/petronny/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 101,
      "created_at": "2022-07-12T06:25:52Z",
      "updated_at": "2024-09-12T17:10:26Z",
      "closed_at": "2023-08-10T10:07:28Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/15841",
        "html_url": "https://github.com/django/django/pull/15841",
        "diff_url": "https://github.com/django/django/pull/15841.diff",
        "patch_url": "https://github.com/django/django/pull/15841.patch",
        "merged_at": "2023-08-10T10:07:27Z"
      },
      "body": "cx_Oracle has a major new release under a new name and homepage [python-oracledb](https://oracle.github.io/python-oracledb/).\r\n\r\nThe python-oracledb driver is a [Python programming language](https://www.python.org/) extension module allowing Python programs to connect to [Oracle Database](https://www.oracle.com/database/). Python-oracledb is the new name for Oracle's popular cx_Oracle driver.\r\n\r\nTested on an Oracle Autonomous Database with TLSv1 connection.\r\n\r\nTicket: https://code.djangoproject.com/ticket/33817",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/15841/reactions",
        "total_count": 5,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 2,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/15841/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1181372170",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1181372170",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1181372170,
          "node_id": "IC_kwDOAD-Lgs5Gak8K",
          "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-07-12T06:35:07Z",
          "updated_at": "2022-07-12T06:35:07Z",
          "author_association": "NONE",
          "body": "Hello @petronny! Thank you for your contribution \ud83d\udcaa\n\nAs it's your first contribution be sure to check out the [patch review checklist](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#patch-review-checklist).\n\nIf you're fixing a ticket [from Trac](https://code.djangoproject.com/) make sure to set the _\"Has patch\"_ flag and include a link to this PR in the ticket!\n\nIf you have any design or process questions then you can ask in the [Django forum](https://forum.djangoproject.com/c/internals/5).\n\nWelcome aboard \u26f5\ufe0f!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1181372170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1200263280",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1200263280",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1200263280,
          "node_id": "IC_kwDOAD-Lgs5HipBw",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-07-30T17:40:45Z",
          "updated_at": "2022-07-30T17:40:45Z",
          "author_association": "MEMBER",
          "body": "@petronny We should change `tests/requirements/oracle.txt`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1200263280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1206053669",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1206053669",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1206053669,
          "node_id": "IC_kwDOAD-Lgs5H4usl",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-05T05:20:24Z",
          "updated_at": "2022-08-05T05:20:24Z",
          "author_association": "MEMBER",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1206053669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1206156838",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1206156838",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1206156838,
          "node_id": "IC_kwDOAD-Lgs5H5H4m",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-05T07:54:54Z",
          "updated_at": "2022-08-05T07:54:54Z",
          "author_association": "MEMBER",
          "body": "@petronny Please push fixes in separate commits. It's hard to review after force-push.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1206156838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1206171914",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1206171914",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1206171914,
          "node_id": "IC_kwDOAD-Lgs5H5LkK",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-05T08:12:52Z",
          "updated_at": "2022-08-05T08:12:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Please push fixes in separate commits.\r\n\r\nOK.\r\n\r\nThe last change only replaces `oracledb.OBJECT` with `oracle.DB_TYPE_OBJECT`. These two are same but the first one is deprecated.\r\n\r\nThis won't fix the failed test in oragis. I've created an issue https://github.com/oracle/python-oracledb/issues/43 for it on oracledb.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1206171914/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1206478143",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1206478143",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1206478143,
          "node_id": "IC_kwDOAD-Lgs5H6WU_",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-05T13:47:11Z",
          "updated_at": "2022-08-05T14:03:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "https://github.com/oracle/python-oracledb/issues/43#issuecomment-1206453289\r\n\r\nAccording the reply of the oracledb group,\r\n`oracle.DB_TYPE_OBJECT` is not currently supported but may be supported in the future.\r\n\r\nFor now, we have to enable the thick mode of oracledb to pass this test, which needs the Oracle Client libraries.\r\nAre these libraries available in the oragis19 test?\r\n\r\nAlso, to enable the thick mode, a call to `oracledb.init_oracle_client()` is needed.\r\nBut currently I don't know where to add this line just for this test.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1206478143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1207077956",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1207077956",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1207077956,
          "node_id": "IC_kwDOAD-Lgs5H8oxE",
          "user": {
            "login": "cjbj",
            "id": 200778,
            "node_id": "MDQ6VXNlcjIwMDc3OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/200778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjbj",
            "html_url": "https://github.com/cjbj",
            "followers_url": "https://api.github.com/users/cjbj/followers",
            "following_url": "https://api.github.com/users/cjbj/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjbj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjbj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjbj/subscriptions",
            "organizations_url": "https://api.github.com/users/cjbj/orgs",
            "repos_url": "https://api.github.com/users/cjbj/repos",
            "events_url": "https://api.github.com/users/cjbj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjbj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-05T23:02:16Z",
          "updated_at": "2022-08-05T23:02:16Z",
          "author_association": "NONE",
          "body": " > For now, we have to enable the thick mode of oracledb to pass this test, which needs the Oracle Client libraries. Are these libraries available in the oragis19 test?\r\n\r\nI'm guessing that since cx_Oracle was tested, then the libraries are available.\r\n\r\nOverall, I recommend skipping this specific test when python-oracledb is in Thin mode (until the future time that the feature is supported in Thin mode).  You could do two test runs: the first with Thin mode and the second with Thick mode.  ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1207077956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1207142262",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1207142262",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1207142262,
          "node_id": "IC_kwDOAD-Lgs5H84d2",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-06T04:11:08Z",
          "updated_at": "2022-08-06T04:11:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've updated the code to enable this test only for the thick mode of oracledb and cx_Oracle.\r\n\r\nBut I have no idea how to setup a test for the thick mode.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1207142262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1210388928",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1210388928",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1210388928,
          "node_id": "IC_kwDOAD-Lgs5IJRHA",
          "user": {
            "login": "suraj-ora-2020",
            "id": 78541439,
            "node_id": "MDQ6VXNlcjc4NTQxNDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78541439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suraj-ora-2020",
            "html_url": "https://github.com/suraj-ora-2020",
            "followers_url": "https://api.github.com/users/suraj-ora-2020/followers",
            "following_url": "https://api.github.com/users/suraj-ora-2020/following{/other_user}",
            "gists_url": "https://api.github.com/users/suraj-ora-2020/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suraj-ora-2020/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suraj-ora-2020/subscriptions",
            "organizations_url": "https://api.github.com/users/suraj-ora-2020/orgs",
            "repos_url": "https://api.github.com/users/suraj-ora-2020/repos",
            "events_url": "https://api.github.com/users/suraj-ora-2020/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suraj-ora-2020/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-10T09:11:51Z",
          "updated_at": "2022-08-10T09:11:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I've updated the code to enable this test only for the thick mode of oracledb and cx_Oracle.\r\n> \r\n> But I have no idea how to setup a test for the thick mode.\r\n\r\nSince you were able to run cx_Oracle so i assume you have the oracle instant client installed. So to switch from thin mode to thick mode in pyoracledb you need to call oracledb.init_oracle_client(lib_dir=\"path_to_instant_client\"). You just need to call it once. You can call it either in the application or you can call after import oracledb in the following file django/db/backends/oracle/base.py.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1210388928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1210458494",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1210458494",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1210458494,
          "node_id": "IC_kwDOAD-Lgs5IJiF-",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-10T10:10:34Z",
          "updated_at": "2022-08-10T10:10:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "> You can call it either in the application or you can call after import oracledb in the following file django/db/backends/oracle/base.py.\r\n\r\nIt will force the mode to be thick if called in base.py.\r\nAnd I believe that most users should perfer the thin mode.\r\nSo I perfer to call it just in the application.\r\n\r\nBut now we need some new jenkins workflows (or pipelines, idk) to test both the thin and thick modes, which are:\r\n\r\n* oracle19, for thin mode and the basic fields.\r\n* oragis19, for thin mode and the geometry fields.\r\n* oracle19-thick, for thick mode and the basic fields.\r\n* oragis19-thick , for thick mode and the geometry fields.\r\n\r\nFor the first two we can just use the existing oracle19 and oragis19 tests.\r\nI have no idea how to add the last two for jenkins and enable the thick mode in them.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1210458494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1212628784",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1212628784",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1212628784,
          "node_id": "IC_kwDOAD-Lgs5IRz8w",
          "user": {
            "login": "cjbj",
            "id": 200778,
            "node_id": "MDQ6VXNlcjIwMDc3OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/200778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjbj",
            "html_url": "https://github.com/cjbj",
            "followers_url": "https://api.github.com/users/cjbj/followers",
            "following_url": "https://api.github.com/users/cjbj/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjbj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjbj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjbj/subscriptions",
            "organizations_url": "https://api.github.com/users/cjbj/orgs",
            "repos_url": "https://api.github.com/users/cjbj/repos",
            "events_url": "https://api.github.com/users/cjbj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjbj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-12T00:53:38Z",
          "updated_at": "2022-08-12T00:53:38Z",
          "author_association": "NONE",
          "body": "@felixxm are you able to help with @petronny's question about enabling extra tests?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1212628784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1212739258",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1212739258",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1212739258,
          "node_id": "IC_kwDOAD-Lgs5ISO66",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-12T05:19:45Z",
          "updated_at": "2022-08-12T05:19:45Z",
          "author_association": "MEMBER",
          "body": "> @felixxm are you able to help with @petronny's question about enabling extra tests?\r\n\r\nIMO, we don't want to maintain multiple workflows for Oracle. We can decide to always use `thick` mode as `thin` mode is limited :thinking:. I should have some time to check this carefully in the coming weeks.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1212739258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1212743821",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1212743821",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1212743821,
          "node_id": "IC_kwDOAD-Lgs5ISQCN",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-12T05:30:14Z",
          "updated_at": "2022-08-12T05:30:24Z",
          "author_association": "CONTRIBUTOR",
          "body": "Well I wish there could be an option to still use the thin mode if the thick mode is set as the default since I don't need the geometry field.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1212743821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1217858150",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1217858150",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1217858150,
          "node_id": "IC_kwDOAD-Lgs5Ilwpm",
          "user": {
            "login": "suraj-ora-2020",
            "id": 78541439,
            "node_id": "MDQ6VXNlcjc4NTQxNDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78541439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suraj-ora-2020",
            "html_url": "https://github.com/suraj-ora-2020",
            "followers_url": "https://api.github.com/users/suraj-ora-2020/followers",
            "following_url": "https://api.github.com/users/suraj-ora-2020/following{/other_user}",
            "gists_url": "https://api.github.com/users/suraj-ora-2020/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suraj-ora-2020/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suraj-ora-2020/subscriptions",
            "organizations_url": "https://api.github.com/users/suraj-ora-2020/orgs",
            "repos_url": "https://api.github.com/users/suraj-ora-2020/repos",
            "events_url": "https://api.github.com/users/suraj-ora-2020/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suraj-ora-2020/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-17T10:59:47Z",
          "updated_at": "2022-08-17T10:59:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "> \r\n\r\n\r\n\r\n> > @felixxm are you able to help with @petronny's question about enabling extra tests?\r\n> \r\n> IMO, we don't want to maintain multiple workflows for Oracle. We can decide to always use `thick` mode as `thin` mode is limited \ud83e\udd14. I should have some time to check this carefully in the coming weeks.\r\n\r\n@felixxm I think using default as thick would not server the benefit for which pyoracledb has been developed.In thin mode we dont require instant client library dependencies, its light weight as well faster. We are continuously working on expanding thin mode functionality. We can give option to users to choose between thin and thick mode using some parameters in the settings.py.\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1217858150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1223204860",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1223204860",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1223204860,
          "node_id": "IC_kwDOAD-Lgs5I6J_8",
          "user": {
            "login": "cjbj",
            "id": 200778,
            "node_id": "MDQ6VXNlcjIwMDc3OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/200778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjbj",
            "html_url": "https://github.com/cjbj",
            "followers_url": "https://api.github.com/users/cjbj/followers",
            "following_url": "https://api.github.com/users/cjbj/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjbj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjbj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjbj/subscriptions",
            "organizations_url": "https://api.github.com/users/cjbj/orgs",
            "repos_url": "https://api.github.com/users/cjbj/repos",
            "events_url": "https://api.github.com/users/cjbj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjbj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-22T22:11:34Z",
          "updated_at": "2022-08-22T22:11:34Z",
          "author_association": "NONE",
          "body": "To get some progress on this PR, I can settle for using Thick mode until Thin mode has the Object support needed for all tests.  Users (like us) will be able to keep testing Thin mode easily enough - particularly if this PR lands.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1223204860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1225564799",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1225564799",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1225564799,
          "node_id": "IC_kwDOAD-Lgs5JDKJ_",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-24T11:00:23Z",
          "updated_at": "2022-08-25T17:53:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm Hi, I have tried to enable the thick mode in `tests/dbshell/test_oracle.py` but I'm not sure if it will work. If it works then the PR is ready for review and the rest tests on the oracle database.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1225564799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1228170538",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1228170538",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1228170538,
          "node_id": "IC_kwDOAD-Lgs5JNGUq",
          "user": {
            "login": "suraj-ora-2020",
            "id": 78541439,
            "node_id": "MDQ6VXNlcjc4NTQxNDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78541439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suraj-ora-2020",
            "html_url": "https://github.com/suraj-ora-2020",
            "followers_url": "https://api.github.com/users/suraj-ora-2020/followers",
            "following_url": "https://api.github.com/users/suraj-ora-2020/following{/other_user}",
            "gists_url": "https://api.github.com/users/suraj-ora-2020/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suraj-ora-2020/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suraj-ora-2020/subscriptions",
            "organizations_url": "https://api.github.com/users/suraj-ora-2020/orgs",
            "repos_url": "https://api.github.com/users/suraj-ora-2020/repos",
            "events_url": "https://api.github.com/users/suraj-ora-2020/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suraj-ora-2020/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-26T07:49:09Z",
          "updated_at": "2022-08-26T07:49:09Z",
          "author_association": "CONTRIBUTOR",
          "body": "@petronny I had ran the test suite against your PR and have got some observations.\r\nThe stats with you PR is:\r\n15964 tests\r\nFAILED (failures=106, errors=41, skipped=1755, expected failures=6).\r\n\r\nThe stats with the current django 4.2dev version is:\r\n15969 tests\r\nFAILED (failures=24, errors=3, skipped=1755, expected failures=6)\r\n\r\nAs we can see some new failures are coming with the PR which were not present earlier. Most of the failures are exactly same and repetative.\r\nAssertionError: 318 != 0 : Stream should be empty: actually contains '/Users/apple/oracle/django_mod1/django/django/db/backends/oracle/base.py:57\r\n\r\nTest names : \r\ntest_base_command_multiple_label (admin_scripts.tests.CommandTypes),\r\ntest_testrunner_option (test_runner.tests.CustomTestRunnerOptionsCmdlineTests), etc.\r\n\r\nMaybe some of the new changes is causing this failures.\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1228170538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1228189730",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1228189730",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1228189730,
          "node_id": "IC_kwDOAD-Lgs5JNLAi",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-26T08:09:07Z",
          "updated_at": "2022-08-26T08:09:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "@suraj-ora-2020 Thanks for the tests.\r\n\r\n`django/db/backends/oracle/base.py:57` gives a warning when oracledb is in the thin mode.\r\nHowever the test wants no warning at all.\r\n\r\nI've already called `oracledb.init_oracle_client()` in `tests/dbshell/test_oracle.py:15`. But maybe `django/db/backends/oracle/base.py` is loaded earlier than that.\r\n\r\nCould you have a try to just remove the warning at `django/db/backends/oracle/base.py:57` to see if the tests pass?\r\nIf pass then I just need to figure out a new place to give the warning.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1228189730/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1230083070",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1230083070",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1230083070,
          "node_id": "IC_kwDOAD-Lgs5JUZP-",
          "user": {
            "login": "suraj-ora-2020",
            "id": 78541439,
            "node_id": "MDQ6VXNlcjc4NTQxNDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78541439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suraj-ora-2020",
            "html_url": "https://github.com/suraj-ora-2020",
            "followers_url": "https://api.github.com/users/suraj-ora-2020/followers",
            "following_url": "https://api.github.com/users/suraj-ora-2020/following{/other_user}",
            "gists_url": "https://api.github.com/users/suraj-ora-2020/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suraj-ora-2020/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suraj-ora-2020/subscriptions",
            "organizations_url": "https://api.github.com/users/suraj-ora-2020/orgs",
            "repos_url": "https://api.github.com/users/suraj-ora-2020/repos",
            "events_url": "https://api.github.com/users/suraj-ora-2020/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suraj-ora-2020/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-29T10:13:06Z",
          "updated_at": "2022-08-29T10:13:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @suraj-ora-2020 Thanks for the tests.\r\n> \r\n> `django/db/backends/oracle/base.py:57` gives a warning when oracledb is in the thin mode. However the test wants no warning at all.\r\n> \r\n> I've already called `oracledb.init_oracle_client()` in `tests/dbshell/test_oracle.py:15`. But maybe `django/db/backends/oracle/base.py` is loaded earlier than that.\r\n> \r\n> Could you have a try to just remove the warning at `django/db/backends/oracle/base.py:57` to see if the tests pass? If pass then I just need to figure out a new place to give the warning.\r\n\r\n@petronny The failures were due to the warnings. I tried removing the warnings and the tests were passing without failure.I guess the place for warnings need to be modified.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1230083070/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 2,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1231418137",
          "html_url": "https://github.com/django/django/pull/15841#issuecomment-1231418137",
          "issue_url": "https://api.github.com/repos/django/django/issues/15841",
          "id": 1231418137,
          "node_id": "IC_kwDOAD-Lgs5JZfMZ",
          "user": {
            "login": "petronny",
            "id": 5357170,
            "node_id": "MDQ6VXNlcjUzNTcxNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5357170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petronny",
            "html_url": "https://github.com/petronny",
            "followers_url": "https://api.github.com/users/petronny/followers",
            "following_url": "https://api.github.com/users/petronny/following{/other_user}",
            "gists_url": "https://api.github.com/users/petronny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petronny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petronny/subscriptions",
            "organizations_url": "https://api.github.com/users/petronny/orgs",
            "repos_url": "https://api.github.com/users/petronny/repos",
            "events_url": "https://api.github.com/users/petronny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petronny/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-08-30T09:35:17Z",
          "updated_at": "2022-08-30T09:35:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I guess the place for warnings need to be modified.\r\n\r\n@suraj-ora-2020 I've moved that warning into DatabaseWrapper. Would you like to give it a new round of tests?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1231418137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18215",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18215/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18215/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18215/events",
      "html_url": "https://github.com/django/django/pull/18215",
      "id": 2326582250,
      "node_id": "PR_kwDOAD-Lgs5xD2fS",
      "number": 18215,
      "title": "Fixed #15727 -- Added Content Security Policy (CSP) support.",
      "user": {
        "login": "robhudson",
        "id": 1106,
        "node_id": "MDQ6VXNlcjExMDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robhudson",
        "html_url": "https://github.com/robhudson",
        "followers_url": "https://api.github.com/users/robhudson/followers",
        "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
        "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
        "organizations_url": "https://api.github.com/users/robhudson/orgs",
        "repos_url": "https://api.github.com/users/robhudson/repos",
        "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robhudson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 12,
      "created_at": "2024-05-30T21:40:54Z",
      "updated_at": "2025-04-19T18:04:31Z",
      "closed_at": "2025-04-19T18:04:31Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18215",
        "html_url": "https://github.com/django/django/pull/18215",
        "diff_url": "https://github.com/django/django/pull/18215.diff",
        "patch_url": "https://github.com/django/django/pull/18215.patch",
        "merged_at": null
      },
      "body": "#### Trac ticket number\r\n\r\nticket-15727\r\n\r\n#### Branch description\r\nThis adds CSP support for both the enforced header and report-only header.\r\n\r\nThere are a number of `TODO` notes within this PR that I'm looking for feedback on. \r\n\r\n#### Checklist\r\n- [x] This PR targets the `main` branch.\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system (was already set from prior efforts.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n\r\n",
      "closed_by": {
        "login": "robhudson",
        "id": 1106,
        "node_id": "MDQ6VXNlcjExMDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robhudson",
        "html_url": "https://github.com/robhudson",
        "followers_url": "https://api.github.com/users/robhudson/followers",
        "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
        "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
        "organizations_url": "https://api.github.com/users/robhudson/orgs",
        "repos_url": "https://api.github.com/users/robhudson/repos",
        "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robhudson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18215/reactions",
        "total_count": 16,
        "+1": 8,
        "-1": 0,
        "laugh": 0,
        "hooray": 8,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18215/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2394788747",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2394788747",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2394788747,
          "node_id": "IC_kwDOAD-Lgs6OvZOL",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-04T23:33:54Z",
          "updated_at": "2025-04-10T00:07:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "I refactored the code today after review from Adam. \r\n\r\n- The middleware is now its own middleware, not part of `SecurityMiddleware`\r\n- Decorators were added. See comment above looking for feedback.\r\n- I removed the docs for now but will continue to work on them.\r\n\r\nWhat's left:\r\n\r\n- [x] Documentation\r\n- [x] A context processor test\r\n- [x] Possibly a security check to warn if the CSP settings are empty that no CSP headers will be sent\r\n- [x] Possibly review what views may need to be exempted from CSP\r\n- [ ] Possibly review what views want to set their own CSP, but this could come in later commits\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2394788747/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2466463590",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2466463590",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2466463590,
          "node_id": "IC_kwDOAD-Lgs6TAz9m",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-09T21:21:49Z",
          "updated_at": "2024-11-09T21:21:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'm going to set this as ready for review. I think it's feature complete for a first that includes the middleware to set the CSP headers, a couple decorators to fine tune the CSP policy for views, and a context processor for accessing the nonce easily.\r\n\r\nInline there are a few `TODO` comments for further discussion. Feel free to add Github comments on those.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2466463590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2582697677",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2582697677",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2582697677,
          "node_id": "IC_kwDOAD-Lgs6Z8NbN",
          "user": {
            "login": "Flimm",
            "id": 355454,
            "node_id": "MDQ6VXNlcjM1NTQ1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/355454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Flimm",
            "html_url": "https://github.com/Flimm",
            "followers_url": "https://api.github.com/users/Flimm/followers",
            "following_url": "https://api.github.com/users/Flimm/following{/other_user}",
            "gists_url": "https://api.github.com/users/Flimm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Flimm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Flimm/subscriptions",
            "organizations_url": "https://api.github.com/users/Flimm/orgs",
            "repos_url": "https://api.github.com/users/Flimm/repos",
            "events_url": "https://api.github.com/users/Flimm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Flimm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-10T13:18:49Z",
          "updated_at": "2025-01-10T13:19:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "How are third-party Django apps meant to modify the CSP settings of the Django project they are contained in? I'm interested in understanding the intended best practise, here.\r\n\r\nAre they meant to modify their installation instructions in their documentation? Something like this:\r\n\r\n> 1. Install the Django app `foobar` from PyPI: `pip install django-foobar`\r\n> 2. Add `foobar` to your `INSTALLED_APPS` variable in your `settings.py` file:\r\n>\r\n>        INSTALLED_APPS = [\r\n>            # ....\r\n>            'foobar',\r\n>        ]\r\n>\r\n> 3. Modify your `SECURE_CSP` or `SECURE_CSP_REPORT_ONLY` variables in your `settings.py` if you are using CSP to allow Foobar's dependencies to load:\r\n>\r\n>        from django.middleware import csp\r\n>        SECURE_CSP = {\r\n>            \"DIRECTIVES\": {\r\n>                \"script-src\": [csp.SELF, 'https://example.og/foobar'],\r\n>            },\r\n>        }\r\n\r\nOr are third-party Django apps meant to modify `SECURE_CSP` settings automatically in their code? They could use code  like this:\r\n\r\n```\r\nfrom django.conf import settings\r\n\r\nif not hasattr(settings, 'SECURE_CSP') or settings.SECURE_CSP is None:\r\n    settings.SECURE_CSP = {}\r\n\r\nsettings.SECURE_CSP.setdefault('DIRECTIVES', {}).setdefault('script-src', [])\r\nsettings.SECURE_CSP['DIRECTIVES']['script-src'].append('https://example.org/foobar')\r\n```\r\n\r\nAlso, are third-party Django apps meant to include the nonce in their templates, like this?\r\n\r\n```\r\n<script {% if CSP_NONCE %}nonce=\"{{ CSP_NONCE }}\" {% endif %}>\r\n    console.log(\"foobar\");\r\n</script>\r\n```\r\n\r\nI would love it if third-party Django apps made supporting CSP as easy as possible, and so I would be tempted to encourage those developers to modify `SECURE_CSP` automatically if needed, but I'm not sure if that is the intention of the developers of this configuration. I'm not sure if there are any drawbacks to this approach. I'm not excited about asking developers to include more documentation in their installation instructions. If the settings need to change, then the installation instructions need to change too, and upgrading becomes a more manual process.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2582697677/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2583457676",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2583457676",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2583457676,
          "node_id": "IC_kwDOAD-Lgs6Z_G-M",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-10T18:15:30Z",
          "updated_at": "2025-01-10T18:15:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "I appreciate all the attention given today by various reviewers. I know it takes time and focus out of your day so I wanted to acknowledge that and say thank you. \ud83d\ude4f \r\n\r\nIn an effort to give back I'd be happy to _quid pro quo_ and offer some attention or focus on anything you're working on. Feel free to DM me on the Django discord. \ud83e\udd1d \ud83c\udf31 ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2583457676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2583491587",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2583491587",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2583491587,
          "node_id": "IC_kwDOAD-Lgs6Z_PQD",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-10T18:25:11Z",
          "updated_at": "2025-01-10T18:25:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I appreciate all the attention given today by various reviewers. I know it takes time and focus out of your day so I wanted to acknowledge that and say thank you. \ud83d\ude4f\r\n> \r\n> In an effort to give back I'd be happy to _quid pro quo_ and offer some attention or focus on anything you're working on. Feel free to DM me on the Django discord. \ud83e\udd1d \ud83c\udf31\r\n\r\nThank _you_ for all your work on this!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2583491587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2583561471",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2583561471",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2583561471,
          "node_id": "IC_kwDOAD-Lgs6Z_gT_",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-10T18:45:05Z",
          "updated_at": "2025-01-10T18:45:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "> How are third-party Django apps meant to modify the CSP settings of the Django project they are contained in? I'm interested in understanding the intended best practise, here.\r\n\r\nThis is a great question and also a larger discussion that I'd like to see happen. I feel like this PR would be difficult to have that discussion.\r\n\r\n> Are they meant to modify their installation instructions in their documentation? Something like this:\r\n\r\nI do feel like some mention of CSP could be worthwhile. For example, I've discovered that the wagtail admin requires CSP considerations like having `img-src 'blob:'` for image uploads, and `frame-ancestors 'self'` for page previews.\r\n\r\n> Or are third-party Django apps meant to modify `SECURE_CSP` settings automatically in their code?\r\n\r\nIt is possible 3rd parties could use the `@csp_override` decorator for their own views and add directives. If so, this is something I would want to be aware of (e.g. in their docs) since it can impact my site's security.\r\n\r\n> Also, are third-party Django apps meant to include the nonce in their templates, like this?\r\n> \r\n> ```\r\n> <script {% if CSP_NONCE %}nonce=\"{{ CSP_NONCE }}\" {% endif %}>\r\n>     console.log(\"foobar\");\r\n> </script>\r\n> ```\r\n\r\nYes, and in fact, the django-debug-toolbar is doing something similar. Just use the `request` object to check the existence of the `csp_nonce` and you know that the CSP middleware is active.\r\n\r\n```html\r\n<script {% if request.csp_nonce %}nonce=\"{{ request.csp_nonce }}\"{% endif %}>\r\n    console.log(\"foobar\");\r\n</script>\r\n```\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2583561471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2683311211",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2683311211",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2683311211,
          "node_id": "IC_kwDOAD-Lgs6f8BRr",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-02-25T21:16:00Z",
          "updated_at": "2025-02-25T21:16:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "After the 5.2 freeze, I took a break from this PR, but I consider this feature complete. I noticed there wasn\u2019t any communication on why it didn\u2019t make the 5.2 cutoff, so I'm unclear on what\u2019s required for inclusion in 6.0. I'd appreciate any feedback or clarity on the next steps.\r\n\r\nI'm happy to update the documentation, e.g. swapping any 5.2 references to 6.0, and address any further feedback to help get this accepted. Thanks!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2683311211/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2695427318",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2695427318",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2695427318,
          "node_id": "IC_kwDOAD-Lgs6gqPT2",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-03T20:08:07Z",
          "updated_at": "2025-03-03T20:08:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "> After the 5.2 freeze, I took a break from this PR, but I consider this feature complete. I noticed there wasn\u2019t any communication on why it didn\u2019t make the 5.2 cutoff, so I'm unclear on what\u2019s required for inclusion in 6.0. I'd appreciate any feedback or clarity on the next steps.\r\n\r\nThe sad reality is that many things didn\u2019t make the 5.2 cutoff simply due to a lack of maintainer resources\u2014nothing more. The final review, cleanup, and merging are primarily handled by the Fellows, and we worked through as many PRs as possible before the feature freeze, but unfortunately, we couldn\u2019t get to this one. The fact is, we\u2019re a tiny team (just 1.5 paid people, one full-time, one part-time), with other priorities that come before PR reviews, such as handling security reports and ticket triage.\r\n\r\n> I'm happy to update the documentation, e.g. swapping any 5.2 references to 6.0, and address any further feedback to help get this accepted. Thanks!\r\n\r\nIf you can make one more time investment and do that update, it will certainly help having this is a fully reviewable state for when a Fellow gets to it from the review queue.\r\n\r\nThank you for your patience.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2695427318/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2695437571",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2695437571",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2695437571,
          "node_id": "IC_kwDOAD-Lgs6gqR0D",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-03T20:13:15Z",
          "updated_at": "2025-03-03T20:13:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "> The sad reality is that many things didn\u2019t make the 5.2 cutoff simply due to a lack of maintainer resources\r\n\r\nI totally understand and sympathize. You all are doing great work!\r\n\r\n> If you can make one more time investment and do that update, it will certainly help having this is a fully reviewable state for when a Fellow gets to it from the review queue.\r\n\r\nNot just one more, many more, as needed. I'm happy to help.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2695437571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2740761484",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2740761484",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2740761484,
          "node_id": "IC_kwDOAD-Lgs6jXLOM",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-20T14:59:39Z",
          "updated_at": "2025-03-20T14:59:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I would like us to break this up into a couple of commits/PRs (which could be merged separately) to allow an easier review. This is my current idea:\r\n> \r\n>     * first commit adds the settings and middleware with no nonce support\r\n>     * second commit adds nonce support\r\n>     * third commit adds the decorators\r\n\r\nThat sounds like a good way to break it up. \r\n\r\nSo that would be 3 new PRs with the code all squashed and separated out in those logical groupings. The docs and middleware may need a bit of unraveling to tease apart the nonce support, but totally doable. I'll get started on that over the next week. Thanks for the reviews!\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2740761484/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2799033765",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2799033765",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2799033765,
          "node_id": "IC_kwDOAD-Lgs6m1d2l",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-12T20:47:50Z",
          "updated_at": "2025-04-19T16:27:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've addressed all the code-specific feedback discussed so far. My next steps are:\r\n\r\nDocumentation reorganization: I'll move implementation details from the reference guide into the how-to documentation, keeping `ref/csp.txt` focused on the technical API specification.\r\n\r\nBreaking down the PR: As suggested, I'll split this into smaller, more manageable chunks:\r\n1. First PR: Middleware with nonce support only (including context processor)\r\n2. Follow-up PR: CSP Decorators\r\n\r\nUpdate: Since the context processor is for the nonce and the how-to would show configuring the context processor to use in the templates to define where the nonce goes, that will go with the first PR. The follow up will then only be the decorator.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2799033765/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2816808596",
          "html_url": "https://github.com/django/django/pull/18215#issuecomment-2816808596",
          "issue_url": "https://api.github.com/repos/django/django/issues/18215",
          "id": 2816808596,
          "node_id": "IC_kwDOAD-Lgs6n5RaU",
          "user": {
            "login": "robhudson",
            "id": 1106,
            "node_id": "MDQ6VXNlcjExMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robhudson",
            "html_url": "https://github.com/robhudson",
            "followers_url": "https://api.github.com/users/robhudson/followers",
            "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
            "organizations_url": "https://api.github.com/users/robhudson/orgs",
            "repos_url": "https://api.github.com/users/robhudson/repos",
            "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robhudson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-19T18:04:31Z",
          "updated_at": "2025-04-19T18:04:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "A new PR has been filed at https://github.com/django/django/pull/19393\r\n\r\nThe new PR:\r\n* splits this into a smaller reviewable chunk focusing on the middleware and adjacent components.\r\n* squashes the commits.\r\n* addresses the requested changes to the docs (adding a `howto`, etc).\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2816808596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/10478",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/10478/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/10478/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/10478/events",
      "html_url": "https://github.com/django/django/pull/10478",
      "id": 366711568,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwMzE2ODgy",
      "number": 10478,
      "title": "Fixed #29824 -- Added support for database exclusion constraints on PostgreSQL.",
      "user": {
        "login": "atombrella",
        "id": 6141390,
        "node_id": "MDQ6VXNlcjYxNDEzOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atombrella",
        "html_url": "https://github.com/atombrella",
        "followers_url": "https://api.github.com/users/atombrella/followers",
        "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
        "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
        "organizations_url": "https://api.github.com/users/atombrella/orgs",
        "repos_url": "https://api.github.com/users/atombrella/repos",
        "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atombrella/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 21,
      "created_at": "2018-10-04T09:58:52Z",
      "updated_at": "2019-07-16T19:29:43Z",
      "closed_at": "2019-07-16T19:08:39Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/10478",
        "html_url": "https://github.com/django/django/pull/10478",
        "diff_url": "https://github.com/django/django/pull/10478.diff",
        "patch_url": "https://github.com/django/django/pull/10478.patch",
        "merged_at": "2019-07-16T19:08:39Z"
      },
      "body": "It should be cleaned up, but here's a good first take on adding the exclude using constraint to `django.contrib.postgres`. Essentially, it's a way to enforce a unique constraint for a range, whether they're represented as a range-type, or using two fields.\r\n\r\nhttps://gist.github.com/fphilipe/0a2a3d50a9f3834683bf uses two fields, and overlaps with the documentation example where cars are used to illustrate how it works.\r\n\r\nI was lucky that `RemoveConstraint` works, as the constraint can also be removed using `DROP INDEX ...`.\r\nhttps://code.djangoproject.com/ticket/29824\r\n\r\n- [x] Introduce a way to write operators and boundaries with constants. Locally, I have something for this.\r\n- [x] Demonstrate how to use the constraint for models that use two fields instead of a range-field\r\n- ~~Maybe write some tests for abstract models. There's #11279 that's a necessity for this~~. ",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/10478/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/10478/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/434437901",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-434437901",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 434437901,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQzNzkwMQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-10-30T19:29:22Z",
          "updated_at": "2018-10-30T19:29:22Z",
          "author_association": "MEMBER",
          "body": "Is it ready for review or still WIP as mentioned in the commit message?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/434437901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/434442796",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-434442796",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 434442796,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQ0Mjc5Ng==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-10-30T19:45:25Z",
          "updated_at": "2018-10-30T19:45:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham I'd like to have an example as requested because there may be many (I've at least worked with one) existing installations of Django which implement a table with two fields, rather than using `django.contrib.postgres`'s ranges. I tried to add some test and code, just as a POC but didn't finalize it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/434442796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/495981596",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-495981596",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 495981596,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk4MTU5Ng==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-05-26T08:54:03Z",
          "updated_at": "2019-05-26T08:54:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'm clueless how to fix the failing tests on the databases that are irrelevant for this patch.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/495981596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/498222152",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-498222152",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 498222152,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODIyMjE1Mg==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-03T11:39:47Z",
          "updated_at": "2019-06-03T11:39:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "@ngnpope Thank you :+1: I think I've addressed most of the feedback that was possible. Remaining issues are related to `&&` versus constants such as `OVERLAPS`. I like the idea of `F().with()` and `Expression().with()`, but that'd introduce a subclass of `F` and `Expression` somewhere in the PostgreSQL backend just for this purpose. About documentation, referring to PostgreSQL's documentation for details on the operators will suffice. People who will want to use this feature also have a good understanding of PostgreSQL.  \r\n\r\nTests are failing on unrelated database backends, and suggested method of silencing with `try/except pass` doesn't work. Help will be appreciated.\r\n\r\nThe docs part of the test fails because of `customise` not being recognized. @carltongibson or @felixxm Could you please fix this?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/498222152/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/498222565",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-498222565",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 498222565,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODIyMjU2NQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-06-03T11:41:21Z",
          "updated_at": "2019-06-03T11:41:21Z",
          "author_association": "MEMBER",
          "body": "@atombrella #11439.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/498222565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/510860087",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-510860087",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 510860087,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDg2MDA4Nw==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-12T11:59:32Z",
          "updated_at": "2019-07-12T11:59:32Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm Thanks for the feedback! I believe most of it has been addressed. I had a look at the test coverage, and only two lines are untouched. However, I believe that this would require a third test model, which I don't think is desired.\r\n\r\n    if self.condition is None:\r\n        return None\r\n\r\nI introduced `RangeOperators` in a separate commit. I'm not sure if adding fallbacks in `postgres_tests /fields.py` should be done in that `Refs`-commit.\r\n\r\nI've unchecked \"Patch needs improvements\" in Trac.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/510860087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/510868780",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-510868780",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 510868780,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDg2ODc4MA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-12T12:31:12Z",
          "updated_at": "2019-07-12T12:31:12Z",
          "author_association": "MEMBER",
          "body": "@atombrella Thanks! `ExclusionConstraint` looks perfect for me :rocket: ! I'm not sure if we need this check at all:\r\n```python\r\nif self.condition is None:\r\n    return None\r\n```\r\nbecause condition cannot be `None` at this stage :thinking: \r\n\r\nI will start from encapsulating `RangeOperators` part that can/should be merged in advance.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/510868780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/510880858",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-510880858",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 510880858,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDg4MDg1OA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-12T13:11:29Z",
          "updated_at": "2019-07-12T13:11:29Z",
          "author_association": "MEMBER",
          "body": "I simplified `DateTimeRangeContains` to prepare it for using `RangeOperators`, #11562.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/510880858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/510980976",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-510980976",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 510980976,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDk4MDk3Ng==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-12T18:08:56Z",
          "updated_at": "2019-07-12T18:08:56Z",
          "author_association": "MEMBER",
          "body": "I noticed that we could do the same with `RangeContainedBy`, #11563.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/510980976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511123244",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511123244",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511123244,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTEyMzI0NA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-13T13:44:34Z",
          "updated_at": "2019-07-13T13:44:34Z",
          "author_association": "MEMBER",
          "body": "@atombrella I've prepared first commit (with `RangeOperators`) :relaxed: .\r\n\r\nQuick comments:\r\n\r\n- We should add test (with `subTest`) to check all operators at least once (I found and fixed a typo in `RangeOperators.CONTAINED_BY`).\r\n\r\n- Do we need `RangeOperators.UNION`, `RangeOperators.INTERSECTION` and `RangeOperators.DIFFERENCE`? I don't think that they are useful for exclusion constraints.\r\n\r\nI'm going to review in details remaining docs and tests in the next week. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511123244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511134449",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511134449",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511134449,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTEzNDQ0OQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-13T16:16:41Z",
          "updated_at": "2019-07-13T16:17:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm Yes, some of those operators may not be relevant. But I don't think it'll hurt to add them. I'll try to think of a way to test them.\r\n\r\nI think @ngnpope gave the documentation a pretty good first review, so I don't think a review of this part will be tricky :) The tests have not yet really been looked at.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511134449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511135862",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511135862",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511135862,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTEzNTg2Mg==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-13T16:35:12Z",
          "updated_at": "2019-07-13T16:35:12Z",
          "author_association": "MEMBER",
          "body": "@atombrella I think that only `RangeOperators.UNION`, `RangeOperators.INTERSECTION` and `RangeOperators.DIFFERENCE` are not useful for exclusion constraints. We should avoid adding unrelated code. Please remove them from this PR, we may decide to add `Union()`, `Intersection()` and `Difference()` functions for ranges in the future, but they aren't in scope of this PR.\r\n\r\nThanks for understanding.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511135862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511223420",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511223420",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511223420,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTIyMzQyMA==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-14T18:05:07Z",
          "updated_at": "2019-07-14T19:48:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm I removed those three operators. The easiest way I could think that fulfills this was using the examples in PostgreSQL documentation and `cursor.execute('select ...')`. Thanks for the help :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511223420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511514421",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511514421",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511514421,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTUxNDQyMQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-15T18:21:45Z",
          "updated_at": "2019-07-15T18:21:45Z",
          "author_association": "MEMBER",
          "body": "@atombrella I made some changes:\r\n- added `create_sql()` and `remove_sql()` to `ExclusionConstraint`,\r\n- changed docs and signature of `RangeBoundary` (I think it is simpler without constants),\r\n- made edits in `docs/ref/contrib/postgres/fields.txt `,\r\n- added `RangeBoundary` to the release notes,\r\n- simplified tests.\r\n\r\nMy plan for tomorrow is to review remaining docs and add tests for exclusion constraints with other operators.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511514421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511522635",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511522635",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511522635,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTUyMjYzNQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-15T18:44:44Z",
          "updated_at": "2019-07-15T18:44:44Z",
          "author_association": "CONTRIBUTOR",
          "body": ":+1: to `RangeBoundary` changes. It reads a lot nicer! I'm not sure why `create_sql` and `remove_sql` are needed, but I'm indifferent about them. I see many good simplifications :) Thanks!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511522635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511714526",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511714526",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511714526,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTcxNDUyNg==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-16T08:14:49Z",
          "updated_at": "2019-07-16T08:14:49Z",
          "author_association": "MEMBER",
          "body": "@atombrella Only commutative operators can be used in exclusion constraints, so I'm going to remove currently unused `LT`, `GT`, `LTE`, and `GTE`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511714526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511727192",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511727192",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511727192,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTcyNzE5Mg==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-16T08:51:29Z",
          "updated_at": "2019-07-16T08:51:29Z",
          "author_association": "MEMBER",
          "body": "@atombrella Without `create_sql()` and `remove_sql()` you will not be able to add/remove constraints, only defining constraints for a new model will work. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511727192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511733252",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511733252",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511733252,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTczMzI1Mg==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-16T09:08:27Z",
          "updated_at": "2019-07-16T09:08:27Z",
          "author_association": "MEMBER",
          "body": "I added test for `ADJACENT_TO` operator and validation for expressions.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511733252/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511750051",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511750051",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511750051,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTc1MDA1MQ==",
          "user": {
            "login": "atombrella",
            "id": 6141390,
            "node_id": "MDQ6VXNlcjYxNDEzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6141390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atombrella",
            "html_url": "https://github.com/atombrella",
            "followers_url": "https://api.github.com/users/atombrella/followers",
            "following_url": "https://api.github.com/users/atombrella/following{/other_user}",
            "gists_url": "https://api.github.com/users/atombrella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atombrella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atombrella/subscriptions",
            "organizations_url": "https://api.github.com/users/atombrella/orgs",
            "repos_url": "https://api.github.com/users/atombrella/repos",
            "events_url": "https://api.github.com/users/atombrella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atombrella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-16T09:56:31Z",
          "updated_at": "2019-07-16T09:56:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm OK. Maybe you should add `Co-Authored-By` in the commit message? You've done a fair bit of the work here. I'm learning and appreciate the help.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511750051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/511775589",
          "html_url": "https://github.com/django/django/pull/10478#issuecomment-511775589",
          "issue_url": "https://api.github.com/repos/django/django/issues/10478",
          "id": 511775589,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTc3NTU4OQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-07-16T11:22:22Z",
          "updated_at": "2019-07-16T11:22:22Z",
          "author_association": "MEMBER",
          "body": "@atombrella You're a :star2: ! I refactored docs and moved exclusion constraints to the main section instead of minor features, It's not minor :rocket: . Now I'm happy :wink: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/511775589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/14625",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/14625/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/14625/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/14625/events",
      "html_url": "https://github.com/django/django/pull/14625",
      "id": 941960634,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3NzU2MzQ4",
      "number": 14625,
      "title": "Fixed #30581 -- Added support for Meta.constraints validation.",
      "user": {
        "login": "Gagaro",
        "id": 3845486,
        "node_id": "MDQ6VXNlcjM4NDU0ODY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Gagaro",
        "html_url": "https://github.com/Gagaro",
        "followers_url": "https://api.github.com/users/Gagaro/followers",
        "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
        "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
        "organizations_url": "https://api.github.com/users/Gagaro/orgs",
        "repos_url": "https://api.github.com/users/Gagaro/repos",
        "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Gagaro/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 52,
      "created_at": "2021-07-12T11:26:33Z",
      "updated_at": "2022-08-17T07:59:33Z",
      "closed_at": "2022-05-10T10:42:18Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/14625",
        "html_url": "https://github.com/django/django/pull/14625",
        "diff_url": "https://github.com/django/django/pull/14625.diff",
        "patch_url": "https://github.com/django/django/pull/14625.patch",
        "merged_at": "2022-05-10T10:42:18Z"
      },
      "body": "https://code.djangoproject.com/ticket/30581\r\n\r\nStill needed:\r\n\r\n- [x] Update `Model.full_clean` to take advantage of this new `Constraint.validate`\r\n- [x] Documentation\r\n- [x] More tests (`Additional tests around exclude usage would also be appreciated.`)\r\n\r\nAbout `Model.full_clean`, as it have a parameter `validate_unique`, should we still have a special case for `UniqueConstraint`, excluding them from `Model.full_clean` to only have them checked in `Model.validate_unique`?",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/14625/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/14625/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/878295901",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-878295901",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 878295901,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODI5NTkwMQ==",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-12T13:50:03Z",
          "updated_at": "2021-07-12T13:50:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "Should the Q.check method be part of the public API (and thus documented)?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/878295901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/892352749",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-892352749",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 892352749,
          "node_id": "IC_kwDOAD-Lgs41MDjt",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-04T04:25:46Z",
          "updated_at": "2021-08-04T04:25:46Z",
          "author_association": "MEMBER",
          "body": "@Gagaro sorry for the late reply. I think we should focus on the constraint validation work here and defer the decision of making this method public and documented.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/892352749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/895248073",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-895248073",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 895248073,
          "node_id": "IC_kwDOAD-Lgs41XGbJ",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-09T14:00:53Z",
          "updated_at": "2021-08-09T14:00:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the review.\r\n\r\nAbout `Model.full_clean`, where should the `UniqueConstraints` be validated?\r\n\r\nRight now they are in `validate_unique`. Should we let them here (and use the new `BaseConstraint.validate` instead of what is currently done, including the `UniqueConstraints` with conditions) and remove them from the new `validate_constraints` as a special case, or remove them from `validate_unique` and check them with the others constraints?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/895248073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/897275721",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-897275721",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 897275721,
          "node_id": "IC_kwDOAD-Lgs41e1dJ",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-12T01:27:28Z",
          "updated_at": "2021-08-12T01:27:28Z",
          "author_association": "MEMBER",
          "body": "I think that moving all constraint validation to a dedicated `validate_constraint` method, meaning removing constraint handling logic from `Model._get_unique_checks`, would make the most sense here.\r\n\r\nIdeally `UniqueConstraint` validation error message would still make use of `Model.unique_error_message` if it's not conditional. I think that'll be necessary in order to have existing regression tests passing.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/897275721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/899643330",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-899643330",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 899643330,
          "node_id": "IC_kwDOAD-Lgs41n3fC",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-16T16:23:10Z",
          "updated_at": "2021-08-16T16:23:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "I added the validate_constraints to `Model.full_clean` and added more tests for `exclude` (which allowed me to find some bugs I fixed).\r\n\r\nThere is something that is not exactly done the same way with `UniqueConstraint`, I don't have the actual model class to pass to `unique_error_message` in [validate](https://github.com/Gagaro/django/blob/ticket-30581/django/db/models/constraints.py#L326).\r\n\r\nShould we add a special case for `UniqueConstraint` and pass the model class to `UniqueConstraints.validate` [here](https://github.com/Gagaro/django/blob/ticket-30581/django/db/models/base.py#L1209-L1212)? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/899643330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/899650568",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-899650568",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 899650568,
          "node_id": "IC_kwDOAD-Lgs41n5QI",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-16T16:34:03Z",
          "updated_at": "2021-08-16T16:34:03Z",
          "author_association": "MEMBER",
          "body": "Can't the model class be inferred from `instance`?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/899650568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/903871894",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-903871894",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 903871894,
          "node_id": "IC_kwDOAD-Lgs413_2W",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-23T15:23:10Z",
          "updated_at": "2021-08-23T15:23:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yes but it duplicates the code to do it. I added `Model.get_constraints` to avoid that but it is still called at least twice.\r\n\r\nMaybe it should be a `cached_property`?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/903871894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/933578539",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-933578539",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 933578539,
          "node_id": "IC_kwDOAD-Lgs43pUcr",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-10-04T15:07:40Z",
          "updated_at": "2021-10-04T15:07:40Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi, I tried to add documentation but I wasn't sure how to format or add the new information. It's a first step for it at least :smiley: .",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/933578539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/947450971",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-947450971",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 947450971,
          "node_id": "IC_kwDOAD-Lgs44ePRb",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-10-20T08:38:04Z",
          "updated_at": "2021-10-20T08:38:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "I don't know why but a table is missing in MySQL?\r\n\r\n`MySQLdb._exceptions.ProgrammingError: (1146, \"Table 'test_django_39_pull-requests-bionic.validation_uniqueconstraintconditionproduct' doesn't exist\")`",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/947450971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/993787307",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-993787307",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 993787307,
          "node_id": "IC_kwDOAD-Lgs47O_2r",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-12-14T17:02:20Z",
          "updated_at": "2021-12-14T17:02:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "Finally had the time to look at the MySQL issue. It was because a model was excluded (`required_db_features = {'supports_partial_indexes'}`) but the tests were not skipped.\r\n\r\nI also squashed all the commits to ease the rebase.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/993787307/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1004779181",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1004779181",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1004779181,
          "node_id": "IC_kwDOAD-Lgs4747at",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-04T12:45:59Z",
          "updated_at": "2022-01-04T12:45:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @charettes , what are the next steps for this PR?\r\n\r\nAre there enough tests / documentation?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1004779181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1015461602",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1015461602",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1015461602,
          "node_id": "IC_kwDOAD-Lgs48hrbi",
          "user": {
            "login": "kezabelle",
            "id": 118377,
            "node_id": "MDQ6VXNlcjExODM3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kezabelle",
            "html_url": "https://github.com/kezabelle",
            "followers_url": "https://api.github.com/users/kezabelle/followers",
            "following_url": "https://api.github.com/users/kezabelle/following{/other_user}",
            "gists_url": "https://api.github.com/users/kezabelle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kezabelle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kezabelle/subscriptions",
            "organizations_url": "https://api.github.com/users/kezabelle/orgs",
            "repos_url": "https://api.github.com/users/kezabelle/repos",
            "events_url": "https://api.github.com/users/kezabelle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kezabelle/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-18T14:24:15Z",
          "updated_at": "2022-01-18T14:24:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "So, my familiarity with this bit of the ORM is ... less than stellar; as such take my comments with a grain of salt.\r\n\r\nThe only thing that I am really scratching my head (so far) about when _scanning_ the diff, is the following conditions split across a  few places:\r\n```\r\nif exclude and field.name in exclude:\r\n    continue\r\n[...]\r\nif isinstance(expr, F) and expr.name in exclude:\r\n    return\r\n[...]\r\nif exclude and expression.name in exclude:\r\n    return\r\n```\r\n\r\nEvidence would suggest from the various tests passing that these are each individually and collectively correct, but I cannot tell _why_ it sometimes returns early and sometimes continues iterating for what look to be basically 'the same' kind of test (If I'm reading it correctly!). \r\nPersonally I'd be inclined to have a comment on the ones which return early explaining why it's fine to stop exhaustively checking entirely at that point; though if it's clear enough to everyone else and I'm just not grokking the whole thing, that's also a fine outcome :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1015461602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1019964095",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1019964095",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1019964095,
          "node_id": "IC_kwDOAD-Lgs48y2q_",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-24T10:49:46Z",
          "updated_at": "2022-01-24T10:49:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yes I see the issue. I'll take a look at it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1019964095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1020074182",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1020074182",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1020074182,
          "node_id": "IC_kwDOAD-Lgs48zRjG",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-24T13:00:16Z",
          "updated_at": "2022-01-24T13:00:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "> The only thing that I am really scratching my head (so far) about when _scanning_ the diff, is the following conditions split across a few places:\r\n> \r\n> ```\r\n> if exclude and field.name in exclude:\r\n>     continue\r\n> [...]\r\n> if isinstance(expr, F) and expr.name in exclude:\r\n>     return\r\n> [...]\r\n> if exclude and expression.name in exclude:\r\n>     return\r\n> ```\r\n\r\nThey are in different `validate()` implementations (`CheckConstraint.validate()`, `UniqueConstraint.validate()`, ...) and in different branches of the same condition. Exclusion is only checked once per `validate()` call if I'm not mistaken:\r\n\r\n```python\r\n if isinstance(expression, F):\r\n    if exclude and expression.name in exclude:\r\n        return\r\n    [...]\r\nelse:\r\n    [...]\r\n    if isinstance(expr, F) and expr.name in exclude:\r\n        return\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1020074182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1020123681",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1020123681",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1020123681,
          "node_id": "IC_kwDOAD-Lgs48zdoh",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-24T13:53:13Z",
          "updated_at": "2022-01-24T13:53:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "I changed the `validate()` signature to have an additional `model` parameter.\r\n\r\nHaving the model attached to the constraint would be more convenient IMO but a refactoring of all the other methods (`create_sql` and so on) should be done at the same time to profit from it. It seems out of the scope of this PR so I preferred the other method.\r\n\r\nI still have the commits split to do.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1020123681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1020429587",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1020429587",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1020429587,
          "node_id": "IC_kwDOAD-Lgs480oUT",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-24T18:50:41Z",
          "updated_at": "2022-01-24T18:50:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have an issue with `OpClass`. `opclasses` in `ExclusionConstraint` was deperecated in favor of the new `OpClass`. However, `OpClass` should only be used during the index creation. But as it is implemented, it is also rendered in the query in `validate`:\r\n\r\n```python\r\nclass OpClass(Func):\r\n    template = '%(expressions)s %(name)s'\r\n\r\n    def __init__(self, expression, name):\r\n        super().__init__(expression, name=name)\r\n```\r\n\r\nSo the following constraints:\r\n\r\n```python\r\nExclusionConstraint(\r\n    name='exclude_overlapping_reservations_custom',\r\n    expressions=[\r\n        (\r\n            OpClass(TsTzRange('start', 'end', RangeBoundary()), 'range_ops'),\r\n            RangeOperators.OVERLAPS\r\n        ),\r\n        (OpClass('room', 'gist_int4_ops'), RangeOperators.EQUAL)\r\n    ]\r\n)\r\n```\r\n\r\nCreate a query like:\r\n\r\n```sql\r\nWHERE (TSTZRANGE(U0.\"start\", U0.\"end\", '[)') range_ops && (TSTZRANGE(2018-06-24 00:00:00, 2018-06-28 00:00:00, '[)') range_ops) AND U0.\"room_id\" gist_int4_ops = (1 gist_int4_ops))\r\n```\r\n\r\nNotice the `range_ops` and `gist_int4_ops` inserted into the query.\r\n\r\nI'm not sure where to fix that:\r\n\r\n* In the validate , by removing the `OpClass` from the expressions?\r\n* In OpClass directly? But how?\r\n* Also, can we have the issue with `OrderBy` and `Collate` (which are the others two index wrappers)? `Collate` might be important  and I'm not sure it would cause an issue. Is it possible to find an `OrderBy` in constraints?\r\n\r\nThanks for the help.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1020429587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1021849551",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1021849551",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1021849551,
          "node_id": "IC_kwDOAD-Lgs486C_P",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-26T04:24:36Z",
          "updated_at": "2022-01-26T04:33:35Z",
          "author_association": "MEMBER",
          "body": "I think that it should be _ok_ to have `ExclusionConstraint` special case `OpClass` expressions somehow for now? What about making `PostgresOperatorLookup.__init__` strip classes from its provided lhs and rhs? It seems like it would nicely contain this _operator_ logic? Maybe a dedicated `PostgresOperatorLookup.from_constraint(lhs, rhs, operator)` class methdo factory would make sense to avoid the manual `.postgres_operator` assignment we currently do.\r\n\r\n\r\n```python\r\nclass PostgresOperatorLookup(Lookup):\r\n    ...\r\n    @classmethod\r\n    def from_constraint(cls, lhs, rhs, operator):\r\n        args =  [\r\n            expr.get_source_expressions()[0] isinstance(expr, OpClass) else expr\r\n            for expr in (lhs, rhs)\r\n        ]\r\n        instance = cls(*args)\r\n        instance.postgres_operator = operator\r\n        return instance\r\n```\r\n\r\n`Collate` is necessary and must not be replaced. e.g. imagine creating a unique constraint for usernames with a case-insensitive collation, you'd want the user input to be collated using the same rules.\r\n\r\nAs for `OrderBy` I don't think you can create a constraint out of them so I wouldn't worry. Sure you can create an ordered index but it doesn't make sense in the context of a constraint.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1021849551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1022303200",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1022303200",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1022303200,
          "node_id": "IC_kwDOAD-Lgs487xvg",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-26T15:21:47Z",
          "updated_at": "2022-01-26T15:21:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Also I realized that `OpClass` is not in the `__all__` list (https://github.com/django/django/blob/main/django/contrib/postgres/indexes.py#L5-L8), this should probably be addressed in a new ticket?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1022303200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1025904419",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1025904419",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1025904419,
          "node_id": "IC_kwDOAD-Lgs49Jg8j",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-01-31T15:34:37Z",
          "updated_at": "2022-01-31T15:34:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "I moved the logic from `PostgresOperatorLookup` to `ExclusionConstraint` and split the commit.\r\n\r\nThat made me realize we actually don't have any test for `Q.check`. I'll add some later today or this week.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1025904419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1040070221",
          "html_url": "https://github.com/django/django/pull/14625#issuecomment-1040070221",
          "issue_url": "https://api.github.com/repos/django/django/issues/14625",
          "id": 1040070221,
          "node_id": "IC_kwDOAD-Lgs49_jZN",
          "user": {
            "login": "Gagaro",
            "id": 3845486,
            "node_id": "MDQ6VXNlcjM4NDU0ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3845486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gagaro",
            "html_url": "https://github.com/Gagaro",
            "followers_url": "https://api.github.com/users/Gagaro/followers",
            "following_url": "https://api.github.com/users/Gagaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions",
            "organizations_url": "https://api.github.com/users/Gagaro/orgs",
            "repos_url": "https://api.github.com/users/Gagaro/repos",
            "events_url": "https://api.github.com/users/Gagaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gagaro/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-02-15T09:52:29Z",
          "updated_at": "2022-02-15T09:52:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "Rebase after the black PR done :ok_hand: .",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1040070221/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/16943",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/16943/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/16943/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/16943/events",
      "html_url": "https://github.com/django/django/pull/16943",
      "id": 1741981964,
      "node_id": "PR_kwDOAD-Lgs5SNKsi",
      "number": 16943,
      "title": " Fixed #31262 -- Added support for mappings on model fields and ChoiceField's choices.",
      "user": {
        "login": "ngnpope",
        "id": 2855582,
        "node_id": "MDQ6VXNlcjI4NTU1ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ngnpope",
        "html_url": "https://github.com/ngnpope",
        "followers_url": "https://api.github.com/users/ngnpope/followers",
        "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
        "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
        "organizations_url": "https://api.github.com/users/ngnpope/orgs",
        "repos_url": "https://api.github.com/users/ngnpope/repos",
        "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ngnpope/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 27,
      "created_at": "2023-06-05T15:06:14Z",
      "updated_at": "2023-08-31T11:28:30Z",
      "closed_at": "2023-08-31T01:57:41Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/16943",
        "html_url": "https://github.com/django/django/pull/16943",
        "diff_url": "https://github.com/django/django/pull/16943.diff",
        "patch_url": "https://github.com/django/django/pull/16943.patch",
        "merged_at": "2023-08-31T01:57:41Z"
      },
      "body": "ticket-31262\r\n\r\nSupersedes PR #12449.\r\n\r\nI've updated this with a commit to fix the performance issue raised by @carltongibson based on my comments in the previous PR. I've tested it with the [reproducer](https://github.com/carltongibson/issue31262/) that he provided and it reduces the queries from 41 to 11 as expected:\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| ![Screenshot from 2023-06-05 15-55-17](https://github.com/django/django/assets/2855582/42060dc0-7a88-44ee-b5aa-afc3239c59a2) | ![Screenshot from 2023-06-05 15-54-47](https://github.com/django/django/assets/2855582/2d04cbe0-5057-4244-b4c0-f0edbbb4f717) |\r\n\r\nI've also added a couple of `!fixup` commits to roll into the main commit, one has a few further example tweaks in the documentation and the other handles pushing down the normalization of `ChoicesMeta` subclasses into the new `normalize_field_choices()` helper since the support for passing these direct as `choices` was added recently in a2eaea8f22305b57dff3ab13add2e2887287bb6f.",
      "closed_by": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/16943/reactions",
        "total_count": 5,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 3,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/16943/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1581360813",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1581360813",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1581360813,
          "node_id": "IC_kwDOAD-Lgs5eQaat",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-07T19:05:02Z",
          "updated_at": "2023-06-07T19:05:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @ngnpope, thanks for this work! I'm a little busy this week with some GSoC duties but I'll get to this review either this or next week.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1581360813/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1636301476",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1636301476",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1636301476,
          "node_id": "IC_kwDOAD-Lgs5hh_qk",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-14T19:14:26Z",
          "updated_at": "2023-07-14T19:14:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @ngnpope! I've been on vacation but I'll re-review next week. Thanks!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1636301476/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1644499943",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1644499943",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1644499943,
          "node_id": "IC_kwDOAD-Lgs5iBRPn",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-20T19:42:51Z",
          "updated_at": "2023-07-20T19:42:51Z",
          "author_association": "MEMBER",
          "body": "Hey @nessita. Am just looking into a few more tweaks, so will get back to you on this soon.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1644499943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1649968611",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1649968611",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1649968611,
          "node_id": "IC_kwDOAD-Lgs5iWIXj",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-25T14:36:50Z",
          "updated_at": "2023-07-25T14:36:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Hi @nessita \ud83d\udc4b\ud83c\udffb\r\n> \r\n> So I've updated this to add a bunch of explicit tests for `normalize_field_choices()`. In the process I fixed a few other things which I've detailed below. The whole world of `choices` stuff has grown additional use cases rather organically over the years and hopefully this will ensure that things are more robust and maintainable for the long term.\r\n\r\nGreat news! So just to clarify, is this ready for another review @ngnpope?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1649968611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1650111738",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1650111738",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1650111738,
          "node_id": "IC_kwDOAD-Lgs5iWrT6",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-25T15:58:44Z",
          "updated_at": "2023-07-25T15:58:44Z",
          "author_association": "MEMBER",
          "body": "> ...is this ready for another review...\r\n\r\nYup! Thanks.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1650111738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1653601179",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1653601179",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1653601179,
          "node_id": "IC_kwDOAD-Lgs5ij_Ob",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-27T13:11:37Z",
          "updated_at": "2023-07-27T13:38:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > ...is this ready for another review...\r\n> \r\n> Yup! Thanks.\r\n\r\nI'm working on this review now. Do you think that, given the advanced stage of the review, we could squash the many commits into one at this point?\r\n\r\nEDIT: I just saw your inline comment about this, so ignore this comment please :-)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1653601179/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1654466112",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1654466112",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1654466112,
          "node_id": "IC_kwDOAD-Lgs5inSZA",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-27T19:56:00Z",
          "updated_at": "2023-07-27T19:56:00Z",
          "author_association": "MEMBER",
          "body": "Thanks for the latest round of reviews @nessita. I've added a few fixups (not squashed in yet so you can see) and responses to your comments above.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1654466112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1655590578",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1655590578",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1655590578,
          "node_id": "IC_kwDOAD-Lgs5irk6y",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-28T12:20:07Z",
          "updated_at": "2023-07-28T12:20:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Thanks for the latest round of reviews @nessita. I've added a few fixups (not squashed in yet so you can see) and responses to your comments above.\r\n\r\nExcellent, I will re-review today. I've just landed the PR I mentioned earlier, I can rebase and fix conflicts if you are busy. Let me know!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1655590578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1658648815",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1658648815",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1658648815,
          "node_id": "IC_kwDOAD-Lgs5i3Pjv",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-31T15:51:02Z",
          "updated_at": "2023-07-31T15:51:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @ngnpope, I rebased onto main, fixed conflicts, and made a new commit mimicking the new/extended tests for nested widgets in the test_radioselect file. Please pull before making your changes and a new push! Thanks :-)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1658648815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1658690892",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1658690892",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1658690892,
          "node_id": "IC_kwDOAD-Lgs5i3Z1M",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-31T16:06:34Z",
          "updated_at": "2023-07-31T16:06:34Z",
          "author_association": "MEMBER",
          "body": "Oh no. I rebased too \ud83d\ude02 I'll have a look and attempt to resolve the differences. (Good thing I'm a rebasing guru.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1658690892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1658779076",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1658779076",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1658779076,
          "node_id": "IC_kwDOAD-Lgs5i3vXE",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-31T17:01:38Z",
          "updated_at": "2023-07-31T17:01:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Oh no. I rebased too joy I'll have a look and attempt to resolve the differences. (Good thing I'm a rebasing guru.)\r\n\r\nSorry, I was trying to help!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1658779076/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1659039894",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1659039894",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1659039894,
          "node_id": "IC_kwDOAD-Lgs5i4vCW",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-31T19:52:08Z",
          "updated_at": "2023-07-31T19:52:08Z",
          "author_association": "MEMBER",
          "body": "Thanks @nessita. I've made the following changes:\r\n\r\n- Fixed rebase conflicts :sweat_smile:\r\n- Removed the commits related to different approaches to avoid widget choices renormalisation - we can revisit this in a follow up if we think it something that needs looking into\r\n- Reordered cases in the match statement to move less common cases lower\r\n- Reworked a number of code comments for clarity, added more, rewrapped, etc.\r\n- Renamed `normalize_field_choices()` to `normalize_choices()` as it really normalizes choices for both fields and widgets.\r\n- Updated tests adding a few more assertions around callables/iterators\r\n\r\nI was then doing a little more thinking about the recursive case for normalising which is new. We probably want to limit how much we do that... After all, the nested case strictly speaking is only really designed around `<optgroup>` in HTML which doesn't support nesting of `<optgroup>`. I've added a fixup that guards on `depth < 2`, which solves this.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1659039894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1659044291",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1659044291",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1659044291,
          "node_id": "IC_kwDOAD-Lgs5i4wHD",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-31T19:55:35Z",
          "updated_at": "2023-07-31T19:55:35Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Thanks @nessita. I've made the following changes:\r\n> \r\n>     * Fixed rebase conflicts sweat_smile\r\n> \r\n>     * Removed the commits related to different approaches to avoid widget choices renormalisation - we can revisit this in a follow up if we think it something that needs looking into\r\n> \r\n>     * Reordered cases in the match statement to move less common cases lower\r\n> \r\n>     * Reworked a number of code comments for clarity, added more, rewrapped, etc.\r\n> \r\n>     * Renamed `normalize_field_choices()` to `normalize_choices()` as it really normalizes choices for both fields and widgets.\r\n> \r\n>     * Updated tests adding a few more assertions around callables/iterators\r\n> \r\n> \r\n> I was then doing a little more thinking about the recursive case for normalising which is new. We probably want to limit how much we do that... After all, the nested case strictly speaking is only really designed around `<optgroup>` in HTML which doesn't support nesting of `<optgroup>`. I've added a fixup that guards on `depth < 2`, which solves this.\r\n\r\nSuper, thank you! I'll review tomorrow morning with a clearer head.\r\n\r\nQuestion: would the removal of the \"renomalization\" commits affect the performance as originally discussed? Could you ensure that queries remain at 11 when trying the reproducer from Carlton? :pray: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1659044291/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1659050687",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1659050687",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1659050687,
          "node_id": "IC_kwDOAD-Lgs5i4xq_",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-31T20:00:46Z",
          "updated_at": "2023-07-31T20:05:32Z",
          "author_association": "MEMBER",
          "body": "> Question: would the removal of the \"renomalization\" commits affect the performance as originally discussed? Could you ensure that queries remain at 11 when trying the reproducer from Carlton?\r\n\r\nNope. They were two versions that were each applied and immediately reverted (as four commits). I've confirmed that the current approach (which renormalizes the choices on the widget in select cases) is still performing well with 11 queries for the reproducer as in the screenshot above on the right.\r\n\r\nI should add that I was just attempting to avoid doing unnecessary work, but we're bound by a lot of historic compatibility isseus here - it's not very nice that a field and its widget don't share the choices but keep copying them back and forth as required. And hacks like `RelatedFieldWidgetWrapper` really don't help make that any easier \ud83d\ude48 \r\n\r\nAt least this is a massive step toward consistent handling of this stuff, especially around all the weird stuff that's not explicitly or loosely documented with `ModelChoiceIterator`, callables, generators, etc. many of which are used internally to support other features.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1659050687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1662871750",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1662871750",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1662871750,
          "node_id": "IC_kwDOAD-Lgs5jHWjG",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-02T19:41:51Z",
          "updated_at": "2023-08-02T19:42:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > Question: would the removal of the \"renomalization\" commits affect the performance as originally discussed? Could you ensure that queries remain at 11 when trying the reproducer from Carlton?\r\n> \r\n> Nope. They were two versions that were each applied and immediately reverted (as four commits). I've confirmed that the current approach (which renormalizes the choices on the widget in select cases) is still performing well with 11 queries for the reproducer as in the screenshot above on the right.\r\n\r\nExcellent.\r\n\r\n> I should add that I was just attempting to avoid doing unnecessary work, but we're bound by a lot of historic compatibility isseus here - it's not very nice that a field and its widget don't share the choices but keep copying them back and forth as required. And hacks like `RelatedFieldWidgetWrapper` really don't help make that any easier see_no_evil\r\n\r\nUnderstood.\r\n \r\n> At least this is a massive step toward consistent handling of this stuff, especially around all the weird stuff that's not explicitly or loosely documented with `ModelChoiceIterator`, callables, generators, etc. many of which are used internally to support other features.\r\n\r\nI absolutely agree. And I think it would be amazing if we can have this work landed before the feature freeze, so except security issues and releases, this is one of my top priorities to push forward.\r\n\r\nHaving said that, and while I'm very happy with the current state of `normalize_choices` and its tests, I do wonder if we could/should hide the `depth` param. My rationale is that `depth` carries a state(ish) that is internal/private to the normalizer and (IMHO) should not be leaked to the public API not used by any caller.\r\n\r\nSo I was wondering, what would you think about including the following proposal?\r\n\r\n```diff\r\ndiff --git a/django/utils/choices.py b/django/utils/choices.py\r\nindex 94c255c3e7..8addcb6219 100644\r\n--- a/django/utils/choices.py\r\n+++ b/django/utils/choices.py\r\n@@ -18,8 +18,7 @@ class CallableChoiceIterator(ChoiceIterator):\r\n         yield from normalize_choices(self.choices_func())\r\n \r\n \r\n-def normalize_choices(value, *, depth=0):\r\n-    \"\"\"Normalizes choices values consistently for fields and widgets.\"\"\"\r\n+def _normalize_choices(value, depth):\r\n \r\n     match value:\r\n         case ChoiceIterator() | Promise() | bytes() | str():\r\n@@ -54,10 +53,15 @@ def normalize_choices(value, *, depth=0):\r\n \r\n     try:\r\n         # Recursive call to convert any nested values to a list of 2-tuples.\r\n-        return [(k, normalize_choices(v, depth=depth + 1)) for k, v in value]\r\n+        return [(k, _normalize_choices(v, depth=depth + 1)) for k, v in value]\r\n     except (ValueError, TypeError):\r\n         # Return original value for the system check to raise if it has items\r\n         # that are not iterable or not 2-tuples:\r\n         # - TypeError: cannot unpack non-iterable <type> object\r\n         # - ValueError: <not enough / too many> values to unpack\r\n         return value\r\n+\r\n+\r\n+def normalize_choices(value):\r\n+    \"\"\"Normalizes choices values consistently for fields and widgets.\"\"\"\r\n+    return _normalize_choices(value, depth=0)\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1662871750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1663978505",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1663978505",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1663978505,
          "node_id": "IC_kwDOAD-Lgs5jLkwJ",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-03T13:23:30Z",
          "updated_at": "2023-08-03T13:23:30Z",
          "author_association": "MEMBER",
          "body": "> So I was wondering, what would you think about including the following proposal?\r\n\r\nWe could do this, but not sure it's necessary. After all, `normalize_choices()` isn't strictly speaking public. We have intentionally not documented it at this stage, so it's private. We could also change `depth` to `_depth` to avoid the extra function if that's preferred to signify that the depth is private?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1663978505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1664150197",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1664150197",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1664150197,
          "node_id": "IC_kwDOAD-Lgs5jMOq1",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-03T14:59:56Z",
          "updated_at": "2023-08-03T14:59:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "> > So I was wondering, what would you think about including the following proposal?\r\n> \r\n> We could do this, but not sure it's necessary. After all, `normalize_choices()` isn't strictly speaking public. We have intentionally not documented it at this stage, so it's private. We could also change `depth` to `_depth` to avoid the extra function if that's preferred to signify that the depth is private?\r\n\r\nI'll take it! Thanks. I can do this change if you are busy, let me know so we don't overlap when pushing :-)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1664150197/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1669917524",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1669917524",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1669917524,
          "node_id": "IC_kwDOAD-Lgs5jiOtU",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-08T16:14:38Z",
          "updated_at": "2023-08-08T16:14:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I've run out of time to look into a couple of things you raised and won't be able to get back to them for a couple of weeks now.\r\n\r\nIf it's OK with you I'll try to push this forward. If, upon your return, there is something you'd like to see done differently, we could prepare a follow up branch. WDYT?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1669917524/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1669947827",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1669947827",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1669947827,
          "node_id": "IC_kwDOAD-Lgs5jiWGz",
          "user": {
            "login": "ngnpope",
            "id": 2855582,
            "node_id": "MDQ6VXNlcjI4NTU1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2855582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngnpope",
            "html_url": "https://github.com/ngnpope",
            "followers_url": "https://api.github.com/users/ngnpope/followers",
            "following_url": "https://api.github.com/users/ngnpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngnpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngnpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngnpope/subscriptions",
            "organizations_url": "https://api.github.com/users/ngnpope/orgs",
            "repos_url": "https://api.github.com/users/ngnpope/repos",
            "events_url": "https://api.github.com/users/ngnpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngnpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-08T16:31:28Z",
          "updated_at": "2023-08-08T16:31:28Z",
          "author_association": "MEMBER",
          "body": "> If it's OK with you I'll try to push this forward. If, upon your return, there is something you'd like to see done differently, we could prepare a follow up branch. WDYT?\r\n\r\nGo for it!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1669947827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1670138564",
          "html_url": "https://github.com/django/django/pull/16943#issuecomment-1670138564",
          "issue_url": "https://api.github.com/repos/django/django/issues/16943",
          "id": 1670138564,
          "node_id": "IC_kwDOAD-Lgs5jjErE",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-08T19:00:29Z",
          "updated_at": "2023-08-08T19:00:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have rebased fixing conflicts and suggested yet a minor rewording of the release notes. @smithdc1 would you fancy taking a look at that (the promotion to the What's New section)?\r\n\r\nOn the other hand, I want to look at this branch with a different mindset. I have just noticed that this work allows for passing a callable to model field's choices, which would solve [ticket #24561](https://code.djangoproject.com/ticket/24561) (but a duplicate of that ticket has some notes that I want to re-read and analyze before merging this branch).\r\n\r\nAnd, if we indeed fixed that ticket, we should mention that in the added release notes and link to it and etc.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1670138564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/5600",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/5600/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/5600/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/5600/events",
      "html_url": "https://github.com/django/django/pull/5600",
      "id": 115674482,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NTAwMzg4Mjc=",
      "number": 5600,
      "title": "Refs #16859 -- Allowed storing CSRF tokens in sessions.",
      "user": {
        "login": "raphaelm",
        "id": 64280,
        "node_id": "MDQ6VXNlcjY0Mjgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raphaelm",
        "html_url": "https://github.com/raphaelm",
        "followers_url": "https://api.github.com/users/raphaelm/followers",
        "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
        "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
        "organizations_url": "https://api.github.com/users/raphaelm/orgs",
        "repos_url": "https://api.github.com/users/raphaelm/repos",
        "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/raphaelm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 64,
      "created_at": "2015-11-07T16:03:37Z",
      "updated_at": "2016-12-16T20:22:59Z",
      "closed_at": "2016-11-30T14:01:40Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/5600",
        "html_url": "https://github.com/django/django/pull/5600",
        "diff_url": "https://github.com/django/django/pull/5600.diff",
        "patch_url": "https://github.com/django/django/pull/5600.patch",
        "merged_at": null
      },
      "body": "I'd love to have some review on this, but I'm fine with postponing the merge after Shai landed his changes to CSRF handling, as those two _will_ get merge conflicts.\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/5600/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/5600/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/154743578",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-154743578",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 154743578,
          "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc0MzU3OA==",
          "user": {
            "login": "collinanderson",
            "id": 129234,
            "node_id": "MDQ6VXNlcjEyOTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collinanderson",
            "html_url": "https://github.com/collinanderson",
            "followers_url": "https://api.github.com/users/collinanderson/followers",
            "following_url": "https://api.github.com/users/collinanderson/following{/other_user}",
            "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions",
            "organizations_url": "https://api.github.com/users/collinanderson/orgs",
            "repos_url": "https://api.github.com/users/collinanderson/repos",
            "events_url": "https://api.github.com/users/collinanderson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collinanderson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-11-07T20:02:39Z",
          "updated_at": "2015-11-07T20:02:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "Is this the change that doesn't really provide any extra security but just makes the auditors happy?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/154743578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/154797097",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-154797097",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 154797097,
          "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc5NzA5Nw==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-11-08T10:08:19Z",
          "updated_at": "2015-11-08T10:08:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "@collinanderson In part, yes. \n\nThe suggested change in @apollo13's talk was to sign the CSRF token and this it not what this is doing. However, both putting the token into the session or padding it like @shaib is proposing in #5605 achieves the same goal of auditor happiness.\n\nStoring the CSRF into a session does not add much new security, that is absolutely correct. It more or less only saves you a cookie that has to be transmitted at every HTTP request and saves you a header line in every response.\n\nIn theory, when the token is stored in a session, the checks on the `Referer` header **should** be no longer necessary (see the long comment [here](https://github.com/django/django/blob/master/django/middleware/csrf.py#L137)), so you could deal better with users not sending Referer headers. However, before we skip this check in this case, we'd like some more experienced security experts to comment on this, otherwise we'll keep it in, better safe than sorry.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/154797097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/155253922",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-155253922",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 155253922,
          "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTI1MzkyMg==",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-11-10T01:29:54Z",
          "updated_at": "2015-11-10T01:29:54Z",
          "author_association": "MEMBER",
          "body": "@collinanderson While, as @raphaelm says, this is not what @apollo13 suggested for making auditors happy, it is actually a significantly more valuable contribution in that regard. Keeping CSRF tokens in the session is what most other frameworks do, and so it is what auditors expect; in my experience, almost every security audit of a Django-based site first produces a false positive over Django's unusual CSRF scheme.\n\n@raphaelm no, #5605 is not about auditor happiness but about defending against BREACH.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/155253922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/155360720",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-155360720",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 155360720,
          "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTM2MDcyMA==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-11-10T08:52:28Z",
          "updated_at": "2015-11-10T08:52:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "@shaib I'm absolutely aware that the _intention_ of your patch is fixing BREACH, but it also might _help_ at making auditors happy as a side effect.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/155360720/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/156249194",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-156249194",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 156249194,
          "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjI0OTE5NA==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2015-11-12T21:59:27Z",
          "updated_at": "2015-11-12T21:59:27Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes @carljm @shaib I added an extra CSRF_SESSION_KEY setting, reworked the referer checking and fixed the minor documentation issues. \n\nI have not yet changed the documentation on AJAX requests or the default project template, as I'm not yet sure whether providing an cookie additionally or suggesting a hidden form field is nicer. \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/156249194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/229146730",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-229146730",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 229146730,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE0NjczMA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-28T18:53:27Z",
          "updated_at": "2016-06-28T18:53:27Z",
          "author_association": "MEMBER",
          "body": "@raphaelm, would you like to return to this soon now that #5605 is merged?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/229146730/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/229154239",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-229154239",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 229154239,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE1NDIzOQ==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-28T19:21:06Z",
          "updated_at": "2016-06-28T19:21:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yes, I'd be interested in looking into this again! I hope I find time to continue working on it soon.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/229154239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/229716656",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-229716656",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 229716656,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTcxNjY1Ng==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-30T16:43:07Z",
          "updated_at": "2016-06-30T16:43:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "I just pushed a very basic rebase against current master that makes all existing tests pass. I'll try to give this some more love in the coming days and think about whether new tests or new code paths are necessary.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/229716656/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/229733703",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-229733703",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 229733703,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTczMzcwMw==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-30T17:40:47Z",
          "updated_at": "2016-06-30T17:40:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Okay, I believe the only thing left to do here is add documentation on the AJAX thing. @shaib do you agree or do you see the need for additional tests due to your changes?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/229733703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/229767857",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-229767857",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 229767857,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTc2Nzg1Nw==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-30T19:46:20Z",
          "updated_at": "2016-06-30T19:46:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @auvipy, I fixed the version numbers and also added a note to the release notes.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/229767857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/229771095",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-229771095",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 229771095,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTc3MTA5NQ==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-30T19:59:30Z",
          "updated_at": "2016-06-30T19:59:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "I also added some more AJAX documentation, although I'm unsure about the best JS code to recommend.\n\n**Option 1**\n\n```\n{% csrf_token %}\n<script type=\"text/javascript\">\n// using jQuery\nvar csrftoken = jQuery(\"[name=csrfmiddlewaretoken]\").val();\n</script>\n```\n\nPro: Works the same if the JavaScript part is in an external file instead of inside the template.\n\n**Option 2**\n\n```\n{% csrf_token %}\n<script type=\"text/javascript\">\n// using jQuery\nvar csrftoken = jQuery('{% csrf_token %}').val();\n</script>\n```\n\nPro: Doesn't pollute the DOM\nCon: Script needs to be inside a rendered template (and thus doesn't work with Content Security Policy headers)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/229771095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230177387",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230177387",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230177387,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE3NzM4Nw==",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-03T21:47:46Z",
          "updated_at": "2016-07-03T21:47:46Z",
          "author_association": "MEMBER",
          "body": "@raphaelm with regard to testing, if it's not too much work, I think there's gain in restructuring the tests as two test classes: The given one, and one which inherits it, and changes the settings to use sessions in its setUpClass and turns them back to cookie in its tearDownClass. Then, by default, you test everything both ways, and you take care of the differences explicitly; whereas now, you're just assuming that what you didn't test specifically with sessions \"should work the same as with cookies\".\n\n(this is just a suggestion, I don't think it should be a condition for accepting this change)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230177387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230177889",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230177889",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230177889,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE3Nzg4OQ==",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-03T21:58:02Z",
          "updated_at": "2016-07-03T21:58:02Z",
          "author_association": "MEMBER",
          "body": "With respect to your JS: One con of option 1is that it breaks if there's more than one form on the page, I think.\n\nEither of these two options seem like a workaround rather than a solution, though. I think it would be much better to add an optional argument to the `csrf_token` tag -- something like `{% csrf_token into_js_var=\"identifier\" %}`. Perhaps there should be options to hang the var on some globally-accessible object so that it can be read from non-templated javascript. \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230177889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230234733",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230234733",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230234733,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDIzNDczMw==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-04T08:30:30Z",
          "updated_at": "2016-07-04T08:30:45Z",
          "author_association": "CONTRIBUTOR",
          "body": "> With respect to your JS: One con of option 1is that it breaks if there's more than one form on the page, I think.\n\nI don't believe it would. It would break only if there is a form field called \"csrftoken\" that isn't a csrf token.\n\n> I think it would be much better to add an optional argument to the csrf_token tag \n\nWhat should the template tag output in that case? Everything using `<script>` variant is still a problem in terms of Content Security Policy.\n\nI'll look into the test structure.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230234733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230242299",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230242299",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230242299,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDI0MjI5OQ==",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-04T09:06:23Z",
          "updated_at": "2016-07-04T09:06:23Z",
          "author_association": "MEMBER",
          "body": "On Monday 04 July 2016 11:31:09 Raphael Michel wrote:\n\n> > With respect to your JS: One con of option 1is that it breaks if there's\n> > more than one form on the page, I think.\n> \n> I don't believe it would. It would break only if there is a form field\n> called \"csrftoken\" that isn't a csrf token.\n\nThe point is that then there would be more than one field named \"csrftoken\" for \nthe selector to match, and you'll get an iterator instead of a single value.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230242299/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230243672",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230243672",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230243672,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDI0MzY3Mg==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-04T09:12:59Z",
          "updated_at": "2016-07-04T09:12:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "> The point is that then there would be more than one field named \"csrftoken\" for\n> the selector to match, and you'll get an iterator instead of a single value.\n\nYou underestimate the sloppiness of JavaScript. jQuery won't care and just take the first one.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230243672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230243776",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230243776",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230243776,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDI0Mzc3Ng==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-04T09:13:25Z",
          "updated_at": "2016-07-04T09:13:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "If we want to be explicit, we can always use `jQuery(\"[name=csrfmiddlewaretoken]\").first().val()`\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230243776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/230457057",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-230457057",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 230457057,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDQ1NzA1Nw==",
          "user": {
            "login": "raphaelm",
            "id": 64280,
            "node_id": "MDQ6VXNlcjY0Mjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelm",
            "html_url": "https://github.com/raphaelm",
            "followers_url": "https://api.github.com/users/raphaelm/followers",
            "following_url": "https://api.github.com/users/raphaelm/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelm/orgs",
            "repos_url": "https://api.github.com/users/raphaelm/repos",
            "events_url": "https://api.github.com/users/raphaelm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-05T11:48:54Z",
          "updated_at": "2016-07-05T11:48:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "@shaib I restructured the tests as you suggested.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/230457057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/233555576",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-233555576",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 233555576,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzU1NTU3Ng==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-19T07:43:00Z",
          "updated_at": "2016-07-19T07:43:00Z",
          "author_association": "MEMBER",
          "body": "Mhm, technically this PR is tying contrib to core -- are we okay with that?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/233555576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/233556797",
          "html_url": "https://github.com/django/django/pull/5600#issuecomment-233556797",
          "issue_url": "https://api.github.com/repos/django/django/issues/5600",
          "id": 233556797,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzU1Njc5Nw==",
          "user": {
            "login": "apollo13",
            "id": 81547,
            "node_id": "MDQ6VXNlcjgxNTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apollo13",
            "html_url": "https://github.com/apollo13",
            "followers_url": "https://api.github.com/users/apollo13/followers",
            "following_url": "https://api.github.com/users/apollo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/apollo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apollo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apollo13/subscriptions",
            "organizations_url": "https://api.github.com/users/apollo13/orgs",
            "repos_url": "https://api.github.com/users/apollo13/repos",
            "events_url": "https://api.github.com/users/apollo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apollo13/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-07-19T07:49:35Z",
          "updated_at": "2016-07-19T07:49:35Z",
          "author_association": "MEMBER",
          "body": "On a quick skim over the code looks good to me. A crazy idea (and sorry for bringing it up so late). What would be the downside of introducing a new CSRF middleware class, which lives in `django.contrib.sessions`, inheriting the builtin one and overriding `_get|_set_token`. This would allow us to keep the code simple in the sense that we do not need `if` statements at runtime and would require no additional setting at all (one would just put the mw into the middleware list)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/233556797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/6478",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/6478/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/6478/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/6478/events",
      "html_url": "https://github.com/django/django/pull/6478",
      "id": 149677804,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjcxMzcyOTA=",
      "number": 6478,
      "title": "Fixed #27149 -- Added Subquery and Exists database expressions.",
      "user": {
        "login": "schinckel",
        "id": 23411,
        "node_id": "MDQ6VXNlcjIzNDEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/schinckel",
        "html_url": "https://github.com/schinckel",
        "followers_url": "https://api.github.com/users/schinckel/followers",
        "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
        "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
        "organizations_url": "https://api.github.com/users/schinckel/orgs",
        "repos_url": "https://api.github.com/users/schinckel/repos",
        "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
        "received_events_url": "https://api.github.com/users/schinckel/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 71,
      "created_at": "2016-04-20T07:00:35Z",
      "updated_at": "2017-05-12T11:39:25Z",
      "closed_at": "2017-01-14T14:38:03Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/6478",
        "html_url": "https://github.com/django/django/pull/6478",
        "diff_url": "https://github.com/django/django/pull/6478.diff",
        "patch_url": "https://github.com/django/django/pull/6478.patch",
        "merged_at": "2017-01-14T14:38:03Z"
      },
      "body": "Sort-of related to:\r\n\r\n  https://code.djangoproject.com/ticket/16603\r\n  https://code.djangoproject.com/ticket/25789\r\n\r\nbut this is dealing with .annotate(), rather than .filter() methods\r\non a queryset.\r\n\r\nhttps://code.djangoproject.com/ticket/27149\r\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/6478/reactions",
        "total_count": 6,
        "+1": 4,
        "-1": 0,
        "laugh": 0,
        "hooray": 1,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/6478/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/212289003",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-212289003",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 212289003,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjI4OTAwMw==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-20T07:02:45Z",
          "updated_at": "2016-04-20T07:02:45Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah provided a heap of guidance on how to make this better than it was, but it seems to be coming along nicely now. Would love to have some others provide further feedback.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/212289003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/213750732",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-213750732",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 213750732,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzc1MDczMg==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-23T14:34:00Z",
          "updated_at": "2016-04-23T14:34:00Z",
          "author_association": "MEMBER",
          "body": "Nice patch Matthew! `EXISTS()` is the last remaining reason I had to use `RawSQL()`.\n\nI was wondering if it had been considered to allow passing a boolean to the `__exists` lookup instead of a queryset. I feel like `Author.objects.filter(books__exists=True)` is more intuitive than `Author.objects.filter(books__exists=Books.objects.all())`.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/213750732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/213857717",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-213857717",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 213857717,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzg1NzcxNw==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-24T00:25:29Z",
          "updated_at": "2016-04-24T00:25:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "I was taking the approach that you might want to filter on filtered queryset. \n\nUsing the True as a shortcut for RelatedModel.objects.all() may be nice though. \n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/213857717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/213872177",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-213872177",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 213872177,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzg3MjE3Nw==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-24T02:47:54Z",
          "updated_at": "2016-04-24T02:47:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "Building on @charettes suggestion, I think maybe there should also be special-cased versions:\n\n```\n>>> Model.objects.filter(related__exists=True)\n>>> Model.objects.filter(related__exists=False)\n```\n\nOr should this collapse to a single case, where you can use `.exclude()` instead?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/213872177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/213894231",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-213894231",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 213894231,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzg5NDIzMQ==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-24T05:52:22Z",
          "updated_at": "2016-04-24T05:52:22Z",
          "author_association": "MEMBER",
          "body": "> Or should this collapse to a single case, where you can use .exclude() instead?\n\nFWIW I really dislike exclude. I think Django could solve a lot of (internal) problems by ditching exclude and implementing everything in terms of filter (not that that can happen now, but no need to continue on that path).\n\nIf you choose to special case True, then do so for False also.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/213894231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/213937056",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-213937056",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 213937056,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzkzNzA1Ng==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-24T11:12:23Z",
          "updated_at": "2016-04-24T11:12:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "So `.exclude()` changes everything, and I'm not totally sure I understand how.\n\nI've managed to implement `.filter(related__exists=<boolean>)`, but none of the `.exclude()` stuff comes close: it appears to be doing an _extra_ subquery.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/213937056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/213946618",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-213946618",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 213946618,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzk0NjYxOA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-24T11:50:23Z",
          "updated_at": "2016-04-24T11:50:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hmm. Looking at the documentation, it may be possible to use the `EXISTS ()` query type automatically on a query when a queryset is provided on `relation__in`. Good idea?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/213946618/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214139802",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214139802",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214139802,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDEzOTgwMg==",
          "user": {
            "login": "akaariai",
            "id": 125285,
            "node_id": "MDQ6VXNlcjEyNTI4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akaariai",
            "html_url": "https://github.com/akaariai",
            "followers_url": "https://api.github.com/users/akaariai/followers",
            "following_url": "https://api.github.com/users/akaariai/following{/other_user}",
            "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions",
            "organizations_url": "https://api.github.com/users/akaariai/orgs",
            "repos_url": "https://api.github.com/users/akaariai/repos",
            "events_url": "https://api.github.com/users/akaariai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akaariai/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-25T05:26:54Z",
          "updated_at": "2016-04-25T05:32:49Z",
          "author_association": "MEMBER",
          "body": "The implementation of .exclude(cond) isn't anything more than .filter(~Q(cond)), and we definitely can't get rid of negated Q() objects.\n\nThere are multiple problems with the way negated filters are implemented currently in Django. I'll got a bit into why we have problems in this comment even if this PR might not be the right forum.\n\nFirst, the definition of a negated query is pretty much this: If obj in qs and obj not in qs.filter(cond), then obj in qs.filter(~Q(cond)).\n\nNow, this is pretty nice definition and we can make it work nicely, except for the case where we are filtering along a join generating multiple entries (aka a multivalued relation). Say, we have a book with three authors, aged 40, 50 and 60. If we do `qs.filter(authors__age__gte=50)`, we generate a query with a _join_ to authors, and filter to a set where the author's age is 50 or more. So, we actually have the _same_ book in the queryset _two times_. To implement the negated query `qs.filter(~Q(authors__age__gte=50))` we can't use a join. If we used a join and just negated the WHERE condition, we would filter out all rows for which the author's age is 50 or more, which leaves us one row for the book, that where the authors age is 40. This breaks the definition of negated querysets.\n\nThe correct way to write both the filter() and negated filter() query is to use a subquery. But, we can't use a subquery for the .filter() case, as `qs.filter(authors__age__gte=50).annotate(avg=Avg('authors__age'))` is defined to calculate the average age of the book's authors for those authors who are older than 50. If we used a subquery in the WHERE condition, we of course can't select the average from the subquery. For this reason, currently `qs.exclude(authors__age__gte=50).annotate(avg=Avg('authors__age'))` doesn't calculate the average over authors whose age is less than 50. We can't use both a subquery for .exclude() and an annotation for the same relation.\n\nExtra fun is generated because `qs.filter(authors__age__gte=50).filter(authors__height__gte=180)` is different from `qs.filter(authors__age__gte=50, authors__height__gte=180)`. The first one finds books where there is at least a single author older than 50 and taller than 180, the second one finds books where there is an author aged more than 50 and (possibly different) author taller than 180. That is, the first query uses a single join, the second one uses two joins. Again, due to implementation difficulties, negated filters do not actually work like this.\n\nSo, the tl;dr version of this is that we do have a problem with negated filters, but there isn't an easy fix in sight.\n\nThe fix might be that we change the definition of filter against a multivalued join to use a subquery (thus breaking .filter().annotate()), or that we change the definition of .filter(~Q(cond)) to not use a subquery (thus breaking the current definition of negated filtering). Both of these will break silently a lot of correctly written projects, so we need something else than just a release note for this. We could also try to fix the code, and I had some PRs a while ago trying to do exactly that, but making sure the code works for complex combinations of negated and non-negated filters over multiple multivalued relations and with annotations over the same relations is extremely hard.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214139802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214146030",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214146030",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214146030,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDE0NjAzMA==",
          "user": {
            "login": "akaariai",
            "id": 125285,
            "node_id": "MDQ6VXNlcjEyNTI4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akaariai",
            "html_url": "https://github.com/akaariai",
            "followers_url": "https://api.github.com/users/akaariai/followers",
            "following_url": "https://api.github.com/users/akaariai/following{/other_user}",
            "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions",
            "organizations_url": "https://api.github.com/users/akaariai/orgs",
            "repos_url": "https://api.github.com/users/akaariai/repos",
            "events_url": "https://api.github.com/users/akaariai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akaariai/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-25T05:43:19Z",
          "updated_at": "2016-04-25T05:45:19Z",
          "author_association": "MEMBER",
          "body": "For the specific problem in this PR with exclude, we should push the joins into the subquery. That is, instead of generating a query like\n\n```\nselect * from authors join friends on authors.id = friends.author1_id\nwhere exists (select 1 from authors where author.id = friends.author2_id)\n```\n\nthe query should be\n\n```\nselect * from authors where exists (\n    select 1 from authors a1\n        join friends on author1_id = a1.id where friends.author2_id = authors.id)\n```\n\nGiven models Book and Chapters(book=ForeignKey(Book)), I'd start with making sure the following queryset works: `Book.objects.annotate(last_chapter=SubQuery(Chapter.objects.filter(book=F('outerq__pk')).order_by('-chapter_no')[:1]))`\n\nBuilding on `F('outerq__')` will make it possible to automatically generate the where conditions like done in this patch. And, having the ability to connect the inner and outer query in arbitrary ways would be a handy feature in itself.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214146030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214267730",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214267730",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214267730,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDI2NzczMA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-25T11:11:50Z",
          "updated_at": "2016-04-25T11:11:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@akaariai Thanks for the input. Lots there: I think I understand some of it.\n\nI assume the last comment is basically stating that we _shouldn't_ push the where automatically into the sub-query? Instead, there should be a pseudo-field called `outerq`? Is this what you mean?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214267730/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214301131",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214301131",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214301131,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDMwMTEzMQ==",
          "user": {
            "login": "akaariai",
            "id": 125285,
            "node_id": "MDQ6VXNlcjEyNTI4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akaariai",
            "html_url": "https://github.com/akaariai",
            "followers_url": "https://api.github.com/users/akaariai/followers",
            "following_url": "https://api.github.com/users/akaariai/following{/other_user}",
            "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions",
            "organizations_url": "https://api.github.com/users/akaariai/orgs",
            "repos_url": "https://api.github.com/users/akaariai/repos",
            "events_url": "https://api.github.com/users/akaariai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akaariai/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-25T12:50:38Z",
          "updated_at": "2016-04-25T12:50:38Z",
          "author_association": "MEMBER",
          "body": "The way negated querysets and multivalued relations work is complicated, unfortunately I don't see any easy way to make it simpler.\n\nWhat I am after for SubQuery and Exists is that if you issue:\n\n```\nBook.objects.annotate(last_chapter=SubQuery(Chapter.objects.filter(book=F('outerq__pk')).order_by('-chapter_no')[:1]))\n```\n\nthen what should happen is that the F('outerq__pk') gets resolved against the outer query (the Book query). So, F('outerq__pk') is replaced by book.id in the generated query. Similarly, if you did:\n\n```\nBook.objects.annotate(last_chapter=SubQuery(Chapter.objects.values('pages').filter(pk=F('outerq__publisher__pk')).order_by('-chapter_no')[:1]))\n```\n\nthen the F('outerq...') would be resolved against the book query, generating a join to the publisher of the book and fetching the pk of the publisher. So, the query would look something like:\n\n```\nselect *, (select pages from chapter u1 where u1.book_id = publisher.pk) as last_chapter from book inner join publisher on publisher.id = book.publisher_id\n```\n\nIf we have that working, we are pretty far in getting all kinds of interesting subqueries implemented. You can then built on this for automatically generating the connecting condition in the subqueries.\n\nDoes this make sense?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214301131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214616864",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214616864",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214616864,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDYxNjg2NA==",
          "user": {
            "login": "akaariai",
            "id": 125285,
            "node_id": "MDQ6VXNlcjEyNTI4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akaariai",
            "html_url": "https://github.com/akaariai",
            "followers_url": "https://api.github.com/users/akaariai/followers",
            "following_url": "https://api.github.com/users/akaariai/following{/other_user}",
            "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions",
            "organizations_url": "https://api.github.com/users/akaariai/orgs",
            "repos_url": "https://api.github.com/users/akaariai/repos",
            "events_url": "https://api.github.com/users/akaariai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akaariai/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-26T05:00:19Z",
          "updated_at": "2016-04-26T05:00:19Z",
          "author_association": "MEMBER",
          "body": "Hmmh, it might be we can't easily implement the F('outerq__') style of connecting subqueries to their parent queries. We'd need to resolve the F('outerq__') lazily as at the point the filter() method is called for the inner query, we don't yet have a reference to the outer query.\n\nAn idea is to add a Query.delayed_expressions list. When the inner query is connected to the outer query, we resolve all the delayed expressions, and similarly to how relabeled_clone is implemented, replace the delayed expression with a resolved expression.\n\nSo, for example, condition `filter(pk=F('outerq__publisher__pk'))` would  resolve to `Equal(Col(innerq.pk), F('outerq__publisher__pk'))`, and delayed_expressions would be `[F('outerq__publisher__pk')]`. When the inner query is connected to the outer query, we resolve delayed expressions, and get a map of `{F('outerq__publisher__pk'): Col('publisher.pk')}`. We replace all keys of the map with the value pointed by the map, very similarly to how relabeled_clone replaces aliases in the query.\n\nThis isn't exactly easy, but I believe it should work reliably.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214616864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214679027",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214679027",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214679027,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDY3OTAyNw==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-26T09:13:11Z",
          "updated_at": "2016-04-26T09:13:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "After starting to use `Exists()` and `SubQuery()` in a real context today, I think I agree. It's going to be much simpler if it's possible to refer to the outer queryset. For instance, I had a queryset that I needed to indicate if this was the first one (ordered according to a timestamp) for a given generically related object. This required a reference to a queryset of the same model, joined by both content-type and object-id.\n\nIn the end, I wound up writing it using `RawSQL`, because it just needed to be done. I'm not convinced it's easy/possible to do it without referring to the outer queryset using an `F(outerq__)`\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214679027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214707840",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214707840",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214707840,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDcwNzg0MA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-26T11:20:56Z",
          "updated_at": "2016-04-26T11:20:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hmm. `resolve_expression` is not provided with the `lookups`, only `value` (and `query`).\n\nThis seems like the reasonable place to resolve the expression to the delayed expression.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214707840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214744825",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214744825",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214744825,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc0NDgyNQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-26T13:28:42Z",
          "updated_at": "2016-04-26T13:28:42Z",
          "author_association": "CONTRIBUTOR",
          "body": "Okay, pretty happy with how this went tonight. I've managed to implement delayed `F()` expressions (although the delayed resolution only occurs in the `SubQuery` and `Exists` expressions at this point: maybe that's the only place it makes sense to though).\n\nIt makes the syntax for using these expressions slightly more cumbersome:\n\n```\nModel.objects.annotate(foo=Exists(Related.objects.filter(inner_field=F('outerq__outer_field'))))\n```\n\nHowever, this explicit nature is better, because it means that you can have an arbitrary relationship to the outer query (and potentially more than one), or indeed no relationship at all.\n\nI needed to not grab a `outer_query.table_alias()`, because for some reason that then caused the outer query's table to drop out of the FROM clause.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214744825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/214745850",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-214745850",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 214745850,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc0NTg1MA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-26T13:32:30Z",
          "updated_at": "2016-04-26T13:32:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "Oh, @akaariai, I didn't use an explicit `delayed_reference` on the query: but rather an implicit agreement that when resolving the subquery, any `where` clauses that contained an `F('outerq__...')` expression would be resolved to referring to the outer query.\n\nThanks for your help.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/214745850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/215083492",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-215083492",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 215083492,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTA4MzQ5Mg==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-27T13:30:57Z",
          "updated_at": "2016-04-27T13:30:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "Apart from the `.exclude()` stuff, it's coming along pretty well. Really not sure how to start on that.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/215083492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/215423595",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-215423595",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 215423595,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTQyMzU5NQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-04-28T13:32:22Z",
          "updated_at": "2016-04-28T13:32:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "Best thing about this: all of this functionality only adds classes, doesn't actually require any changes to any other django code. That's got to be a win.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/215423595/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/216833638",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-216833638",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 216833638,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjgzMzYzOA==",
          "user": {
            "login": "mjtamlyn",
            "id": 389581,
            "node_id": "MDQ6VXNlcjM4OTU4MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/389581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjtamlyn",
            "html_url": "https://github.com/mjtamlyn",
            "followers_url": "https://api.github.com/users/mjtamlyn/followers",
            "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions",
            "organizations_url": "https://api.github.com/users/mjtamlyn/orgs",
            "repos_url": "https://api.github.com/users/mjtamlyn/repos",
            "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjtamlyn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-05-04T11:29:32Z",
          "updated_at": "2016-05-04T11:29:32Z",
          "author_association": "MEMBER",
          "body": "FWIW I've used this today. I managed to get a bit of an odd issue with sql params being a tuple, in most of the expressions it's a list. This may just be a bug in my code for `SearchVectorExact` which blindly adds lhs params and rhs params, but we should be consistent.\n\n@akaariai or @jarshwah - what type should params have?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/216833638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/216838385",
          "html_url": "https://github.com/django/django/pull/6478#issuecomment-216838385",
          "issue_url": "https://api.github.com/repos/django/django/issues/6478",
          "id": 216838385,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjgzODM4NQ==",
          "user": {
            "login": "akaariai",
            "id": 125285,
            "node_id": "MDQ6VXNlcjEyNTI4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akaariai",
            "html_url": "https://github.com/akaariai",
            "followers_url": "https://api.github.com/users/akaariai/followers",
            "following_url": "https://api.github.com/users/akaariai/following{/other_user}",
            "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions",
            "organizations_url": "https://api.github.com/users/akaariai/orgs",
            "repos_url": "https://api.github.com/users/akaariai/repos",
            "events_url": "https://api.github.com/users/akaariai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akaariai/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-05-04T11:53:43Z",
          "updated_at": "2016-05-04T11:53:43Z",
          "author_association": "MEMBER",
          "body": "Lists. We often use all_params.extend(part_params) when combining parts of SQL together.\n\nI'm not sure if we have actually documented this anywhere - if not, we probably should.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/216838385/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18266",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18266/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18266/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18266/events",
      "html_url": "https://github.com/django/django/pull/18266",
      "id": 2346049714,
      "node_id": "PR_kwDOAD-Lgs5yF4vX",
      "number": 18266,
      "title": "Fixed #35521 -- Added possibility to override BoundField at Form level or Field level",
      "user": {
        "login": "christophehenry",
        "id": 22097904,
        "node_id": "MDQ6VXNlcjIyMDk3OTA0",
        "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christophehenry",
        "html_url": "https://github.com/christophehenry",
        "followers_url": "https://api.github.com/users/christophehenry/followers",
        "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
        "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
        "organizations_url": "https://api.github.com/users/christophehenry/orgs",
        "repos_url": "https://api.github.com/users/christophehenry/repos",
        "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christophehenry/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 45,
      "created_at": "2024-06-11T10:28:40Z",
      "updated_at": "2025-01-14T13:36:24Z",
      "closed_at": "2025-01-13T21:37:28Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18266",
        "html_url": "https://github.com/django/django/pull/18266",
        "diff_url": "https://github.com/django/django/pull/18266.diff",
        "patch_url": "https://github.com/django/django/pull/18266.patch",
        "merged_at": null
      },
      "body": "# Trac ticket number\r\n\r\nticket-35521\r\n\r\n# Branch description\r\n\r\nModifies `Form` and `Field` APIs to allow override of `BoundField` class.\r\n\r\n# Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n- [x] I have attached screenshots in both light and dark modes for any UI changes.\r\n",
      "closed_by": {
        "login": "christophehenry",
        "id": 22097904,
        "node_id": "MDQ6VXNlcjIyMDk3OTA0",
        "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christophehenry",
        "html_url": "https://github.com/christophehenry",
        "followers_url": "https://api.github.com/users/christophehenry/followers",
        "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
        "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
        "organizations_url": "https://api.github.com/users/christophehenry/orgs",
        "repos_url": "https://api.github.com/users/christophehenry/repos",
        "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christophehenry/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18266/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18266/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2367397004",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2367397004",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2367397004,
          "node_id": "IC_kwDOAD-Lgs6NG5yM",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-23T07:14:42Z",
          "updated_at": "2024-09-23T07:14:42Z",
          "author_association": "MEMBER",
          "body": "In addition to being able to set the `BoundField` per field and per form, I think we should also allow setting it per project. \r\n\r\nOne way to do this could be to use the same pattern as templates where these defined on `BaseRenderer`. What do you think?\r\n\r\nhttps://github.com/django/django/blob/c2c7dbb2f88ce8f0ef6d48a61b93866c9926349a/django/forms/renderers.py#L19-L22",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2367397004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2367524281",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2367524281",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2367524281,
          "node_id": "IC_kwDOAD-Lgs6NHY25",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-23T08:20:27Z",
          "updated_at": "2024-09-23T08:22:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "@smithdc1 I suggest this stays out of the scope of the PR . But if we want to configure per-project, isn't [`settings.TEMPLATES`](https://docs.djangoproject.com/en/5.1/ref/settings/#std-setting-TEMPLATES) a more suited place to configure that?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2367524281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2367686755",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2367686755",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2367686755,
          "node_id": "IC_kwDOAD-Lgs6NIAhj",
          "user": {
            "login": "smithdc1",
            "id": 39445562,
            "node_id": "MDQ6VXNlcjM5NDQ1NTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39445562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smithdc1",
            "html_url": "https://github.com/smithdc1",
            "followers_url": "https://api.github.com/users/smithdc1/followers",
            "following_url": "https://api.github.com/users/smithdc1/following{/other_user}",
            "gists_url": "https://api.github.com/users/smithdc1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smithdc1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smithdc1/subscriptions",
            "organizations_url": "https://api.github.com/users/smithdc1/orgs",
            "repos_url": "https://api.github.com/users/smithdc1/repos",
            "events_url": "https://api.github.com/users/smithdc1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smithdc1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-23T09:34:01Z",
          "updated_at": "2024-09-23T09:34:01Z",
          "author_association": "MEMBER",
          "body": "> isn't\u00a0settings.TEMPLATES\u00a0a more suited place to configure that?\n\nI think the appropriate setting for this would be [settings.FORM_RENDERER](https://docs.djangoproject.com/en/5.1/ref/settings/#std-setting-FORM_RENDERER) as it's related to form rendering rather than templates more generally. \n\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2367686755/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2413522387",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2413522387",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2413522387,
          "node_id": "IC_kwDOAD-Lgs6P223T",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-15T10:36:05Z",
          "updated_at": "2024-10-15T10:36:05Z",
          "author_association": "MEMBER",
          "body": "Hi @christophehenry \u2014\u00a0Do you have capacity to pick this up? The Django 5.2 feature freeze is in Jan, so whilst there's plenty of time, it would be good to get this over the line sooner rather than later. (Otherwise it does risk not making the cut.) \r\n\r\n(If you adjust the PR title to ref [35521](https://code.djangoproject.com/ticket/35521) Trac will detect it.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2413522387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2413709069",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2413709069",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2413709069,
          "node_id": "IC_kwDOAD-Lgs6P3kcN",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-15T11:55:31Z",
          "updated_at": "2024-10-15T11:55:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have plenty of time to work on this. But is there anything else to do? Looks mergeable, isn't it?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2413709069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2413726725",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2413726725",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2413726725,
          "node_id": "IC_kwDOAD-Lgs6P3owF",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-15T12:04:03Z",
          "updated_at": "2024-10-15T12:04:03Z",
          "author_association": "MEMBER",
          "body": "Well, I can see a few things from the Patch review checklist (like version added annotations, and commit message format, at the least) \u2014\u00a0It's worth trying to address those, otherwise you'll just get a review saying they need to be done/corrected. \n\nhttps://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#patch-review-checklist\n\nBut more, did you address the points from the discussion with @smithdc1 here and on the Forum thread? (He linked a commit there.) Maybe you did, IDK without looking deeper. \n\nThen, change the title to `Fixed #... -- ` (with the `#`) \u2014 so it'll get detected. If you make sure Has Patch is checked on the ticket (and not the other flags, such as Needs Documentation, and so on) then it'll show up in the Fellow's list for review. \n\nThanks for the effort here! \ud83d\udc4d",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2413726725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2413785027",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2413785027",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2413785027,
          "node_id": "IC_kwDOAD-Lgs6P32_D",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-15T12:31:22Z",
          "updated_at": "2024-10-15T12:33:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "- [x] PR renamed to \"*Fixed #35521*\"\r\n- [x] Commit message changed to \"*Fixed #35192 -- Added possibility to override BoundField at Form level or Field level*\"\r\n- [x] Changed `.. versionchanged:: 5.2` label to  `.. versionadded:: 5.2` in documentation\r\n- [x] Has patch added to ticket\r\n\r\nAbout @smithdc1 I think we agreed to open a seperate PR to override `BoundField` at project level to easier merging this one. @smithdc1 am I wrong?\r\n\r\nAm I forgetting something?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2413785027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422637377",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422637377",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422637377,
          "node_id": "IC_kwDOAD-Lgs6QZoNB",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T14:40:33Z",
          "updated_at": "2024-10-18T14:40:33Z",
          "author_association": "MEMBER",
          "body": "@christophehenry I just read your last comment properly. I don't think we can merge this without all three levels, field, form, and form renderer. (We can't really the latter in a **separate** release...)\n\nIf you search out the changes that added `as_field_group()`, it should be a case of mirroring what was done there. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422637377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422785828",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422785828",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422785828,
          "node_id": "IC_kwDOAD-Lgs6QaMck",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T15:57:17Z",
          "updated_at": "2024-10-18T15:57:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "I don't have any objection but I don't think we've come to an agreement about customising `BoundField` project-wise. I fear it may delay this PR.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422785828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422809638",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422809638",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422809638,
          "node_id": "IC_kwDOAD-Lgs6QaSQm",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T16:10:37Z",
          "updated_at": "2024-10-18T16:10:37Z",
          "author_association": "MEMBER",
          "body": "I think the agreement was to add it to the `FORM_RENDERER` as with the other related settings. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422809638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422824257",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422824257",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422824257,
          "node_id": "IC_kwDOAD-Lgs6QaV1B",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T16:19:26Z",
          "updated_at": "2024-10-18T16:19:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "Wait, unless I'm wrong, it's not exactly what @smithdc1's patch is doing. There's currently no integration with settings currently. I can add a commit implementing this, though.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422824257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422838318",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422838318",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422838318,
          "node_id": "IC_kwDOAD-Lgs6QaZQu",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T16:28:05Z",
          "updated_at": "2024-10-18T16:28:05Z",
          "author_association": "MEMBER",
          "body": "See https://github.com/django/django/commit/cad376f844c7bdeeee7607a7c0ea8ae52061309b which was #16666 for ticket-34077. \r\n\r\nIf you look at `BaseRenderer` you'll see the three related attributes there: \r\n\r\nhttps://github.com/django/django/blob/3fad712a91a8a8f6f6f904aff3d895e3b06b24c7/django/forms/renderers.py#L19-L22\r\n\r\nWe need a fourth (`bound_field_class`, perhaps) that will allow setting such project wide, by setting an appropriate subclass to the `FORM_RENDERER` setting. \r\n\r\nMaking parallel changes to those in cad376f844c7bdeeee7607a7c0ea8ae52061309b should be sufficient. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422838318/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422847432",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422847432",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422847432,
          "node_id": "IC_kwDOAD-Lgs6QabfI",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T16:33:55Z",
          "updated_at": "2024-10-18T16:33:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yes, you're right. I don't know I remembered something about adding the class to the `settings.FORM_RENDERER` but it's not a dict like `settings.TEMPLATES` takes. Let me add the commit and then I think we're good. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422847432/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422876889",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422876889",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422876889,
          "node_id": "IC_kwDOAD-Lgs6QairZ",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T16:53:13Z",
          "updated_at": "2024-10-18T16:53:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "@carltongibson Done. I added documentation for `BaseRenderer.bound_field_class` and `BaseRenderer.get_bound_field_class()`. Can you review?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422876889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422883726",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422883726",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422883726,
          "node_id": "IC_kwDOAD-Lgs6QakWO",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T16:57:45Z",
          "updated_at": "2024-10-18T16:57:45Z",
          "author_association": "MEMBER",
          "body": "@christophehenry Great. It's a bit late on a Friday for a fine look, but a quick glance looks on track. (I'll check the ticket flags, but I think they're right, and you should be good for a Fellow review.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422883726/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2422917398",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2422917398",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2422917398,
          "node_id": "IC_kwDOAD-Lgs6QaskW",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-18T17:19:39Z",
          "updated_at": "2024-10-18T17:19:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "Nice! Thank you for your careful review!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2422917398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2423585762",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2423585762",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2423585762,
          "node_id": "IC_kwDOAD-Lgs6QdPvi",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-19T05:49:40Z",
          "updated_at": "2024-10-19T05:49:40Z",
          "author_association": "MEMBER",
          "body": "@christophehenry You'll need to look at the CI failures there. \ud83d\udc40 ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2423585762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2423776182",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2423776182",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2423776182,
          "node_id": "IC_kwDOAD-Lgs6Qd-O2",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-19T11:34:53Z",
          "updated_at": "2024-10-19T11:34:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "@carltongibson @smithdc1 I applied your comments and tests are passing. I'd be happy if you could do another review.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2423776182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2424792008",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2424792008",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2424792008,
          "node_id": "IC_kwDOAD-Lgs6Qh2PI",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-20T09:46:59Z",
          "updated_at": "2024-10-20T09:56:59Z",
          "author_association": "MEMBER",
          "body": "Possibly a good minimal example would be the one of setting some classes on the wrapping div, that up until this has required template changes. This was @matthiask's 90% case from the Forum discussion. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2424792008/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2424866464",
          "html_url": "https://github.com/django/django/pull/18266#issuecomment-2424866464",
          "issue_url": "https://api.github.com/repos/django/django/issues/18266",
          "id": 2424866464,
          "node_id": "IC_kwDOAD-Lgs6QiIag",
          "user": {
            "login": "christophehenry",
            "id": 22097904,
            "node_id": "MDQ6VXNlcjIyMDk3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22097904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophehenry",
            "html_url": "https://github.com/christophehenry",
            "followers_url": "https://api.github.com/users/christophehenry/followers",
            "following_url": "https://api.github.com/users/christophehenry/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophehenry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophehenry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophehenry/subscriptions",
            "organizations_url": "https://api.github.com/users/christophehenry/orgs",
            "repos_url": "https://api.github.com/users/christophehenry/repos",
            "events_url": "https://api.github.com/users/christophehenry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophehenry/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-20T11:33:38Z",
          "updated_at": "2024-10-20T11:33:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "@carltongibson Noted.\n@smithdc1 Please let me know when you had time to review the docs too. So that I can apply all the comments at once. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2424866464/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18408",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18408/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18408/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18408/events",
      "html_url": "https://github.com/django/django/pull/18408",
      "id": 2428378426,
      "node_id": "PR_kwDOAD-Lgs52Yk9o",
      "number": 18408,
      "title": "Fixed #35629 -- Added support for async database connections and cursors.",
      "user": {
        "login": "fcurella",
        "id": 89607,
        "node_id": "MDQ6VXNlcjg5NjA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/89607?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fcurella",
        "html_url": "https://github.com/fcurella",
        "followers_url": "https://api.github.com/users/fcurella/followers",
        "following_url": "https://api.github.com/users/fcurella/following{/other_user}",
        "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions",
        "organizations_url": "https://api.github.com/users/fcurella/orgs",
        "repos_url": "https://api.github.com/users/fcurella/repos",
        "events_url": "https://api.github.com/users/fcurella/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fcurella/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 21,
      "created_at": "2024-07-24T20:04:49Z",
      "updated_at": "2025-06-06T23:30:02Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18408",
        "html_url": "https://github.com/django/django/pull/18408",
        "diff_url": "https://github.com/django/django/pull/18408.diff",
        "patch_url": "https://github.com/django/django/pull/18408.patch",
        "merged_at": null
      },
      "body": "# Trac ticket number\r\n<!-- Replace XXXXX with the corresponding Trac ticket number, or delete the line and write \"N/A\" if this is a trivial PR. -->\r\n\r\nticket-[35629](https://code.djangoproject.com/ticket/35629)\r\n\r\n# Branch description\r\nThis would cover the new new_connection context managers, and provide an async cursor that the user could use.\r\n\r\nThe goal of this first phase is to give users a low-level async cursor that they can use for raw SQL queries\r\n\r\nManual transaction management, such as `acommit` and `arollback` is in scope, but `transaction.atomic` is out of scope and will be addressed in a future Pull Request.\r\n\r\n# Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n- [ ] I have attached screenshots in both light and dark modes for any UI changes.\r\n",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18408/reactions",
        "total_count": 65,
        "+1": 15,
        "-1": 0,
        "laugh": 0,
        "hooray": 36,
        "confused": 0,
        "heart": 8,
        "rocket": 6,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18408/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2414292942",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2414292942",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2414292942,
          "node_id": "IC_kwDOAD-Lgs6P5y_O",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-15T15:23:56Z",
          "updated_at": "2024-10-15T15:23:56Z",
          "author_association": "MEMBER",
          "body": "@fcurella Thanks for pushing this! I'm going to have a potter on it, and I'll see if @felixxm has a cycle too. \r\n\r\nFirst glance it looks very minimal. \ud83d\udc4d",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2414292942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2436832203",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2436832203",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2436832203,
          "node_id": "IC_kwDOAD-Lgs6RPxvL",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-25T04:56:41Z",
          "updated_at": "2024-10-25T04:56:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "Two other things:\r\n\r\n- Going to try my codegen idea based off of this branch\r\n\r\n- Is there a way to do this work in a separate tree I wonder? If we figured out a set of things we could do to make this an external package that does \"some\" monkeypatching, there might be ways to experiment in a way a bit unhindered from the Django flow (since when we start putting things into release notes there's a whole set of risks)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2436832203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2436896431",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2436896431",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2436896431,
          "node_id": "IC_kwDOAD-Lgs6RQBav",
          "user": {
            "login": "pauloxnet",
            "id": 521097,
            "node_id": "MDQ6VXNlcjUyMTA5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/521097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauloxnet",
            "html_url": "https://github.com/pauloxnet",
            "followers_url": "https://api.github.com/users/pauloxnet/followers",
            "following_url": "https://api.github.com/users/pauloxnet/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauloxnet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauloxnet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauloxnet/subscriptions",
            "organizations_url": "https://api.github.com/users/pauloxnet/orgs",
            "repos_url": "https://api.github.com/users/pauloxnet/repos",
            "events_url": "https://api.github.com/users/pauloxnet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauloxnet/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-25T05:47:37Z",
          "updated_at": "2024-10-25T05:47:37Z",
          "author_association": "MEMBER",
          "body": "> - Going to try my codegen idea based off of this branch\n\nWhat's that?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2436896431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2437022624",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2437022624",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2437022624,
          "node_id": "IC_kwDOAD-Lgs6RQgOg",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-25T06:54:04Z",
          "updated_at": "2024-10-25T06:54:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "@fcurella would you be able to allow pull requests off of your repo? I think it would be easier to show my codegen off of that.\r\n\r\nAnyways... I got codegen in principle working in [this commit](https://github.com/rtpg/django/commit/c4ac6ecb434bf6861fdbddf4860a36a0970a8087). The point here is that I can annotate an `async` function, run a `libcst`-based script on it, and it will generate a non-`async` version of that function (tailored to our needs and preserving things like comments).\r\n\r\nEven with just a 180 line script I have comments preservation, `if TYPING`-level functionality, and it's fairly straightforward. Haven't done async generators yet but it should be quite easy.\r\n\r\nAnd the very important thing here: the codegen'd sync versions (so far) _are generating exactly the same code_ that is in the repo already (modulo a decorator). This means that we can introduce async implementations, _write code as if those are the canonical implementations_, but the sync versions are still fast. \r\n\r\nThis was surprisingly easy, will start a discussion over in the forums on this later this week",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2437022624/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2437082224",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2437082224",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2437082224,
          "node_id": "IC_kwDOAD-Lgs6RQuxw",
          "user": {
            "login": "pauloxnet",
            "id": 521097,
            "node_id": "MDQ6VXNlcjUyMTA5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/521097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauloxnet",
            "html_url": "https://github.com/pauloxnet",
            "followers_url": "https://api.github.com/users/pauloxnet/followers",
            "following_url": "https://api.github.com/users/pauloxnet/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauloxnet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauloxnet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauloxnet/subscriptions",
            "organizations_url": "https://api.github.com/users/pauloxnet/orgs",
            "repos_url": "https://api.github.com/users/pauloxnet/repos",
            "events_url": "https://api.github.com/users/pauloxnet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauloxnet/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-10-25T07:24:30Z",
          "updated_at": "2024-10-25T07:24:30Z",
          "author_association": "MEMBER",
          "body": "> ... I got codegen in principle working in [this commit](https://github.com/rtpg/django/commit/c4ac6ecb434bf6861fdbddf4860a36a0970a8087). The point here is that I can annotate an `async` function, run a `libcst`-based script on it, and it will generate a non-`async` version of that function (tailored to our needs and preserving things like comments).\r\n\r\nOk, you're proposing to do something similar to what psycopg 3 already did (see \"[Automatic async to sync code conversion](https://www.psycopg.org/articles/2024/09/23/async-to-sync/)\") but you propose to use [LibCST](https://libcst.readthedocs.io)?\r\n\r\n> ... will start a discussion over in the forums on this later this week\r\n\r\nPlease do it, it will be interesting.\r\n\r\nActually, I was thinking something similar after reading the psycopg's article, but I don't have the time to do it :-(",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2437082224/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2472553325",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2472553325",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2472553325,
          "node_id": "IC_kwDOAD-Lgs6TYCtt",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-13T06:22:18Z",
          "updated_at": "2024-11-13T10:36:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "(EDIT: While reading DEP0009 over again  I realized my issue is its own thing. Please feel free to ignore this comment thread. Main confusion was in how it's actually expected for us to open up many connections. (But I hadn't fully grokked that))\n\n\n-----\nWhile trying to work with this in earnest I came across a pretty awkward failure case.\r\n\r\nI have the following test on a branch where I've implemented `asave` using the new async connection:\r\n\r\n```python\r\nclass AsyncSyncCominglingTest(TransactionTestCase):\r\n\r\n    available_apps = [\"async\"]\r\n\r\n    async def change_model_with_async(self, obj):\r\n        obj.field = 10\r\n        await obj.asave()\r\n\r\n    def test_transaction_async_comingling(self):\r\n        with transaction.atomic():\r\n            s1 = SimpleModel.objects.create(field=0)\r\n            async_to_sync(self.change_model_with_async)(s1)\r\n```\r\n\r\nIn my branch I've implemented `asave` using our async cursors. This hangs!\r\n\r\nWhat ends up happening is that here I have _two active connections_ to my data. one through `connection`, and another through `new_connection`.\r\n\r\nThe following is the SQL log, `76970` is the connection through `connection`, `76972` is the connection through `aconnection`. Short version is that the final insert hangs because `76970` is mid-transasction holding onto a PK on `async_simplemodel`, so when `76972` tries to do an insert (which is, I believe, downstream of Django trying to do an \"upsert\" on the model with the existing pk), it decides it needs to wait on `76970`. But `76972` not finishing its transaction before `76970` finishes is not known to Postgres, so it just hangs!\r\n\r\n```\r\n2024-11-13 14:33:08.518 JST [76970] LOG:  statement: COMMIT\r\n2024-11-13 14:33:08.519 JST [76970] LOG:  duration: 0.486 ms\r\n2024-11-13 14:33:08.761 JST [76970] LOG:  statement: BEGIN\r\n2024-11-13 14:33:08.761 JST [76970] LOG:  duration: 0.040 ms\r\n2024-11-13 14:33:08.761 JST [76970] LOG:  statement: INSERT INTO \"async_simplemodel\" (\"field\", \"created\") VALUES (0, '2024-11-12 23:33:08.761155'::timestamp) RETURNING \"async_simplemodel\".\"id\"\r\n2024-11-13 14:33:08.762 JST [76970] LOG:  duration: 0.624 ms\r\n2024-11-13 14:33:08.764 JST [76972] LOG:  connection received: host=::1 port=63991\r\n2024-11-13 14:33:08.766 JST [76972] LOG:  connection authorized: user=user database=test_django\r\n2024-11-13 14:33:08.771 JST [76972] LOG:  statement: SELECT set_config('TimeZone', 'America/Chicago', false)\r\n2024-11-13 14:33:08.772 JST [76972] LOG:  duration: 1.533 ms\r\n2024-11-13 14:33:08.772 JST [76972] LOG:  statement: UPDATE \"async_simplemodel\" SET \"field\" = 10, \"created\" = '2024-11-12 23:33:08.761155'::timestamp WHERE \"async_simplemodel\".\"id\" = 1\r\n2024-11-13 14:33:08.774 JST [76972] LOG:  duration: 1.144 ms\r\n2024-11-13 14:33:08.774 JST [76972] LOG:  statement: INSERT INTO \"async_simplemodel\" (\"id\", \"field\", \"created\") VALUES (1, 10, '2024-11-12 23:33:08.761155'::timestamp) RETURNING \"async_simplemodel\".\"id\"\r\n```\r\n\r\nThis issue manifested itself for me in trying to run tests in `TestCase`, which opens up (sync) transactions before running any tests. Async tests _kind of_ work, but if there's any conflict then suddenly the async connection is waiting for the sync transaction to finish up before it can move forward, but the sync transaction won't finish, as it's encapsulating the larger test!\r\n\r\n\r\n-----\r\n\r\nI see a couple things that can be done for this problem. I would be interested in if other people have ideas on this though.\r\n\r\n1- A backend is either sync-only or async-only\r\n\r\nWe have an option in the backend, `ASYNC`.\r\n\r\nIf it's `True` then you will do everything through `new_connection`. If I try to do things through `connection`, it, under the hood, uses some `sync_to_async` proxy to the `new_connection` connection. Sync operations all get asyncified. \r\n\r\nIf it's `False`, then you will do everything through `connection`. Async operations all get syncified (so what we currently do). Operations that we try to do through `new_connection` use some class that does `async_to_sync` with the underlying `connection` connection. \r\n\r\nIf you want to do native-sync and native-async on the same database, you will need to declare two backends. \r\n\r\nEnd result of this is that transaction semantics sort of \"just work\". There might be other issues but I think so long as we are indeed using the same connections we'll be looking at less pain.\r\n\r\n\r\n2- Extra transaction-related checks\r\n\r\nThe basic idea: if you have a sync connection to a database, and that connection is within a transaction, you can't get an async cursor. Or more precisely, within:\r\n\r\n```\r\nwith transaction.atomic(using):\r\n    ...\r\n```\r\n\r\nyou shouldn't be able to do \"any\" async operations. The reasoning being that you might have an object that is not committed back yet, and so would not be visible It would be too easy to make weird mistakes, and if you _do_ \"know what you're doing\" you could simply declare a second backend to the same database to do your clever thing and deadlock.\r\n\r\nThere's a bit of trickiness here because in the current PR, if I declare one backend and do some sync ops and async ops, I end up with _two_ connections/`DatabaseWrapper`s. So checking the status of the other connection might be involved.\r\n\r\n3 - statement timeouts on connections during tests?\r\n\r\nThis issue in a production environment would likely trigger a timeout somewhere in the stack. We could set up things like tests to have a default timeout, potentially with some extra code that could try and be a bit verbose about what statement we timed out on or the like. At least then the test error is \"timed out\" instead of just hanging the entire suite indefinitely\r\n\r\n--------\r\n\r\nWriting this out does make me think that perhaps `new_connection` is not the right API here. I do generally feel like, absent anything else, one backend conf should map to \"one\" connection (ignoring the connection pool abstraction for a second). But I don't feel very strongly about this idea. Just hitting a nasty side effect here\r\n\r\nI _do_ think that it's important to figure out some way to prevent the above error, because of how it manifests in hanging tests here, which are very hard to debug just in general (though in this case I at least hit it consistently). And really it would be good if `TestCase` worked with async code, but that's a thing we can resolve in later work.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2472553325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2472716277",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2472716277",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2472716277,
          "node_id": "IC_kwDOAD-Lgs6TYqf1",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-13T07:46:11Z",
          "updated_at": "2024-11-13T10:37:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "OK the thing going on here was much more straightforward: `BaseConnectionHandler` (The handler for `connections`) uses an `asgiref.local.Local` to hold onto its connections. When we go into a task, the context changes (-> we lose access to the cached conection). Within the async context, we end up building a second `connection`.\r\n\r\nSo in my case, I build a connection in the top-level sync context, call `sync_to_async` (going into an async context), and end up building a second connection (Because the top-level sync context's connection is not visible to me).\r\n\r\nMight need to think a bout about how `ConnectionHandler` should work in this world. For `psycopg3`, `AsyncConnection` _is_ thread safe so we _can_ share between threads here (EDIT: but probably still want to open fresh connections!)\r\n\r\nThis is reinforcing my feeling that we should make sync-ness a backend property (rather than a connection property), and in that case `connections` could do the right thing. But I am not sure that is everything.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2472716277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2474040438",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2474040438",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2474040438,
          "node_id": "IC_kwDOAD-Lgs6Tdtx2",
          "user": {
            "login": "fcurella",
            "id": 89607,
            "node_id": "MDQ6VXNlcjg5NjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/89607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcurella",
            "html_url": "https://github.com/fcurella",
            "followers_url": "https://api.github.com/users/fcurella/followers",
            "following_url": "https://api.github.com/users/fcurella/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions",
            "organizations_url": "https://api.github.com/users/fcurella/orgs",
            "repos_url": "https://api.github.com/users/fcurella/repos",
            "events_url": "https://api.github.com/users/fcurella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcurella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-13T16:02:43Z",
          "updated_at": "2024-11-13T16:03:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "The main reason I went for \"hybrid\" backend is that we could run migrations with sync connections, and we won't have to touch the migration framework.\r\n\r\nIf understand correctly the issue: once you're inside an `async_to_sync`, you're in a different thread, and from inside that thread there's no visibility of pre-existing connections created by `ConnectionHandler`\r\n\r\nI see that `ConnectionHandler` [is marked as `thread_critical = True`](https://github.com/django/django/blob/main/django/db/utils.py#L145). This causes the `asgiref.Local` variable holding the connections to be thread_critical as well, which means it will use `threading.local()` as storage, rather than `contextvars.ContextVar`.\r\n\r\nIf we set `ConnectionHandler.thread_critical` to `False`, the async thread can see the connection. But I'm pretty sure that's a bad idea.\r\n\r\nCould we set a contextvar that just says \"there's an active sync connection\" upon sync connection creation, have `new_connection` check for it, and then instruct the user on what to do? (ie: \"Please close your active connection first\")",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2474040438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2475212459",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2475212459",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2475212459,
          "node_id": "IC_kwDOAD-Lgs6TiL6r",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-14T02:06:29Z",
          "updated_at": "2024-11-14T02:21:13Z",
          "author_association": "CONTRIBUTOR",
          "body": "> If understand correctly the issue: once you're inside an async_to_sync, you're in a different thread, and from inside that thread there's no visibility of pre-existing connections created by ConnectionHandler\r\n\r\nRight, though I _believe_ that if you go do `async_to_sync`, then in there go `sync_to_async`, you'll actually recover your sync thread context due to `asgiref.Local`.\r\n\r\nBeyond thread-safety, there's the reality that each connection is its own universe. So if we share a connection between many tasks, it'll be sharing transaction state etc. I think that _sometimes that's what we want_, but... generally that's probably not what we want.\r\n\r\nFor my specific issue the reality was probably just that I should set a statement timeout during tests for deadlocks. In practice I think timeouts would catch these kinds of deadlocks otherwise. Just wish we could get a deadlock error to show up.\r\n\r\n> The main reason I went for \"hybrid\" backend is that we could run migrations with sync connections, and we won't have to touch the migration framework.\r\n\r\nMy idea here was more that a backend would _only_ open `Connection` or `AsyncConnection`, but the sync and async APIs would still work. In practice what it would mean is that sync migrations would be going through `async_to_sync` a bunch if you have `\"ASYNC\": True` set up for your backend. And inversely async code would work like it currently does if you're `\"ASYNC\": False`. But given that multi-connections is what we're expecting to do in general.... I don't believe in this idea as much.\r\n\r\nMaybe it's \"totally fine\" for a sync connection to be open while you're doing async stuff. If the sync connection is inside a transaction it feels very likely that you might mess something up, so that might be an easy restriction to put in place, though.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2475212459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2475230075",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2475230075",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2475230075,
          "node_id": "IC_kwDOAD-Lgs6TiQN7",
          "user": {
            "login": "rtpg",
            "id": 1408472,
            "node_id": "MDQ6VXNlcjE0MDg0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1408472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtpg",
            "html_url": "https://github.com/rtpg",
            "followers_url": "https://api.github.com/users/rtpg/followers",
            "following_url": "https://api.github.com/users/rtpg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtpg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtpg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtpg/subscriptions",
            "organizations_url": "https://api.github.com/users/rtpg/orgs",
            "repos_url": "https://api.github.com/users/rtpg/repos",
            "events_url": "https://api.github.com/users/rtpg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtpg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-14T02:20:06Z",
          "updated_at": "2024-11-23T22:58:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "One gnarly idea I had while sleeping on this idea (at least for postgres): for a given backend, when I open a new connection with `async with new_connection():, I assign it a unique ID (`CUID`).  Then I check for any existing connections higher up the stack in a given context, and I do the following:\r\n\r\n```\r\n# on the new connection\r\nSELECT pg_advisory_lock(CUID);\r\n# on any other existing connections that are currently open within the new connection's context\r\n# (shared so that we don't accidentally linearize all the existing connections)\r\nSELECT pg_advisory_lock_shared(CUID);\r\n```\r\n\r\n^ the point with the above would be to indicate to postgres that the existing connections won't progress until the new connection is completed. So if the new connection ends up trying to access a resource that is dependent on existing connections' transactions or whatnot will properly trigger deadlock detection.\r\n\r\nI don't think we need to deal with this in this PR. Beyond this being PG-only, it's not 100% clear to me that this is right, nor how to implement it cleanly.\r\n\r\n--------\r\n\r\nGenerally I'm just worried about rolling out this API and then realizing that it's super easy to deadlock your system without DBs being able to detect that. Timeouts handle issues in prod _somewhat_ but the timeout message might not be very clear (and how do we distinguish that from \"normal\" timeouts?) \r\n\r\nHanging tests are tough.\r\n\r\n(EDIT: on my branch I ended up, in tests, adding a connection setup signal and just doing `SET statement_timeout to 10000;` there. Good enough to avoid infinite hanging)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2475230075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2781014178",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2781014178",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2781014178,
          "node_id": "IC_kwDOAD-Lgs6lwuii",
          "user": {
            "login": "robd003",
            "id": 571328,
            "node_id": "MDQ6VXNlcjU3MTMyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/571328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robd003",
            "html_url": "https://github.com/robd003",
            "followers_url": "https://api.github.com/users/robd003/followers",
            "following_url": "https://api.github.com/users/robd003/following{/other_user}",
            "gists_url": "https://api.github.com/users/robd003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robd003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robd003/subscriptions",
            "organizations_url": "https://api.github.com/users/robd003/orgs",
            "repos_url": "https://api.github.com/users/robd003/repos",
            "events_url": "https://api.github.com/users/robd003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robd003/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-05T17:46:59Z",
          "updated_at": "2025-04-05T17:46:59Z",
          "author_association": "NONE",
          "body": "Hey guys, just wondering if this could be added to the 5.2 branch in a future release.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2781014178/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2787559436",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2787559436",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2787559436,
          "node_id": "IC_kwDOAD-Lgs6mJsgM",
          "user": {
            "login": "fcurella",
            "id": 89607,
            "node_id": "MDQ6VXNlcjg5NjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/89607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcurella",
            "html_url": "https://github.com/fcurella",
            "followers_url": "https://api.github.com/users/fcurella/followers",
            "following_url": "https://api.github.com/users/fcurella/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions",
            "organizations_url": "https://api.github.com/users/fcurella/orgs",
            "repos_url": "https://api.github.com/users/fcurella/repos",
            "events_url": "https://api.github.com/users/fcurella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcurella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-08T20:15:44Z",
          "updated_at": "2025-04-08T20:15:44Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've fixed an issue with unclosed sessions, and rebased against `main`",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2787559436/reactions",
            "total_count": 5,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 5,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2788666938",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2788666938",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2788666938,
          "node_id": "IC_kwDOAD-Lgs6mN646",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-09T07:44:57Z",
          "updated_at": "2025-04-09T07:44:57Z",
          "author_association": "MEMBER",
          "body": "Thanks @fcurella \ud83c\udf81",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2788666938/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2797220848",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2797220848",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2797220848,
          "node_id": "IC_kwDOAD-Lgs6mujPw",
          "user": {
            "login": "Arfey",
            "id": 10367100,
            "node_id": "MDQ6VXNlcjEwMzY3MTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10367100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arfey",
            "html_url": "https://github.com/Arfey",
            "followers_url": "https://api.github.com/users/Arfey/followers",
            "following_url": "https://api.github.com/users/Arfey/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arfey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arfey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arfey/subscriptions",
            "organizations_url": "https://api.github.com/users/Arfey/orgs",
            "repos_url": "https://api.github.com/users/Arfey/repos",
            "events_url": "https://api.github.com/users/Arfey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arfey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-11T15:22:35Z",
          "updated_at": "2025-04-11T15:22:35Z",
          "author_association": "NONE",
          "body": "@fcurella I'm so excited. Good job \ud83d\udc4f",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2797220848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2798258644",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2798258644",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2798258644,
          "node_id": "IC_kwDOAD-Lgs6mygnU",
          "user": {
            "login": "Arfey",
            "id": 10367100,
            "node_id": "MDQ6VXNlcjEwMzY3MTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10367100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arfey",
            "html_url": "https://github.com/Arfey",
            "followers_url": "https://api.github.com/users/Arfey/followers",
            "following_url": "https://api.github.com/users/Arfey/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arfey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arfey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arfey/subscriptions",
            "organizations_url": "https://api.github.com/users/Arfey/orgs",
            "repos_url": "https://api.github.com/users/Arfey/repos",
            "events_url": "https://api.github.com/users/Arfey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arfey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-12T00:31:44Z",
          "updated_at": "2025-04-12T00:31:44Z",
          "author_association": "NONE",
          "body": "we can use something like this https://github.com/cbornet/blockbuster with tests to be sure that we don't have any blocking operations\r\n\r\nas option",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2798258644/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2821744995",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2821744995",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2821744995,
          "node_id": "IC_kwDOAD-Lgs6oMGlj",
          "user": {
            "login": "Arfey",
            "id": 10367100,
            "node_id": "MDQ6VXNlcjEwMzY3MTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10367100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arfey",
            "html_url": "https://github.com/Arfey",
            "followers_url": "https://api.github.com/users/Arfey/followers",
            "following_url": "https://api.github.com/users/Arfey/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arfey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arfey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arfey/subscriptions",
            "organizations_url": "https://api.github.com/users/Arfey/orgs",
            "repos_url": "https://api.github.com/users/Arfey/repos",
            "events_url": "https://api.github.com/users/Arfey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arfey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-22T15:43:43Z",
          "updated_at": "2025-04-22T15:43:43Z",
          "author_association": "NONE",
          "body": "@fcurella @carltongibson \r\n\r\nHey \ud83d\udc4b\r\n\r\nI\u2019ve prepared a small POC where I tried to separate the database wrappers for the sync and async variants.\r\n\r\nThe idea was to explore an alternative to the current approach, where both sync and async methods are duplicated inside a single class (e.g., using acommit alongside commit). While the current solution works, I feel it makes the code harder to follow. Splitting it into two separate implementations introduces some duplication, but keeps the interface cleaner and easier to understand.\r\n\r\nWhen you have a moment, please take a look and share your thoughts:\r\n\r\n\ud83d\udd17 https://github.com/Arfey/django/pull/1/files\r\n\r\nThanks \ud83d\ude0c\r\n\r\nps: @fcurella [It](https://github.com/Arfey/django/blob/70e40cc15ee9fe2b76ca3bccae089d648ed10713/django/db/backends/base/base.py#L1388-L1390) can be interesting for u \ud83d\ude00\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2821744995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2821788176",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2821788176",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2821788176,
          "node_id": "IC_kwDOAD-Lgs6oMRIQ",
          "user": {
            "login": "fcurella",
            "id": 89607,
            "node_id": "MDQ6VXNlcjg5NjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/89607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcurella",
            "html_url": "https://github.com/fcurella",
            "followers_url": "https://api.github.com/users/fcurella/followers",
            "following_url": "https://api.github.com/users/fcurella/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions",
            "organizations_url": "https://api.github.com/users/fcurella/orgs",
            "repos_url": "https://api.github.com/users/fcurella/repos",
            "events_url": "https://api.github.com/users/fcurella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcurella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-22T15:59:36Z",
          "updated_at": "2025-04-22T15:59:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@Arfey I think more duplication is acceptable IF we write in a such a way that we can use codegen to maintain it. @rtpg can you look at @Arfey 's code and see if codegen could work with that?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2821788176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2821931678",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2821931678",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2821931678,
          "node_id": "IC_kwDOAD-Lgs6oM0Ke",
          "user": {
            "login": "Arfey",
            "id": 10367100,
            "node_id": "MDQ6VXNlcjEwMzY3MTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10367100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arfey",
            "html_url": "https://github.com/Arfey",
            "followers_url": "https://api.github.com/users/Arfey/followers",
            "following_url": "https://api.github.com/users/Arfey/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arfey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arfey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arfey/subscriptions",
            "organizations_url": "https://api.github.com/users/Arfey/orgs",
            "repos_url": "https://api.github.com/users/Arfey/repos",
            "events_url": "https://api.github.com/users/Arfey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arfey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-04-22T16:55:15Z",
          "updated_at": "2025-04-22T16:55:15Z",
          "author_association": "NONE",
          "body": "> @Arfey I think more duplication is acceptable IF we write in a such a way that we can use codegen to maintain it. @rtpg can you look at @Arfey 's code and see if codegen could work with that?\r\n\r\nI've thought about the code generation described in this [article](https://www.psycopg.org/articles/2024/09/23/async-to-sync/), and we already have a [script](https://github.com/psycopg/psycopg/blob/9bde1475f0e77beaf285d72f97c9ead721e8cd94/tools/async_to_sync.py#L144) that will work well for us. It's easy peasy. Just replace async and await with an empty string.\r\n\r\nBut we have some consequences:\r\n\r\n- We need to write async code first and generate sync code from it\r\n- We need to have a mirror implementation for sync and asynchronous versions\r\n\r\nIn our case in sync class we have a lot of code which we need to make migration, introspection and etc, and I've deleted it.\r\n\r\nalso i dont understand how to deal with \"not simple\" async code like [that](https://github.com/Arfey/django/blob/70e40cc15ee9fe2b76ca3bccae089d648ed10713/django/db/backends/base/base.py#L1388-L1390), or async.gather \r\n\r\nThat's why I've decided to prepare a version with full duplication (to avoid changing the existing sync code). As u can see, we don't have a lot of duplication if compared with the current MR.\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2821931678/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2851034901",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2851034901",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2851034901,
          "node_id": "IC_kwDOAD-Lgs6p71cV",
          "user": {
            "login": "fcurella",
            "id": 89607,
            "node_id": "MDQ6VXNlcjg5NjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/89607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcurella",
            "html_url": "https://github.com/fcurella",
            "followers_url": "https://api.github.com/users/fcurella/followers",
            "following_url": "https://api.github.com/users/fcurella/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions",
            "organizations_url": "https://api.github.com/users/fcurella/orgs",
            "repos_url": "https://api.github.com/users/fcurella/repos",
            "events_url": "https://api.github.com/users/fcurella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcurella/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-05-05T13:35:08Z",
          "updated_at": "2025-05-05T13:35:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi @Arfey ,\r\n\r\nI appreciate your review! that's a lot of feedback, so it's going to take me a while to get through it!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2851034901/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2862402555",
          "html_url": "https://github.com/django/django/pull/18408#issuecomment-2862402555",
          "issue_url": "https://api.github.com/repos/django/django/issues/18408",
          "id": 2862402555,
          "node_id": "IC_kwDOAD-Lgs6qnMv7",
          "user": {
            "login": "Arfey",
            "id": 10367100,
            "node_id": "MDQ6VXNlcjEwMzY3MTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10367100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arfey",
            "html_url": "https://github.com/Arfey",
            "followers_url": "https://api.github.com/users/Arfey/followers",
            "following_url": "https://api.github.com/users/Arfey/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arfey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arfey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arfey/subscriptions",
            "organizations_url": "https://api.github.com/users/Arfey/orgs",
            "repos_url": "https://api.github.com/users/Arfey/repos",
            "events_url": "https://api.github.com/users/Arfey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arfey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-05-08T09:34:02Z",
          "updated_at": "2025-05-08T09:34:02Z",
          "author_association": "NONE",
          "body": "I\u2019ve moved the discussion about the explicit database connection to the Django forum to keep the code review thread more focused. \ud83d\ude0a\r\n\r\nHere\u2019s the [link](https://forum.djangoproject.com/t/dep-0009-async-capable-django-discussion-about-connection-for-35629/40824/3) to the forum post.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2862402555/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18361",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18361/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18361/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18361/events",
      "html_url": "https://github.com/django/django/pull/18361",
      "id": 2403319464,
      "node_id": "PR_kwDOAD-Lgs51Gn-S",
      "number": 18361,
      "title": "Fixed #35444 -- Added generic support for Aggregate.order_by",
      "user": {
        "login": "camuthig",
        "id": 5178217,
        "node_id": "MDQ6VXNlcjUxNzgyMTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/camuthig",
        "html_url": "https://github.com/camuthig",
        "followers_url": "https://api.github.com/users/camuthig/followers",
        "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
        "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
        "organizations_url": "https://api.github.com/users/camuthig/orgs",
        "repos_url": "https://api.github.com/users/camuthig/repos",
        "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
        "received_events_url": "https://api.github.com/users/camuthig/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 47,
      "created_at": "2024-07-11T14:22:27Z",
      "updated_at": "2025-03-04T04:33:36Z",
      "closed_at": "2025-03-03T10:37:01Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18361",
        "html_url": "https://github.com/django/django/pull/18361",
        "diff_url": "https://github.com/django/django/pull/18361.diff",
        "patch_url": "https://github.com/django/django/pull/18361.patch",
        "merged_at": "2025-03-03T10:37:01Z"
      },
      "body": "# Trac ticket number\r\n\r\nticket-35444\r\n\r\n# Branch description\r\nThere are three commits to this draft that represent the three phases of the change:\r\n\r\n1. Deprecate the `ordering` argument on the PostgreSQL aggregate functions and replace it with `order_by` to create a consistent naming convention\r\n2. Add generic support for `Aggregate.order_by` and migrate the Postgres-specific `StringAgg` class to the shared `aggregates` module, deprecating the Postgres version.\r\n3. Deprecate the `OrderableAggMixin`\r\n\r\n# Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n",
      "closed_by": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18361/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18361/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2223093129",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2223093129",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2223093129,
          "node_id": "IC_kwDOAD-Lgs6EgbWJ",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-11T14:30:22Z",
          "updated_at": "2024-07-11T14:30:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes I've made some progress on the suggestions. I have the three phases broken out into unique commits and have added some of the documentation and copied the tests from the postgres module into a new class that should run against all of the database backends.\r\n\r\nI ran into two issues in the process that I wanted to get your opinion on.\r\n\r\n1. Python is compiled against Sqlite3 version 3.37.0, which doesn't have support for the order by yet. So the ordering tests aren't running for that. I think I would need to compile Python from source and point it to a specific version of Sqlite3 to get past this, but I'm not sure if you have any thoughts.\r\n2. Sqlite3 doesn't behave well when you combine `distinct` and a delimiter value. It throws an error of `SQLite doesn't support DISTINCT on aggregate functions accepting multiple arguments.` So it treats the delimiter as a second argument. In Sqlite if you don't provide a delimiter it will use a comma as a default. I was trying to build it such that if the user sets the delimiter to a comma and is using Sqlite as a backend, then the delimiter is ignored. However, I could figure out how to make that work. I tried a few things around custom SQL, using a class attribute instead of making it part of `expressions`, etc. but I couldn't quite get it right. If you can see a good way to treat that, I think it would be awesome to make distinct work in Sqlite for at least some scenarios, if not all.\r\n\r\nAs a side note, I named it `StringAgg` because that is what I am used to, and it feels like the more descriptive function name between that a `GROUP_CONCAT`, but I'm open to changing that to whatever you think is best. I guess would could always have an alias class `class GroupConcat(StringAgg): pass` if we really wanted to make it smooth for developers from either environment, but that doesn't seem to pass the smell test on \"one way to do something\"\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2223093129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2227592366",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2227592366",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2227592366,
          "node_id": "IC_kwDOAD-Lgs6Exlyu",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-15T02:01:00Z",
          "updated_at": "2024-07-15T02:01:00Z",
          "author_association": "MEMBER",
          "body": "Hello @camuthig, thanks for spinning this up!\r\n\r\n> Python is compiled against Sqlite3 version 3.37.0, which doesn't have support for the order by yet. So the ordering tests aren't running for that. I think I would need to compile Python from source and point it to a specific version of Sqlite3 to get past this, but I'm not sure if you have any thoughts.\r\n\r\nIt's possible CI might not be be setup here but if you're a *nix setup [you can use `LD_PRELOAD` to point at any SQLite version](https://til.simonwillison.net/sqlite/ld-preload#user-content-building-the-library). You don't have to build from source as [the SQLite project provides pre-built binaries](https://sqlite.org/download.html).\r\n\r\n> Sqlite3 doesn't behave well when you combine distinct and a delimiter value. It throws an error of SQLite doesn't support DISTINCT on aggregate functions accepting multiple arguments. So it treats the delimiter as a second argument. In Sqlite if you don't provide a delimiter it will use a comma as a default. I was trying to build it such that if the user sets the delimiter to a comma and is using Sqlite as a backend, then the delimiter is ignored. However, I could figure out how to make that work. I tried a few things around custom SQL, using a class attribute instead of making it part of expressions, etc. but I couldn't quite get it right. If you can see a good way to treat that, I think it would be awesome to make distinct work in Sqlite for at least some scenarios, if not all.\r\n\r\nWell [that's odd for sure](https://www.sqlite.org/lang_aggfunc.html#group_concat).\r\n\r\n> In any aggregate function that takes a single argument, that argument can be preceded by the keyword DISTINCT. In such cases, duplicate elements are filtered before being passed into the aggregate function. For example, the function \"count(distinct X)\" will return the number of distinct values of column X instead of the total number of non-null values in column X. \r\n\r\nUsually when we run into these edge cases we [add a database feature](https://github.com/django/django/blob/dfd63ff43408e7901cc214b0482a7f844244d439/django/db/backends/base/features.py#L5) (e.g. `supports_aggregate_distinct_multiple_argument`) and use for two purpose.\r\n\r\n1. Adjust `Aggregate.as_sql` to raise an error when `self.distinct and not connection.features.supports_aggregate_distinct_multiple_argument and len(super().get_expressions()) > 1`\r\n2. Add tests for `@skipUnlessDBFeature(\"supports_aggregate_distinct_multiple_argument\")` that cover the backends that support it and `@skipIfDBFeature` that makes sure the proper exception is raised.\r\n\r\n> As a side note, I named it StringAgg because that is what I am used to, and it feels like the more descriptive function name between that a GROUP_CONCAT, but I'm open to changing that to whatever you think is best. \r\n\r\nI think `StringAgg` is fine as that's the name most backends use (Postgres, SQLite, SQLServer)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2227592366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2266365749",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2266365749",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2266365749,
          "node_id": "IC_kwDOAD-Lgs6HFf81",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-03T04:20:50Z",
          "updated_at": "2024-08-03T04:20:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes I think I have updates for all of your comments at this phase. I was able to build a custom python environment with pyenv and brew using guidance [here](https://github.com/pyenv/pyenv/issues/333#issuecomment-234707676) and test the group concat and ordering behaviors with a more recent version of sqlite, so that is cool.\r\n\r\nI know there are some conflicts and I can work on cleaning those up. I'm also not totally sure what is wrong with the docs. I ran the same command on my own machine, and everything seems to build properly.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2266365749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2290447388",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2290447388",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2290447388,
          "node_id": "IC_kwDOAD-Lgs6IhXQc",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-15T02:57:28Z",
          "updated_at": "2024-08-15T02:57:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes I have update the code to hit all of your comments and get the linters passing. I will take a dive into the failing tests shortly. At least some of them appear to be because we have moved the `connection.features.supports_aggregate_filter_clause` into the `AggregateFilter.as_sql` function, but have historically allowed for this check to fail and convert it to a `WHEN` statement. Now, though, when converting to the `WHEN`, we are throwing the `NotSupportedError` again. If you have thoughts on how you would like to see that flow, I'm open to suggestions.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2290447388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2290537221",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2290537221",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2290537221,
          "node_id": "IC_kwDOAD-Lgs6IhtMF",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-15T04:12:33Z",
          "updated_at": "2024-08-15T04:12:33Z",
          "author_association": "MEMBER",
          "body": "> At least some of them appear to be because we have moved the connection.features.supports_aggregate_filter_clause into the AggregateFilter.as_sql function, but have historically allowed for this check to fail and convert it to a WHEN statement. Now, though, when converting to the WHEN, we are throwing the NotSupportedError again. If you have thoughts on how you would like to see that flow, I'm open to suggestions.\r\n\r\nThe following should do\r\n\r\n```diff\r\ndiff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\r\nindex 6cf0bd9a60..d070944039 100644\r\n--- a/django/db/models/aggregates.py\r\n+++ b/django/db/models/aggregates.py\r\n@@ -29,6 +29,10 @@ class AggregateFilter(Func):\r\n     arity = 1\r\n     template = \" FILTER (WHERE %(expressions)s)\"\r\n\r\n+    @property\r\n+    def condition(self):\r\n+        return self.source_expressions[0]\r\n+\r\n     def as_sql(self, compiler, connection, **extra_context):\r\n         if not connection.features.supports_aggregate_filter_clause:\r\n             raise NotSupportedError\r\n@@ -187,7 +191,7 @@ def as_sql(self, compiler, connection, **extra_context):\r\n                 copy = self.copy()\r\n                 copy.filter = None\r\n                 source_expressions = copy.get_source_expressions()\r\n-                condition = When(self.filter, then=source_expressions[0])\r\n+                condition = When(self.filter.condition, then=source_expressions[0])\r\n                 copy.set_source_expressions([Case(condition)] + source_expressions[1:])\r\n                 return copy.as_sql(compiler, connection, **extra_context)\r\n```\r\n\r\nThe problem was that we were building the fallback `When` with the `AggregateFilter` instead of its underlying `condition: Q`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2290537221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2294099770",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2294099770",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2294099770,
          "node_id": "IC_kwDOAD-Lgs6IvS86",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-16T19:37:15Z",
          "updated_at": "2024-08-16T20:56:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes thanks for the recommendation. It works great. \r\n\r\nI spent time digging into the other failures in MySQL and determined that the MySQL implementation of `GROUP_CONCAT` doesn't actually play nicely with any of the other engine implementations. I have some code together that passed the aggregate tests on both MySQL and Postgres locally, but it is certainly messy and probably brittle.\r\n\r\nFirst, it allows for multiple expressions, which we can ignore for now. The bigger issues are that MySQL doesn't support filtering on aggregates and it uses a different format order between the delimiter and ordering.\r\n\r\nSqlite: `GROUP_CONCAT(expression, delimiter ORDER BY order_by)`\r\nMySQL: `GROUP_CONCAT(expressions* ORDER BY order_by SEPARATOR delimiter)`\r\n\r\nSo here, if you want to introduce a delimiter you MUST have a different template, which is solvable. The bigger issue is that the order matters between `ORDER BY` and `SEPARATOR`: `SEPARATOR delimiter ORDER BY order_by` is invalid syntax. This required me to manually build the parameters in `as_sql` and force the order of things to get the parameters into the right order depending on the engine.\r\n\r\nThis was further compounded by the fact MySQL doesn't support aggregate filtering and we are forcing a `CASE` statement. So if you have `filter`, `order_by`, and `delimiter` you need a third ordering of parameters, with the filter parameters coming before even the expressions. \ud83d\ude1e \r\n\r\nDo you think there are some level of feature flags we can throw on MySQL to make this easier? Or maybe allow for engine-specific default separators to be ignored in our queries? I have a commit with some experimentation here: https://github.com/django/django/pull/18361/commits/cbe50126aa80ca8b5d79c48578aca1d29a673288",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2294099770/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2311528958",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2311528958",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2311528958,
          "node_id": "IC_kwDOAD-Lgs6JxyH-",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-27T04:06:59Z",
          "updated_at": "2024-08-27T04:06:59Z",
          "author_association": "MEMBER",
          "body": "> I have a commit with some experimentation here: https://github.com/django/django/commit/cbe50126aa80ca8b5d79c48578aca1d29a673288\r\n\r\nThanks for pushing a commit demonstrating the scope of the problem.\r\n\r\nLooking at it my immediate reaction would be to avoid over complicating `StringAgg.as_sql` and favor encapsulating the logic entirely in `as_mysql` instead. In there you'll know that the `FILTER` clause is not usable and will likely be able to simplify things quite a bit from some local testing locally.\r\n\r\n> Or maybe allow for engine-specific default separators to be ignored in our queries?\r\n\r\nI'm not sure I'm understanding what you mean here.\r\n\r\nNow that the MySQL tests are passing I'll give Oracle a test run as well.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2311528958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2311529068",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2311529068",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2311529068,
          "node_id": "IC_kwDOAD-Lgs6JxyJs",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-27T04:07:06Z",
          "updated_at": "2024-08-27T04:07:06Z",
          "author_association": "MEMBER",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2311529068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2325313973",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2325313973",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2325313973,
          "node_id": "IC_kwDOAD-Lgs6KmXm1",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-02T21:27:14Z",
          "updated_at": "2024-09-02T21:27:14Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes do you have recommendations on how to test the Oracle engine myself? I am having trouble with the Oracle Docker images. Maybe cause I am on a M1 Mac? I'm not sure. It looks like a pretty common errors, so it seems some change I have made at a base level is causing the compiled queries to be incorrect but I can't really tell why without running against the database. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2325313973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2325350263",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2325350263",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2325350263,
          "node_id": "IC_kwDOAD-Lgs6Kmgd3",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-02T22:33:15Z",
          "updated_at": "2024-09-02T22:33:15Z",
          "author_association": "MEMBER",
          "body": "@camuthig I usually try two approaches on my M1\r\n\r\n1. I had success once I ran `brew install colima` and tried again\r\n2. Low-tech approach is to attempt to generate the raw SQL locally and rely on tools such as [dbfiddle](https://dbfiddle.uk/Wh4zpMKJ).\r\n\r\nI really wish CI ran with `--debug-sql` at least so we could peak at the generated SQL\r\n\r\nAny suggestions @felixxm?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2325350263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2325381537",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2325381537",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2325381537,
          "node_id": "IC_kwDOAD-Lgs6KmoGh",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-02T23:33:52Z",
          "updated_at": "2024-09-02T23:40:43Z",
          "author_association": "MEMBER",
          "body": "I managed to get tests running on Oracle here's the non-localized error message\r\n\r\n```\r\n======================================================================\r\nERROR: test_annotate_values_list (aggregation.tests.AggregateTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/django/source/django/db/backends/utils.py\", line 105, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/django/source/django/db/backends/oracle/base.py\", line 577, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\n  File \"/usr/local/lib/python3.10/site-packages/oracledb/cursor.py\", line 710, in execute\r\n    impl.execute(self)\r\n  File \"src/oracledb/impl/thin/cursor.pyx\", line 196, in oracledb.thin_impl.ThinCursorImpl.execute\r\n  File \"src/oracledb/impl/thin/protocol.pyx\", line 440, in oracledb.thin_impl.Protocol._process_single_message\r\n  File \"src/oracledb/impl/thin/protocol.pyx\", line 441, in oracledb.thin_impl.Protocol._process_single_message\r\n  File \"src/oracledb/impl/thin/protocol.pyx\", line 433, in oracledb.thin_impl.Protocol._process_message\r\n  File \"src/oracledb/impl/thin/messages.pyx\", line 74, in oracledb.thin_impl.Message._check_and_raise_exception\r\noracledb.exceptions.DatabaseError: ORA-22848: cannot use NCLOB type as comparison key\r\nHelp: https://docs.oracle.com/error-help/db/ora-22848/\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/django/source/tests/aggregation/tests.py\", line 939, in test_annotate_values_list\r\n    self.assertEqual(list(books), [(self.b1.id, \"159059725\", 34.5)])\r\n  File \"/django/source/django/db/models/query.py\", line 381, in __iter__\r\n    self._fetch_all()\r\n  File \"/django/source/django/db/models/query.py\", line 1909, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/django/source/django/db/models/query.py\", line 229, in __iter__\r\n    return compiler.results_iter(\r\n  File \"/django/source/django/db/models/sql/compiler.py\", line 1536, in results_iter\r\n    results = self.execute_sql(\r\n  File \"/django/source/django/db/models/sql/compiler.py\", line 1585, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/django/source/django/db/backends/utils.py\", line 122, in execute\r\n    return super().execute(sql, params)\r\n  File \"/django/source/django/db/backends/utils.py\", line 79, in execute\r\n    return self._execute_with_wrappers(\r\n  File \"/django/source/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/django/source/django/db/backends/utils.py\", line 100, in _execute\r\n    with self.db.wrap_database_errors:\r\n  File \"/django/source/django/db/utils.py\", line 91, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/django/source/django/db/backends/utils.py\", line 105, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/django/source/django/db/backends/oracle/base.py\", line 577, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\n  File \"/usr/local/lib/python3.10/site-packages/oracledb/cursor.py\", line 710, in execute\r\n    impl.execute(self)\r\n  File \"src/oracledb/impl/thin/cursor.pyx\", line 196, in oracledb.thin_impl.ThinCursorImpl.execute\r\n  File \"src/oracledb/impl/thin/protocol.pyx\", line 440, in oracledb.thin_impl.Protocol._process_single_message\r\n  File \"src/oracledb/impl/thin/protocol.pyx\", line 441, in oracledb.thin_impl.Protocol._process_single_message\r\n  File \"src/oracledb/impl/thin/protocol.pyx\", line 433, in oracledb.thin_impl.Protocol._process_message\r\n  File \"src/oracledb/impl/thin/messages.pyx\", line 74, in oracledb.thin_impl.Message._check_and_raise_exception\r\ndjango.db.utils.DatabaseError: ORA-22848: cannot use NCLOB type as comparison key\r\nHelp: https://docs.oracle.com/error-help/db/ora-22848/\r\n```\r\n\r\nExecuted SQL\r\n\r\n```sql\r\nSELECT \"AGGREGATION_BOOK\".\"ID\" AS \"PK\",\r\n       \"AGGREGATION_BOOK\".\"ISBN\" AS \"ISBN\",\r\n       AVG(\"AGGREGATION_AUTHOR\".\"AGE\") AS \"MEAN_AGE\"\r\nFROM \"AGGREGATION_BOOK\"\r\nLEFT OUTER JOIN \"AGGREGATION_BOOK_AUTHORS\" ON (\"AGGREGATION_BOOK\".\"ID\" = \"AGGREGATION_BOOK_AUTHORS\".\"BOOK_ID\")\r\nLEFT OUTER JOIN \"AGGREGATION_AUTHOR\" ON (\"AGGREGATION_BOOK_AUTHORS\".\"AUTHOR_ID\" = \"AGGREGATION_AUTHOR\".\"ID\")\r\nWHERE \"AGGREGATION_BOOK\".\"ID\" = 1\r\nGROUP BY \"AGGREGATION_BOOK\".\"ID\",\r\n         \"AGGREGATION_BOOK\".\"ISBN\",\r\n         \"AGGREGATION_BOOK\".\"NAME\",\r\n         \"AGGREGATION_BOOK\".\"PAGES\",\r\n         \"AGGREGATION_BOOK\".\"RATING\",\r\n         \"AGGREGATION_BOOK\".\"PRICE\",\r\n         \"AGGREGATION_BOOK\".\"CONTACT_ID\",\r\n         \"AGGREGATION_BOOK\".\"PUBLISHER_ID\",\r\n         \"AGGREGATION_BOOK\".\"PUBDATE\",\r\n         \"AGGREGATION_BOOK\".\"PRINT_INFO\"\r\n```\r\n\r\nExecuted SQL on `main`\r\n\r\n```sql\r\nSELECT \"AGGREGATION_BOOK\".\"ID\" AS \"PK\",\r\n       \"AGGREGATION_BOOK\".\"ISBN\" AS \"ISBN\",\r\n       AVG(\"AGGREGATION_AUTHOR\".\"AGE\") AS \"MEAN_AGE\"\r\nFROM \"AGGREGATION_BOOK\"\r\nLEFT OUTER JOIN \"AGGREGATION_BOOK_AUTHORS\" ON (\"AGGREGATION_BOOK\".\"ID\" = \"AGGREGATION_BOOK_AUTHORS\".\"BOOK_ID\")\r\nLEFT OUTER JOIN \"AGGREGATION_AUTHOR\" ON (\"AGGREGATION_BOOK_AUTHORS\".\"AUTHOR_ID\" = \"AGGREGATION_AUTHOR\".\"ID\")\r\nWHERE \"AGGREGATION_BOOK\".\"ID\" = 21\r\nGROUP BY \"AGGREGATION_BOOK\".\"ID\",\r\n         \"AGGREGATION_BOOK\".\"ISBN\",\r\n         \"AGGREGATION_BOOK\".\"NAME\",\r\n         \"AGGREGATION_BOOK\".\"PAGES\",\r\n         \"AGGREGATION_BOOK\".\"RATING\",\r\n         \"AGGREGATION_BOOK\".\"PRICE\",\r\n         \"AGGREGATION_BOOK\".\"CONTACT_ID\",\r\n         \"AGGREGATION_BOOK\".\"PUBLISHER_ID\",\r\n         \"AGGREGATION_BOOK\".\"PUBDATE\"\r\n```\r\n\r\nSeems like `\"AGGREGATION_BOOK\".\"PRINT_INFO\"` is included in the `GROUP BY` on your branch.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2325381537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2325653268",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2325653268",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2325653268,
          "node_id": "IC_kwDOAD-Lgs6KnqcU",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-03T05:49:14Z",
          "updated_at": "2024-09-03T05:49:14Z",
          "author_association": "MEMBER",
          "body": "> @camuthig I usually try two approaches on my M1\r\n> \r\n>     1. I had success once I ran `brew install colima` and tried again\r\n> \r\n>     2. Low-tech approach is to attempt to generate the raw SQL locally and rely on tools such as [dbfiddle](https://dbfiddle.uk/Wh4zpMKJ).\r\n> \r\n> \r\n> I really wish CI ran with `--debug-sql` at least so we could peak at the generated SQL\r\n> \r\n> Any suggestions @felixxm?\r\n\r\nThe \"easiest\" way is to use [VM provided by Oracle](https://www.oracle.com/database/technologies/databaseappdev-vm.html).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2325653268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2329388647",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2329388647",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2329388647,
          "node_id": "IC_kwDOAD-Lgs6K16Zn",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-04T15:32:56Z",
          "updated_at": "2024-09-04T15:32:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes I have updated the code with two things:\r\n\r\n1. Swapped the JSON test behaviors to a new, JSON specific model to avoid adverse effects on other tests.\r\n2. Changed up how I dealt with MySQL to make it a bit more simple, and generally focused on just MySQL.\r\n\r\nI haven't had a chance to set up the Oracle VM, so I don't know that the tests are going to pass on that backend. Can we run it again, and if issues continue, then I will get that VM configured.\r\n\r\nI kept the MySQL changes as a separate commit to make them easier to review at this phase: https://github.com/django/django/pull/18361/commits/43415289e723fbcb7fc772f4c17718f7b72d30e1 . Let me know what you think of that. If we are happy with it, I will squash it back down.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2329388647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2329397023",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2329397023",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2329397023,
          "node_id": "IC_kwDOAD-Lgs6K18cf",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-04T15:36:28Z",
          "updated_at": "2024-09-04T15:36:28Z",
          "author_association": "MEMBER",
          "body": "@camuthig that's awesome, thanks for the summary!\r\n\r\nSure we can give the Oracle suite a run and see how it goes. I have the VM setup locally now so I should be able to provide guidance as well if we run into issues.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2329397023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2344022788",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2344022788",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2344022788,
          "node_id": "IC_kwDOAD-Lgs6LtvME",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-11T15:40:19Z",
          "updated_at": "2024-09-11T15:40:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes I still can't get oracle running locally. Not sure what is wrong with my system but the VM keeps crashing on me. I do believe I saw an error in the template for the Oracle SQL that was causing the failures on the order by queries and fixed it. Question for you: if I add the buildbot message myself, will it kick off the Oracle tests? And is it okay if I do that as I iterate? I'm not sure how that buildbot works and what is okay versus an over step. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2344022788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2344044823",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2344044823",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2344044823,
          "node_id": "IC_kwDOAD-Lgs6Lt0kX",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-11T15:49:59Z",
          "updated_at": "2024-09-11T15:49:59Z",
          "author_association": "MEMBER",
          "body": "@camuthig I believe it should yes or that we can add you to an allow list otherwise. Could you trying `buildbot, test on oracle.`",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2344044823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2344130487",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2344130487",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2344130487,
          "node_id": "IC_kwDOAD-Lgs6LuJe3",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-11T16:30:18Z",
          "updated_at": "2024-09-11T16:30:18Z",
          "author_association": "CONTRIBUTOR",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2344130487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2344132083",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2344132083",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2344132083,
          "node_id": "IC_kwDOAD-Lgs6LuJ3z",
          "user": {
            "login": "camuthig",
            "id": 5178217,
            "node_id": "MDQ6VXNlcjUxNzgyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5178217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camuthig",
            "html_url": "https://github.com/camuthig",
            "followers_url": "https://api.github.com/users/camuthig/followers",
            "following_url": "https://api.github.com/users/camuthig/following{/other_user}",
            "gists_url": "https://api.github.com/users/camuthig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camuthig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camuthig/subscriptions",
            "organizations_url": "https://api.github.com/users/camuthig/orgs",
            "repos_url": "https://api.github.com/users/camuthig/repos",
            "events_url": "https://api.github.com/users/camuthig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camuthig/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-11T16:31:07Z",
          "updated_at": "2024-09-11T16:31:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "Looks like the buildbot responded @charettes ! Thanks.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2344132083/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2344316723",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2344316723",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2344316723,
          "node_id": "IC_kwDOAD-Lgs6Lu28z",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-11T17:48:35Z",
          "updated_at": "2024-09-11T17:48:35Z",
          "author_association": "MEMBER",
          "body": "One reported failure with the associated query\r\n\r\n```\r\n======================================================================\r\nFAIL: test_string_agg_filter_in_subquery (aggregation.tests.AggregateTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/django/source/tests/aggregation/tests.py\", line 2329, in test_string_agg_filter_in_subquery\r\n    self.assertQuerySetEqual(expected_values, values, ordered=False)\r\n  File \"/django/source/django/test/testcases.py\", line 1250, in assertQuerySetEqual\r\n    return self.assertDictEqual(Counter(items), Counter(values), msg=msg)\r\nAssertionError: Count[40 chars] 1, 'Paul Bissex;Wesley J. Chun': 1, 'Peter No[48 chars]: 1}) != Count[40 chars] 1, '': 1, 'Paul Bissex;Wesley J. Chun': 1, 'P[46 chars]: 1})\r\n  Counter({'Adrian Holovaty': 1,\r\n           'Brad Dayley': 1,\r\n+          '': 1,\r\n           'Paul Bissex;Wesley J. Chun': 1,\r\n           'Peter Norvig;Stuart Russell': 1,\r\n-          'Peter Norvig': 1,\r\n?                           ^\r\n\r\n+          'Peter Norvig': 1})\r\n?                           ^^\r\n\r\n-          None: 1})\r\n\r\n----------------------------------------------------------------------\r\n(0.021)\r\nSELECT\r\n    (\r\n        SELECT\r\n            LISTAGG (\r\n                CASE WHEN NOT (U2.\"NAME\" LIKE TRANSLATE(J % USING NCHAR_CS) ESCAPE TRANSLATE('\\' USING NCHAR_CS)\r\n                    AND U2.\"NAME\" IS NOT NULL) THEN\r\n                            U2.\"NAME\"\r\n                ELSE\r\n                    NULL\r\n                        END,;\r\n\r\n) AS \"AGG\"\r\nFROM\r\n    \"AGGREGATION_BOOK\" U0\r\n    LEFT OUTER JOIN \"AGGREGATION_BOOK_AUTHORS\" U1 ON (U0.\"ID\" = U1.\"BOOK_ID\")\r\n    LEFT OUTER JOIN \"AGGREGATION_AUTHOR\" U2 ON (U1.\"AUTHOR_ID\" = U2.\"ID\")\r\nWHERE\r\n    U0.\"ID\" = (\"AGGREGATION_BOOK\".\"ID\")\r\nGROUP BY\r\n    U0.\"ID\",\r\n    U0.\"ISBN\",\r\n    U0.\"NAME\",\r\n    U0.\"PAGES\",\r\n    U0.\"RATING\",\r\n    U0.\"PRICE\",\r\n    U0.\"CONTACT_ID\",\r\n    U0.\"PUBLISHER_ID\",\r\n    U0.\"PUBDATE\") AS \"AGG\"\r\nFROM\r\n    \"AGGREGATION_BOOK\";\r\n\r\n args=('J%', ';'); ALIAS=DEFAULT\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2344316723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2344360431",
          "html_url": "https://github.com/django/django/pull/18361#issuecomment-2344360431",
          "issue_url": "https://api.github.com/repos/django/django/issues/18361",
          "id": 2344360431,
          "node_id": "IC_kwDOAD-Lgs6LvBnv",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-09-11T18:12:28Z",
          "updated_at": "2024-09-11T18:12:40Z",
          "author_association": "MEMBER",
          "body": "I think we'll have no choice but not to support `StringAgg(filter)` on Oracle (we could raise `NotSupportedError` in `as_oracle` given `self.filter`) because `LISTAGG` doesn't offer a way to filter out values and Oracle doesn't support the `FILTER (WHERE ...)` clause which forces the usage of `CASE WHEN` which yields `NULL` on mismatches.\r\n\r\nAs another PR ran into (https://github.com/django/django/pull/18351#pullrequestreview-2287172954) in order to support this properly aggregates would need to support being turned into subquery aggregates (https://github.com/django/django/pull/11841) which is way beyond the scope of this PR.\r\n\r\nI'm not sure what's causing the GIS failures but the error message is\r\n\r\n```\r\ndjango.db.utils.DatabaseError: ORA-00907: missing right parenthesis\r\nHelp: https://docs.oracle.com/error-help/db/ora-00907/\r\n```\r\n\r\nAnd the generated SQL for `test_geoagg_subquery` is \r\n\r\n```sql\r\nSELECT \r\n  SDO_UTIL.TO_WKBGEOMETRY(\r\n    SDO_AGGR_UNION() SDOAGGRTYPE(\"__COL1\", NULL, % s)\r\n  ) \r\nFROM \r\n  (\r\n    SELECT \r\n      DISTINCT \"GEOAPP_CITY\".\"ID\" AS \"COL1\", \r\n      \"GEOAPP_CITY\".\"NAME\" AS \"COL2\", \r\n      \"GEOAPP_CITY\".\"POINT\" AS \"COL3\", \r\n      \"GEOAPP_CITY\".\"POINT\" AS \"__COL1\" \r\n    FROM \r\n      \"GEOAPP_CITY\" \r\n    WHERE \r\n      SDO_INSIDE(\r\n        \"GEOAPP_CITY\".\"POINT\", \r\n        SDO_GEOMETRY(% s, 4326)\r\n      ) = 'TRUE'\r\n  ) subquery\r\n```\r\n\r\non your branch while it's\r\n\r\n```sql\r\nSELECT \r\n  SDO_UTIL.TO_WKBGEOMETRY(\r\n    SDO_AGGR_UNION() SDOAGGRTYPE(\"__COL1\", NULL, % s)\r\n  ) \r\nFROM \r\n  (\r\n    SELECT \r\n      DISTINCT \"GEOAPP_CITY\".\"ID\" AS \"COL1\", \r\n      \"GEOAPP_CITY\".\"NAME\" AS \"COL2\", \r\n      \"GEOAPP_CITY\".\"POINT\" AS \"COL3\", \r\n      \"GEOAPP_CITY\".\"POINT\" AS \"__COL1\" \r\n    FROM \r\n      \"GEOAPP_CITY\" \r\n    WHERE \r\n      SDO_INSIDE(\r\n        \"GEOAPP_CITY\".\"POINT\", \r\n        SDO_GEOMETRY(MULTIPOLYGON(%s), 4326)\r\n      ) = 'TRUE'\r\n  ) subquery\r\n```\r\n\r\non main\r\n\r\nI highly suspect `GeoAggregate.as_oracle` needs adjustments with regards to `self.filter`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2344360431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/16905",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/16905/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/16905/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/16905/events",
      "html_url": "https://github.com/django/django/pull/16905",
      "id": 1732727617,
      "node_id": "PR_kwDOAD-Lgs5Rte89",
      "number": 16905,
      "title": "Fixed #24686 -- Allowed moving a model between apps.",
      "user": {
        "login": "DevilsAutumn",
        "id": 83907321,
        "node_id": "MDQ6VXNlcjgzOTA3MzIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DevilsAutumn",
        "html_url": "https://github.com/DevilsAutumn",
        "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
        "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
        "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
        "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
        "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
        "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 37,
      "created_at": "2023-05-30T18:02:09Z",
      "updated_at": "2025-02-22T23:45:23Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/16905",
        "html_url": "https://github.com/django/django/pull/16905",
        "diff_url": "https://github.com/django/django/pull/16905.diff",
        "patch_url": "https://github.com/django/django/pull/16905.patch",
        "merged_at": null
      },
      "body": "Google Summer of Code 2023\r\n====================\r\nTicket: [#24686](https://code.djangoproject.com/ticket/24686)\r\nForum: [here.](https://forum.djangoproject.com/t/gsoc-2023-allow-moving-a-model-between-apps/21252)\r\nDiscussion: [PR](https://github.com/django/django/pull/16585)\r\nProposal: [Allow moving a model between apps.](https://gist.github.com/DevilsAutumn/7a3cd4567d0aef9d096abf2e0b9f7ffd)\r\n\r\nPhase 1: Focusing on operations for moving model + tests related + documentation.\r\nPhase 2: Auto-detecting moved model, generating migrations and squashing migrations + tests related + documentation.\r\n\r\n",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/16905/reactions",
        "total_count": 4,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 4
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/16905/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1568852875",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1568852875",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1568852875,
          "node_id": "IC_kwDOAD-Lgs5dgsuL",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-30T18:03:11Z",
          "updated_at": "2023-06-06T06:58:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think more tests are required in `tests/migrations/test_operations` to show that no data is lost. But how should I add so many operations in a single test?\r\n\r\n<details>\r\n<summary>test_move_model_with_fk</summary>\r\n<br>\r\n<pre>\r\ndef test_move_model_with_fk(self):\r\n        app_label_1 = \"test_mmw_fk_1\"\r\n        app_label_2 = \"test_mmw_fk_2\"\r\n        project_state = self.apply_operations(\r\n            app_label_1,\r\n            ProjectState(),\r\n            operations=[\r\n                migrations.CreateModel(\r\n                    \"Rider\",\r\n                    fields=[\r\n                        (\"id\", models.AutoField(primary_key=True)),\r\n                    ],\r\n                ),\r\n                migrations.CreateModel(\r\n                    \"TempRider\",\r\n                    fields=[\r\n                        (\"id\", models.AutoField(primary_key=True)),\r\n                    ],\r\n                ),\r\n            ],\r\n        )\r\n        project_state = self.apply_operations(\r\n            app_label_2,\r\n            project_state,\r\n            operations=[\r\n                migrations.CreateModel(\r\n                    \"Pony\",\r\n                    fields=[\r\n                        (\"id\", models.AutoField(primary_key=True)),\r\n                        (\"riders\", models.ForeignKey(\r\n                            f\"{app_label_1}.TempRider\", on_delete=models.CASCADE)),\r\n                    ],\r\n                ),\r\n            ],\r\n        )\r\n\r\n        self.assertTableExists(f\"{app_label_1}_temprider\")\r\n        self.assertTableExists(f\"{app_label_2}_pony\")\r\n        temp_rider = project_state.apps.get_model(app_label_1, \"TempRider\")\r\n        pony = project_state.apps.get_model(app_label_2, \"Pony\")\r\n        pony.objects.create(riders=temp_rider.objects.create())\r\n\r\n        project_state_2 = project_state.clone()\r\n        project_state = self.apply_operations(\r\n            app_label_1,\r\n            project_state,\r\n            operations=[\r\n                migrations.AlterModelTable(\r\n                    \"TempRider\",\r\n                    f\"{app_label_2}_temprider\",\r\n                    state_only_op=True,\r\n                ),\r\n            ],\r\n        )\r\n        project_state = self.apply_operations(\r\n            app_label_2,\r\n            project_state,\r\n            operations=[\r\n                migrations.CreateModel(\r\n                    \"TempRider\",\r\n                    fields=[\r\n                        (\"id\", models.AutoField(primary_key=True)),\r\n                    ],\r\n                    state_only_op=True\r\n                ),\r\n                migrations.AlterField(\r\n                    \"pony\",\r\n                    name=\"riders\",\r\n                    field=models.ForeignKey(\r\n                        on_delete=models.CASCADE, to=f\"{app_label_2}.temprider\"\r\n                    ),\r\n                ),\r\n            ],\r\n        )\r\n        project_state = self.apply_operations(\r\n            app_label_1,\r\n            project_state,\r\n            operations=[\r\n                migrations.DeleteModel(\r\n                    \"TempRider\",\r\n                ),\r\n            ],\r\n        )\r\n        self.assertTableExists(f\"{app_label_2}_temprider\")\r\n        self.assertTableExists(f\"{app_label_2}_pony\")\r\n        temp_rider = project_state.apps.get_model(app_label_2, \"TempRider\")\r\n        pony = project_state.apps.get_model(app_label_2, \"Pony\")\r\n        pony.objects.create(riders=temp_rider.objects.create())\r\n        self.assertEqual(temp_rider.objects.count(), 2)\r\n        self.assertEqual(pony.objects.count(), 2)\r\n</pre>\r\n</details>\r\n\r\nThis test is passing on sqlite3 and mysql.\r\nEdit: I have added the above test in `migrations/test_operations.py` .",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1568852875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1583331473",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1583331473",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1583331473,
          "node_id": "IC_kwDOAD-Lgs5eX7iR",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-08T20:56:31Z",
          "updated_at": "2023-06-08T21:30:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have created two subclasses `CreateModelInAppState` and `DeleteModelInAppState` instead of `state_only_op` flag. It looks much better and less confusing now. \ud83e\udd14 ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1583331473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1583997461",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1583997461",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1583997461,
          "node_id": "IC_kwDOAD-Lgs5eaeIV",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-09T05:28:26Z",
          "updated_at": "2023-06-09T05:28:26Z",
          "author_association": "MEMBER",
          "body": "> I have created two subclasses `CreateModelInAppState` and `DeleteModelInAppState` instead of `state_only_op` flag. It looks much better and less confusing now. thinking\r\n\r\nThanks :+1: . Most (all?) of new test apps won't be necessary when we will add auto-detection of moved models.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1583997461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1584064094",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1584064094",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1584064094,
          "node_id": "IC_kwDOAD-Lgs5eauZe",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-09T06:51:12Z",
          "updated_at": "2023-06-09T06:51:12Z",
          "author_association": "CONTRIBUTOR",
          "body": ">  Most (all?) of new test apps won't be necessary when we will add auto-detection of moved models.\r\n\r\nShould i remove all the test apps then?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1584064094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1584065592",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1584065592",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1584065592,
          "node_id": "IC_kwDOAD-Lgs5eauw4",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-09T06:52:56Z",
          "updated_at": "2023-06-09T06:52:56Z",
          "author_association": "MEMBER",
          "body": "> > Most (all?) of new test apps won't be necessary when we will add auto-detection of moved models.\r\n> \r\n> Should i remove all the test apps then?\r\n\r\nThey can stay for now, we can remove them later when auto-detection is implemented.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1584065592/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1607129005",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1607129005",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1607129005,
          "node_id": "IC_kwDOAD-Lgs5fytet",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-06-26T10:01:57Z",
          "updated_at": "2023-06-26T10:01:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm i've pushed the code for autodetection of moved model .\ud83d\udc4d Specific commit is a03687f",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1607129005/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1633800993",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1633800993",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1633800993,
          "node_id": "IC_kwDOAD-Lgs5hYdMh",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-13T08:30:03Z",
          "updated_at": "2023-07-13T08:30:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "By mistake i removed the record of dependency for altering model options in old app because of which the fields in old app were being altered after the DeleteModel() operation of moving model. I'm now working on a failing case - when i run makemigrations again after migrations of moving model are generated, a new migration for altering model options for moved model is generated. If I pass `managed=False` along with `db_table` in moved model in new app, no new migration is generated.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1633800993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1635777077",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1635777077",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1635777077,
          "node_id": "IC_kwDOAD-Lgs5hf_o1",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-14T12:14:16Z",
          "updated_at": "2023-07-14T12:14:16Z",
          "author_association": "MEMBER",
          "body": "On SQLite, tables with relations to a moved model are rebuild (we should add a test to check performed queries and fix this), e.g.\r\n```bash\r\n$ python manage.py sqlmigrate test_one 0003\r\nBEGIN;\r\n--\r\n-- Alter field field_fk on myrelatedmodels\r\n--\r\nCREATE TABLE \"new__test_one_myrelatedmodels\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"field_fk_id\" bigint NULL REFERENCES \"test_one_mymodel\" (\"id\") DEFERRABLE INITIALLY DEFERRED);\r\nINSERT INTO \"new__test_one_myrelatedmodels\" (\"id\", \"field_fk_id\") SELECT \"id\", \"field_fk_id\" FROM \"test_one_myrelatedmodels\";\r\nDROP TABLE \"test_one_myrelatedmodels\";\r\nALTER TABLE \"new__test_one_myrelatedmodels\" RENAME TO \"test_one_myrelatedmodels\";\r\nCREATE INDEX \"test_one_myrelatedmodels_field_fk_id_2e7a4f46\" ON \"test_one_myrelatedmodels\" (\"field_fk_id\");\r\n--\r\n-- Alter field field_m2m on myrelatedmodels\r\n--\r\n-- (no-op)\r\n--\r\n-- Delete model mymodel\r\n--\r\n-- (no-op)\r\nCOMMIT;\r\n```\r\n```bash\r\n$ python manage.py sqlmigrate test_two 0002\r\nBEGIN;\r\n--\r\n-- Create model MyModel\r\n--\r\n-- (no-op)\r\n--\r\n-- Alter field field_fk on myothermodel\r\n--\r\nCREATE TABLE \"new__test_two_myothermodel\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"field_fk_id\" bigint NULL REFERENCES \"test_one_mymodel\" (\"id\") DEFERRABLE INITIALLY DEFERRED);\r\nINSERT INTO \"new__test_two_myothermodel\" (\"id\", \"field_fk_id\") SELECT \"id\", \"field_fk_id\" FROM \"test_two_myothermodel\";\r\nDROP TABLE \"test_two_myothermodel\";\r\nALTER TABLE \"new__test_two_myothermodel\" RENAME TO \"test_two_myothermodel\";\r\nCREATE INDEX \"test_two_myothermodel_field_fk_id_d5d44589\" ON \"test_two_myothermodel\" (\"field_fk_id\");\r\nCOMMIT;\r\n```\r\n\r\nAlso, please fix `schema.tests.SchemaTests.test_m2m_through_remove` and remove all example apps from migrations tests (they should be replaced with a autodetector/schema tests, where appropriate).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1635777077/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1635948730",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1635948730",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1635948730,
          "node_id": "IC_kwDOAD-Lgs5hgpi6",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-14T14:29:11Z",
          "updated_at": "2023-07-14T16:08:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "> On SQLite, tables with relations to a moved model are rebuild (we should add a test to check performed queries and fix this), \r\n\r\nIts because in `field_fk` ,`null=True` was added when the model was moved to other app in your project. I checked when a db attribute of a field is altered table is rebuilt in SQLite. I tested on MYSQL and the table was only altered not rebuild. Please correct me if i'm wrong.\r\nOn MYSQL:\r\n```\r\npython manage.py sqlmigrate test_one 0003\r\n--\r\n-- Alter field field_fk on myrelatedmodels\r\n--\r\nALTER TABLE `test_one_myrelatedmodels` DROP FOREIGN KEY `test_one_myrelatedmo_field_fk_id_2e7a4f46_fk_test_one_`;\r\nALTER TABLE `test_one_myrelatedmodels` MODIFY `field_fk_id` bigint NULL;\r\nALTER TABLE `test_one_myrelatedmodels` ADD CONSTRAINT `test_one_myrelatedmo_field_fk_id_2e7a4f46_fk_test_one_` FOREIGN KEY (`field_fk_id`) REFERENCES `test_one_mymodel` (`id`);\r\n--\r\n-- Alter field field_m2m on myrelatedmodels\r\n--\r\n-- (no-op)\r\n--\r\n-- Delete model mymodel\r\n--\r\n-- (no-op)\r\n```\r\n```\r\npython manage.py sqlmigrate test_two 0002\r\n--\r\n-- Create model MyModel\r\n--\r\n-- (no-op)\r\n--\r\n-- Alter field field_fk on myothermodel\r\n--\r\nALTER TABLE `test_two_myothermodel` DROP FOREIGN KEY `test_two_myothermode_field_fk_id_d5d44589_fk_test_one_`;\r\nALTER TABLE `test_two_myothermodel` MODIFY `field_fk_id` bigint NULL;\r\nALTER TABLE `test_two_myothermodel` ADD CONSTRAINT `test_two_myothermode_field_fk_id_d5d44589_fk_test_one_` FOREIGN KEY (`field_fk_id`) REFERENCES `test_one_mymodel` (`id`);\r\n```\r\nShould i still add a test to check performed queries?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1635948730/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1636839052",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1636839052",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1636839052,
          "node_id": "IC_kwDOAD-Lgs5hkC6M",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-15T17:44:12Z",
          "updated_at": "2023-07-15T17:44:12Z",
          "author_association": "MEMBER",
          "body": "> Its because in `field_fk` ,`null=True` was added when the model was moved to other app in your project. I checked when a db attribute of a field is altered table is rebuilt in SQLite. I tested on MYSQL and the table was only altered not rebuild. Please correct me if i'm wrong.\r\n\r\nYes, you are right.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1636839052/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1645129350",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1645129350",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1645129350,
          "node_id": "IC_kwDOAD-Lgs5iDq6G",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-21T07:43:17Z",
          "updated_at": "2023-07-21T07:43:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "I was testing this patch for different use cases and I came across a scenario with potential error:\r\n\r\nConsider 3 models ,`A`, `B` and `C`. Model `C` has fk to `A` and `B`, and `B` has m2m field to `A` through `C`. We move model `B` to `app_two` first and then move model `C` to `app_two`. For moving model C we have to change the `through` of model `B` to `test_two.C` and hence it should have an `AlterField` operation which is missing. \r\n\r\nIf we only move Model `C` to `app_two` and not `B` , `AlterField` is added for the m2m field as through is changed. \r\nWill update the PR as soon as it is solved.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1645129350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1656023899",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1656023899",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1656023899,
          "node_id": "IC_kwDOAD-Lgs5itOtb",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-28T17:04:49Z",
          "updated_at": "2023-07-28T18:31:27Z",
          "author_association": "CONTRIBUTOR",
          "body": "@shaib Thankyou for reviewing! I'll push the suggested changes shortly.\r\n\r\n>If this has other advantages over the use of SeparateDatabaseAndState, then it may be justified, however, as the code stands -- if I understand correctly -- the added model is left unmanaged in the end (that is, take model A from app first to app second, and now -- in the migrations -- second.A is unmanaged). The next makemigrations will create a migration to change it back to managed, which will surprise the user.\r\n\r\nIf we're marking the model `managed`, then after the migration for moving a model are created we have to add `managed=False` in the model's Meta for now, so that it doesn't create new migration to change it back. Working to avoid creating new migration .",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1656023899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1656269734",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1656269734",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1656269734,
          "node_id": "IC_kwDOAD-Lgs5iuKum",
          "user": {
            "login": "shaib",
            "id": 129187,
            "node_id": "MDQ6VXNlcjEyOTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shaib",
            "html_url": "https://github.com/shaib",
            "followers_url": "https://api.github.com/users/shaib/followers",
            "following_url": "https://api.github.com/users/shaib/following{/other_user}",
            "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shaib/subscriptions",
            "organizations_url": "https://api.github.com/users/shaib/orgs",
            "repos_url": "https://api.github.com/users/shaib/repos",
            "events_url": "https://api.github.com/users/shaib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shaib/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-28T20:10:29Z",
          "updated_at": "2023-07-28T20:10:29Z",
          "author_association": "MEMBER",
          "body": "> > If this has other advantages over the use of SeparateDatabaseAndState, then it may be justified, however, as the code stands -- if I understand correctly -- the added model is left unmanaged in the end (that is, take model A from app first to app second, and now -- in the migrations -- second.A is unmanaged). The next makemigrations will create a migration to change it back to managed, which will surprise the user.\r\n> \r\n> If we're marking the model `managed`, then after the migration for moving a model are created we have to add `managed=False` in the model's Meta for now, so that it doesn't create new migration to change it back. Working to avoid creating new migration .\r\n\r\nIf I understand you correctly -- no, the other way around. We don't want the model to be unmanaged. If we keep this, we need to add an operation to set it back to `managed=True` in the generated set.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1656269734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1656328316",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1656328316",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1656328316,
          "node_id": "IC_kwDOAD-Lgs5iuZB8",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-28T20:58:37Z",
          "updated_at": "2023-07-28T20:58:37Z",
          "author_association": "CONTRIBUTOR",
          "body": "> If I understand you correctly -- no, the other way around. We don't want the model to be unmanaged. If we keep this, we need to add an operation to set it back to `managed=True` in the generated set.\r\n\r\nyes correct,  we want model to be unmanaged only while moving it and then we'll have to again make it managed.\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1656328316/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1657230167",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1657230167",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1657230167,
          "node_id": "IC_kwDOAD-Lgs5ix1NX",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-07-30T17:52:26Z",
          "updated_at": "2023-07-30T17:52:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "Everything is working fine till now, except the last `AlterModelOptions` operation to be added to make the model managed in new app, according to me last operation (`AlterModelOptions`) should have dependency on `DeleteModel` of old app so that it works like:\r\n\r\nalter model options in `0002_alter...` in old app  --> create moved model + alter fields(if any) in `0002_mymodel...` in new app --> alter fields(if any) + delete model in `0003_alter_delete...` in old app --> alter model options in `0003_alter...` in new app\r\n\r\nBut it is working like this: \r\n\r\nalter model options in `0002_alter...` in old app  --> create moved model in `0002_mymodel...` in new app --> alter fields(if any) + delete model in `0003_alter_delete...` in old app --> alter model options +alter fields(if any) in `0003_alter...` in newapp.\r\nThis is giving error while altering field in `0003_alter...` in new app because the old fields'  related model is deleted already. so we should have those AlterField operations in `0002_mymodel..` along with CreateModel in new app. \r\n\r\nI am a bit confused here. These are the changes i did in current patch:\r\n```diff\r\ndiff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\r\nindex 4cdb3e6d51..7f601117bb 100644\r\n--- a/django/db/migrations/autodetector.py\r\n+++ b/django/db/migrations/autodetector.py\r\n\r\n@@ -679,6 +679,13 @@ class MigrationAutodetector:\r\n                     operations.DeleteModel(name=rem_model_name),\r\n                     dependencies=dependencies,\r\n                 )\r\n+                self.add_operation(\r\n+                    app_label,\r\n+                    operations.AlterModelOptions(\r\n+                        name=model_name, options={}\r\n+                    ),\r\n+                    dependencies=[(rem_app_label, rem_model_name, None, False)]\r\n+                )\r\n                 self.old_model_keys.remove((rem_app_label, rem_model_name))\r\n                 self.old_model_keys.add((app_label, model_name))\r\n                 self.from_state.add_model(model_state)\r\n```\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1657230167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1666897919",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1666897919",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1666897919,
          "node_id": "IC_kwDOAD-Lgs5jWtf_",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-06T15:34:32Z",
          "updated_at": "2023-08-09T08:02:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've pushed (plus tested) some edits  and added test for moving an unmanaged model . It should be working fine now.\r\nRepo with generated migrations for different scenarios: https://github.com/DevilsAutumn/moving-model-demo\r\n\r\nWhats changed?\r\n\r\nEarlier the generated set of migrations was like :\r\n`AlterModelOptions` to `False` for moved model  `old app`-- > `CreateModel` + `AlterField` ops in `new app` --> `AlterField` ops + `Delete Model` in `old app` \r\nchanging new model back to manage was missing.\r\n\r\nNow the generated set of migrations is like :\r\n`CreateModel`  in `new app` --> `AlterModelOptions` to `False` for moved model + `AlterField` ops in `old app`-- > `AlterModelOptions` to `True` for moved model + `AlterField` ops in `new app`-- >`Delete Model` in `old app` ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1666897919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1685326227",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1685326227",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1685326227,
          "node_id": "IC_kwDOAD-Lgs5kdAmT",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-20T16:37:50Z",
          "updated_at": "2023-08-20T16:37:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think this PR is ready for review \ud83d\udc4d ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1685326227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1694624401",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1694624401",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1694624401,
          "node_id": "IC_kwDOAD-Lgs5lAeqR",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-27T09:59:21Z",
          "updated_at": "2023-08-27T09:59:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes  Thankyou so much for your valuable feedback.\r\n\r\n>1. I don't think it's worth exemplifying the initial implementation to pre-existing special case unmanaged models. When it's the case the operation that Django currently generate on main are just fine; DeleteModel and CreateModel are database noop for unmanaged models (it's the approach used to move managed models here)\r\n\r\nThanks for clarifying, I had a small doubt in this case but now its clear.\r\n\r\n>2. I think the initial implementation should support moving models without a Meta.db_table override (by issuing a RenameModel). The Meta.db_table override should only be a way for users to avoid the rename not a forced opt-in mechanism into moving models auto-detection.\r\n\r\nIf I understood you correctly , we should have `AlterModelTable` to rename the mode table instead of `RenameModel`, right?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1694624401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1694688987",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1694688987",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1694688987,
          "node_id": "IC_kwDOAD-Lgs5lAubb",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-27T14:55:52Z",
          "updated_at": "2023-08-27T14:55:52Z",
          "author_association": "MEMBER",
          "body": "> If I understood you correctly , we should have AlterModelTable to rename the mode table instead of RenameModel, right?\r\n\r\nCorrect!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1694688987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1697636725",
          "html_url": "https://github.com/django/django/pull/16905#issuecomment-1697636725",
          "issue_url": "https://api.github.com/repos/django/django/issues/16905",
          "id": 1697636725,
          "node_id": "IC_kwDOAD-Lgs5lL-F1",
          "user": {
            "login": "DevilsAutumn",
            "id": 83907321,
            "node_id": "MDQ6VXNlcjgzOTA3MzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83907321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DevilsAutumn",
            "html_url": "https://github.com/DevilsAutumn",
            "followers_url": "https://api.github.com/users/DevilsAutumn/followers",
            "following_url": "https://api.github.com/users/DevilsAutumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/DevilsAutumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DevilsAutumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DevilsAutumn/subscriptions",
            "organizations_url": "https://api.github.com/users/DevilsAutumn/orgs",
            "repos_url": "https://api.github.com/users/DevilsAutumn/repos",
            "events_url": "https://api.github.com/users/DevilsAutumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DevilsAutumn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-08-29T15:10:57Z",
          "updated_at": "2023-08-29T15:10:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "All fixed!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1697636725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/17338",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/17338/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/17338/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/17338/events",
      "html_url": "https://github.com/django/django/pull/17338",
      "id": 1927415349,
      "node_id": "PR_kwDOAD-Lgs5b9ujp",
      "number": 17338,
      "title": "Accessibility guidelines for all contributors",
      "user": {
        "login": "thibaudcolas",
        "id": 877585,
        "node_id": "MDQ6VXNlcjg3NzU4NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thibaudcolas",
        "html_url": "https://github.com/thibaudcolas",
        "followers_url": "https://api.github.com/users/thibaudcolas/followers",
        "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
        "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
        "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
        "repos_url": "https://api.github.com/users/thibaudcolas/repos",
        "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 37,
      "created_at": "2023-10-05T05:30:11Z",
      "updated_at": "2024-08-31T08:35:23Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/17338",
        "html_url": "https://github.com/django/django/pull/17338",
        "diff_url": "https://github.com/django/django/pull/17338.diff",
        "patch_url": "https://github.com/django/django/pull/17338.patch",
        "merged_at": null
      },
      "body": "[Read the guidelines in HTML](https://django-docs-preview.netlify.app/internals/contributing/writing-code/accessibility).\r\n\r\nIntroduces new guidelines as per discussions with @django/accessibility, and [DEP-11](https://github.com/django/deps/pull/69) which formally created the team.\r\n\r\nI chose to go with what I think is close to the most minimal set of guidelines possible. In particular,\r\n\r\n- This almost only relies on resources from the W3C directly. Those are the most authoritative so they should be easy for us to agree on. But in the future we might want to complement them with more contributor-friendly resources.\r\n- The testing guidelines are as minimal as it gets while also attempting to cover the most demanding scenarios  \u2013 so we don\u2019t overwhelm contributors with lots of checklists.\r\n\r\nI see a few issues with this as-is which I chose to leave unresolved for now, so we get something \"live\" and iterate on it later:\r\n\r\n- Accessibility guidance should be dispersed alongside all relevant areas of the contributor docs, rather than being tucked away in the one page.\r\n- This is within the \"writing code\" sub-section, which sells those guidelines short of what they can be useful for (any Django \"product\" or \"docs\" contributions)\r\n- The specific testing targets are established on the best possible info in this space, but that info is both dated and has a heavy bias on the developing world.\r\n\r\nIt did feel like the right place within the current setup based on how the \"[Work on the Django framework](https://docs.djangoproject.com/en/dev/internals/contributing/#work-on-the-django-framework)\" docs are described.\r\n\r\n---\r\n\r\nThose docs as produced are heavily based on:\r\n\r\n- [Wagtail\u2019s Accessibility targets](https://docs.wagtail.org/en/stable/contributing/developing.html#accessibility-targets)\r\n- The UK Government Digital Services\u2019 guidance on [Testing with assistive technologies](https://www.gov.uk/service-manual/technology/testing-with-assistive-technologies), itself based on one of the most comprehensive public [survey of assistive technology users](https://accessibility.blog.gov.uk/2016/11/01/results-of-the-2016-gov-uk-assistive-technology-survey/) I\u2019m aware of.",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/17338/reactions",
        "total_count": 4,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 3,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/17338/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1748302907",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1748302907",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1748302907,
          "node_id": "IC_kwDOAD-Lgs5oNPw7",
          "user": {
            "login": "shangxiao",
            "id": 1845938,
            "node_id": "MDQ6VXNlcjE4NDU5Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1845938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangxiao",
            "html_url": "https://github.com/shangxiao",
            "followers_url": "https://api.github.com/users/shangxiao/followers",
            "following_url": "https://api.github.com/users/shangxiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangxiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangxiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangxiao/subscriptions",
            "organizations_url": "https://api.github.com/users/shangxiao/orgs",
            "repos_url": "https://api.github.com/users/shangxiao/repos",
            "events_url": "https://api.github.com/users/shangxiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangxiao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-10-05T07:47:52Z",
          "updated_at": "2023-10-05T07:47:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "Nice to see some a11y guidelines getting added to the docs \ud83d\udc4d\r\n\r\nI'm not an a11y expert so I've only commented on the grammar where it looks weird to me as a native english speaker.\r\n\r\nSide note: I'm a keyboard user and am super quick to notice when sites violate the keyboard-friendly parts of a11y\u2026\u00a0eg my pet hate is when devs take shortcuts by making div based buttons \ud83e\udd2f  I wonder if a note about how good a11y can benefit everyone? \ud83e\udd14",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1748302907/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1748679674",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1748679674",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1748679674,
          "node_id": "IC_kwDOAD-Lgs5oOrv6",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-10-05T11:14:36Z",
          "updated_at": "2023-10-05T11:14:36Z",
          "author_association": "MEMBER",
          "body": "Thanks for the review @shangxiao, much appreciated! That\u2019s a great point re accessibility benefitting everyone, I\u2019ll try to think a bit of where to add it in.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1748679674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1815448265",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1815448265",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1815448265,
          "node_id": "IC_kwDOAD-Lgs5sNYrJ",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-16T23:00:03Z",
          "updated_at": "2023-11-17T11:31:42Z",
          "author_association": "MEMBER",
          "body": "This is now ready for another round of review. Aside from specific edits, I have:\r\n\r\n- Changed the order of _Accessibility testing baseline_, so it\u2019s clearer how much and when to test\r\n- Added a call to reach out to the accessibility team for help\r\n- Added a reference on how accessibility improvements benefit everyone\r\n- Removed notes / admonitions.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1815448265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1817577518",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1817577518",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1817577518,
          "node_id": "IC_kwDOAD-Lgs5sVggu",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-18T17:30:40Z",
          "updated_at": "2023-11-18T17:32:49Z",
          "author_association": "MEMBER",
          "body": "I believe we need feedback on those guidelines from a wider group than we have currently \u2013 so have created a [forum thread](https://forum.djangoproject.com/t/feedback-needed-accessibility-guidelines-for-contributors/25437) and [tweeted about this](https://twitter.com/thibaud_colas/status/1725928990878101715). I also [uploaded the HTML version of those guidelines](https://django-docs-preview.netlify.app/internals/contributing/writing-code/accessibility) to help with reviews.\r\n\r\nThe feedback so far has been excellent, but I\u2019d like to hear from folks who haven\u2019t been working in open source or on accessibility and whose contributions might be most impacted by those guidelines \ud83d\udca5\ud83c\udf08. Please share the forum thread or the tweet as you see fit!\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1817577518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1825558238",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1825558238",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1825558238,
          "node_id": "IC_kwDOAD-Lgs5sz87e",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-24T11:46:10Z",
          "updated_at": "2023-11-24T11:46:10Z",
          "author_association": "MEMBER",
          "body": "Noting feedback I have received since the last call for feedback:\r\n\r\n> It might be kind of daunting for new contributors who don't know much (or anything!) about accessibility; maybe it could be helpful to have a beginner-friendly link (maybe the one for [The A11Y Project](https://www.a11yproject.com/) that's already linked in the doc) as part of the very first paragraph, or at least before all the links for the different standards. It might make it easier for an accessibility beginner to get through the docs without them seeming too overwhelming\r\n\r\nit seems tricky to me to add a link to the first paragraph as-is, and we\u2019ve already spent lots of time refining its text, but we could certainly have a beginner-friendly link first before the one about standards\r\n\r\n> maybe it's also missing a section on how to unit test accessibility improvements / fixes? I'm really used to frontend unit testing (in JS, e.g with testing-library) and found it quite challenging to successfully add a test in my PR to Django\r\n\r\nAgree 100% with this but I\u2019m not sure what to do about it, as the main way I\u2019d normally recommend writing those tests isn\u2019t available in Django. It also feels like a specific enough point that it could be worth a separate PR or forum thread to discuss QA options.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1825558238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1825574590",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1825574590",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1825574590,
          "node_id": "IC_kwDOAD-Lgs5s0A6-",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-24T12:00:19Z",
          "updated_at": "2023-11-24T13:03:20Z",
          "author_association": "MEMBER",
          "body": "@thibaudcolas, maybe a callout (.. admonition, or similar) for the first point... \ud83e\udd14\r\n\r\n> Accessibility is a big topic... if you're just starting out... focus on the\u2026\u00a0to begin... \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1825574590/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1826096536",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1826096536",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1826096536,
          "node_id": "IC_kwDOAD-Lgs5s2AWY",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-24T21:34:01Z",
          "updated_at": "2023-11-24T21:34:01Z",
          "author_association": "MEMBER",
          "body": "I see a Steering Council review was requested on this - I'm not enough of an accessibility expert to really review the content in deep detail, but is it just approval of the overall direction and tone that's wanted?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1826096536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1827887489",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1827887489",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1827887489,
          "node_id": "IC_kwDOAD-Lgs5s81mB",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-11-27T13:59:42Z",
          "updated_at": "2023-11-27T13:59:42Z",
          "author_association": "MEMBER",
          "body": "Thanks for looking into this @andrewgodwin this [forum thread](https://forum.djangoproject.com/t/feedback-needed-accessibility-guidelines-for-contributors/25437) might provide more context on what kind of feedback we need at this stage. TL;DR; is \"overall direction\" from the steering council.\r\n\r\nTo be more specific \u2013 I think it would be interesting to get feedback along the lines of:\r\n\r\n1. Your experience with similar guidelines or otherwise agreed-upon standards the project has for other considerations (for example performance and security).\r\n2. A sense of how much \"strictness\" the guidelines should strive for / what is reasonable to expect from contributors vs. needs to be done by specialists.\r\n3. How much should to be defined in those docs vs. relying on third-party resources (for example the checklist resource Carlton asked about could be a third-party doc, or an \"official\" checklist created for Django).\r\n4. An assessment of whether this is enough towards the goals set in [DEP-11](https://github.com/django/deps/blob/main/final/0011-accessibility-team.rst)\r\n\r\nIt\u2019d also be interesting to hear from you on our approach here:\r\n\r\n1. How much feedback is enough feedback for new contributor guidelines.\r\n2. Whether you\u2019re aware of more people within the Django community whose feedback would be valuable on this (anyone involved with the admin UI in particular)\r\n3. Perhaps thoughts on how we can document the decision-making here so future assessments of those guidelines can be as informed as possible.\r\n\r\n---\r\n\r\nI don\u2019t know how the steering council operates but if it helps I\u2019m sure @django/accessibility would be keen to host a meeting to talk through the proposed guidelines and provide more context?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1827887489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1836532136",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1836532136",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1836532136,
          "node_id": "IC_kwDOAD-Lgs5td0Go",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-01T17:48:13Z",
          "updated_at": "2023-12-01T17:48:13Z",
          "author_association": "MEMBER",
          "body": "@thibaudcolas So this is not something the Steering Council has traditionally done - it pretty much only exists as a last-stop vote on DEPs if there's disagreement, and is meant to generally let the community reach consensus if it can. Would it be a useful thing for it to do? I think so, but that's not how its charter is written right now nor the pretense under which its members were elected.\r\n\r\nSpeaking on a personal level and not with my SC hat on, I'd be happy to give my opinion where it's useful but I also haven't done a great deal of accessibility work, especially in the last decade - working entirely on the backend-infrastructure side of things means that the number of humans who interact with my systems is incredibly small.\r\n\r\nThe guidelines as they are now in the PR seem very reasonable - directional rather than strict, providing clear concrete ways of testing and not too long. The one thing I would want us to have a position on, as a project, is where the bar is for turning down features or PRs because they are not accessible - how strict are we? I personally think it's fine if they _could be made accessible_ without big code changes but don't come fully accessible due to the contributor's time or skillset, but that is not very clear to me reading it right now.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1836532136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1841354057",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1841354057",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1841354057,
          "node_id": "IC_kwDOAD-Lgs5twNVJ",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-05T18:17:12Z",
          "updated_at": "2023-12-05T18:17:12Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @thibaudcolas, I read the HTML guidelines. Thank you for working on this!\r\n\r\nMy feedback is based on the fact that I'm not an expert in accessibility and that many of the things I've seen or learn are due to doing and reading reviews in the Django project. So with that spirit, my first reaction to this guideline proposal was \"this is great stuff but I have no idea how to do it or how to comply with this\".\r\n\r\nTo that extent, I think it would be super important to accompany this contribution guide with a handful of How-Tos. And this guide could link to specific a How-To depending on the guide context. Has this been considered?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1841354057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1842250001",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1842250001",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1842250001,
          "node_id": "IC_kwDOAD-Lgs5tzoER",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-06T07:31:05Z",
          "updated_at": "2023-12-06T07:43:41Z",
          "author_association": "MEMBER",
          "body": "@andrewgodwin ah thanks Andrew, that\u2019s probably my bad for not understanding the remit of the council. Essentially I was trying to figure of all the \"senior contributor\" groups in Django land, which one(s) would be a good fit to check the guidelines will be good enough for future contributors. I referred to [how the steering council is described in docs](https://docs.djangoproject.com/en/dev/internals/organization/#steering-council) and descriptions of the [technical advisory team](https://www.djangoproject.com/foundation/teams/#technical-advisory-team-team) and [technical team](https://www.djangoproject.com/foundation/teams/#technical-team-team) to figure this out.\r\n\r\nI went for the steering council because of the \"_Their main concern is to maintain the quality and stability of the Django Web Framework._\", which this is very much about, but can also take this elsewhere if you think it makes more sense? Perhaps you could help us by defining what is \"enough reviewing\" for something like this?\r\n\r\n> The one thing I would want us to have a position on, as a project, is where the bar is for turning down features or PRs because they are not accessible - how strict are we? I personally think it's fine if they could be made accessible without big code changes but don't come fully accessible due to the contributor's time or skillset, but that is not very clear to me reading it right now.\r\n\r\nInteresting, do you think that\u2019s something for those guidelines to cover? From my perspective this feels like something where we would be pragmatic. There are lots of issues in the UI right now, so I\u2019d say it\u2019s fine if new work comes with fewer \"accessibility issues per line of code\" than there are right now. But gradually as the quality gets higher, we\u2019d want to be stricter.\r\n\r\nIs this kind of sliding scale of quality used elsewhere in Django contributions either formally or informally for similar things where contributor expertise varies a lot? For example amount of docs, performance, security, amount or type of tests, etc\r\n\r\n---\r\n\r\n@nessita thanks for the feedback \u263a\ufe0f we\u2019ve discussed adding more guidance / linking to more resources. I think people are generally keen. I was hesitant initially (because of the work involved), but I think it\u2019s a great point that it\u2019ll be invaluable to people who are new to this, so this feels even more important for us to do.\r\n\r\nCould you comment on specific points of the proposed guidelines you\u2019d think need a \"how-to\"? As far as the work involved \u2013 there\u2019s lots of great resources out there. We\u2019d need to review a few options, and have enough agreement of which ones are high-quality enough to be referenced in the Django docs.\r\n\r\nDo we have any kind of policy on what is allowed or not as far as linking to external sites?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1842250001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1843392881",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1843392881",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1843392881,
          "node_id": "IC_kwDOAD-Lgs5t3_Fx",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-06T17:56:26Z",
          "updated_at": "2023-12-06T17:56:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Could you comment on specific points of the proposed guidelines you\u2019d think need a \"how-to\"? As far as the work involved \u2013 there\u2019s lots of great resources out there. We\u2019d need to review a few options, and have enough agreement of which ones are high-quality enough to be referenced in the Django docs.\r\n> \r\n> Do we have any kind of policy on what is allowed or not as far as linking to external sites?\r\n\r\nAs far as I know, we prefer not to link to external sites unless they are super well known and stable (like python.org).\r\n\r\nMy initial thinking on providing How-Tos was that we would write and provide those ourselves, not linking to external sites. Specifically, I was hoping we would add new pages to our \"How-to\" guides (https://docs.djangoproject.com/en/5.0/howto/). A few I can think of:\r\n\r\n* How to use keyboard navigation (in the admin and perhaps \"in your site\")\r\n* How to (and when) properly use the aria* attributes in widgets and other parts of a site. Perhaps mention screen readers here? \r\n* How to user voice control systems, with a focus (perhaps?) on non Apple devices\r\n\r\nThen, the accessibility guide proposed proposed in this PR has, IMHO, some \"scary to newbies parts\" such as:\r\n\r\n> The best way to do this effectively is to take accessibility considerations into account as part of designing features. If in doubt, consult with users who rely on assistive technologies or with accessibility experts.\r\n\r\nAs a contributor with little or no experience with accessibility, reading that paragraph may make then feel like they should know beforehand what are the \"accessibility considerations\", and that if they don't, they should consult with users/experts. But who are those users and experts? Where are they? How can they reach them? It feels a little like we are making them do (more) homework and I fear that will discourage them. I would suggest that we rework this text to:\r\n\r\n1. Link \"accessibility considerations\" to a list (built by us) about the actual considerations we expect to be covered\r\n2. Provide ways of contact the groups of users and experts. Hopefully this is just a link to the accessibility Discord channel or to a Forum category\r\n\r\nI'll add a few more suggestions/comments as PR comments. Thanks!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1843392881/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1843410088",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1843410088",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1843410088,
          "node_id": "IC_kwDOAD-Lgs5t4DSo",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-06T18:06:28Z",
          "updated_at": "2023-12-06T18:06:28Z",
          "author_association": "MEMBER",
          "body": "@thibaudcolas I believe the problem is that there is no \"senior contributor\" group after the dissolution of Django Core, rather deliberately in that case. I'm not sure I agree with it entirely, but that was the intention, and so you'll basically just have to rely on whatever consensus you can get from whoever is interested.\r\n\r\nI agree the Steering Council/Technical Board descriptions imply that it might do this, but it has not and DEP-10 does not provide for it to.\r\n\r\nAs for the guidelines around strictness - I think it is especially important to say the implied part out loud (that progressive improvement in small parts is better than demanding perfection). We don't want to discourage people from contributing, we want to encourage them to instead make things a little bit better every time.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1843410088/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1847208021",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1847208021",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1847208021,
          "node_id": "IC_kwDOAD-Lgs5uGihV",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-08T14:00:43Z",
          "updated_at": "2023-12-08T15:33:31Z",
          "author_association": "MEMBER",
          "body": "Thanks @andrewgodwin, based on your comment I feel like we have enough senior contributors involved as far as consensus then (assuming people who have already reviewed will be happy to re-review further down the line).\r\n\r\nI\u2019ll address the point about strictness of the guidelines directly in there in a future draft.\r\n\r\n---\r\n\r\n@nessita thank you for the feedback \ud83d\ude0c. I\u2019ve replied to specific points I\u2019m not clear on. For how-to content, I agree this is important material for us to make available but I have issues with the approach you suggested \u2013 specifically that it needs to be content we write and maintain in the Django docs, and that you recommend only merging the guidelines when this content is available. My concerns are that:\r\n\r\n- At the current pace, having to write this content as a precondition to adopting those guidelines, will delay adoption of the guidelines by multiple months. We have a very small group of people who would be able to research, author, and review this content.\r\n- There isn\u2019t that much specific to Django to warrant writing \"our own\" material. The one thing I could think of is perhaps clearly sign-posting all the known issues so people don\u2019t spend their time testing those, but that feels more like \"working document\" material than \"how-to in the docs\".\r\n- We\u2019re not that good at accessibility compared to some of the more established experts out there. There will be much better resources out there than what we can provide, and it\u2019ll be simpler to keep our guidelines up-to-date if we can switch references over time as needed, rather than having to write our own material always.\r\n\r\nOn the specific three you suggested,\r\n\r\n> How to use keyboard navigation (in the admin and perhaps \"in your site\")\r\n\r\nI\u2019d like us to have a how-to about that but there\u2019s nothing specific to Django here aside from warning people about current known issues. In terms of writing effort, for me this would be on the order of 5-10 hours of work for a good first draft (so about 2-3 months depending on how much of my \"Django contributions\" time I spend on this). Finding the one best link is probably closer to 1h of work.\r\n\r\n> How to (and when) properly use the aria* attributes in widgets and other parts of a site. Perhaps mention screen readers here?\r\n\r\nAgain for a very minimal version of this, we\u2019re talking at least 10 hours of work (so 2-3 months for me) to produce something that won\u2019t cover any of the specifics of Django. A how-to with Django specifics (templates, context, multilingual support) would be very interesting, and take on the order of 20-30 hours (so I\u2019d say 6 months if it was me writing it).\r\n\r\n> How to user voice control systems, with a focus (perhaps?) on non Apple devices\r\n\r\nPersonally I\u2019ve never used voice control systems on anything but Apple devices. I\u2019m not even aware of what voice control systems are available elsewhere, aside from Dragon on Windows which costs a fortune. Such a guide would definitely require covering Dragon, so we\u2019re talking 30-50 hours of work for someone like me to get up to speed, finding funding for a budget of about $1000. I can\u2019t really recommend we\u2019d invest time on this but if we did I\u2019d say it\u2019s also on the order of 6 months to a year of work at the current pace.\r\n\r\nI\u2019m not sure if those time estimates are in line with people\u2019s expectations or not. I guess to explain the effort needed, there won\u2019t necessarily need to be much writing but we\u2019d need a fair amount of research. I\u2019d personally only feel comfortable writing this kind of material if it ends up being better for contributors than other online resources, which is quite a high bar as there are excellent resources out there.\r\n\r\n---\r\n\r\nSo with the team that we have currently to work on this, I\u2019d recommend we spend our time focusing on more minimal guidelines and extend those guidelines with external resources where there\u2019s a need. If people want to write how-tos in the future that sounds great to me, though I\u2019d rather those people contributed to accessibility efforts in other ways.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1847208021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1865765366",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1865765366",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1865765366,
          "node_id": "IC_kwDOAD-Lgs5vNVH2",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-12-21T07:33:37Z",
          "updated_at": "2024-01-11T16:45:02Z",
          "author_association": "MEMBER",
          "body": "@django/accessibility discussed this point about how-tos in our last meeting. We\u2019re keen to proceed with references to _external_ how-tos in the interest of time / ROI for the reasons I outlined above. @nessita could you confirm whether that seems ok to you?\r\n\r\nIf people see a need for more Django-specific resources, we thought we could produce material on a theme of \"top 10 things to test in Django for \\<specific accessibility consideration\\>\". For example, we could produce more documentation for components with complex keyboard interactions. Or document correct and incorrect patterns of color use in Django.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1865765366/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1891452471",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1891452471",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1891452471,
          "node_id": "IC_kwDOAD-Lgs5wvUY3",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-15T07:20:43Z",
          "updated_at": "2024-01-15T07:21:44Z",
          "author_association": "MEMBER",
          "body": "@nessita \ud83d\udc4b this is waiting for your reply. I\u2019ve updated to wrap at 79 characters or below everywhere, and address the points of feedback about specific instructions on when to test. Could you either take a look, or delegate this to someone else if you don\u2019t have the time?\r\n\r\nIn the meantime I have updated [the guidelines\u2019 HTML preview](https://django-docs-preview.netlify.app/internals/contributing/writing-code/accessibility).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1891452471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1891497309",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1891497309",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1891497309,
          "node_id": "IC_kwDOAD-Lgs5wvfVd",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-15T07:49:28Z",
          "updated_at": "2024-01-15T07:55:18Z",
          "author_association": "MEMBER",
          "body": "> Could you either take a look, or delegate this to someone else if you don\u2019t have the time?\r\n\r\nHey @thibaudcolas \u2014\u00a0the Fellows have a much higher workload than fits in the time available. Please be patient, and understand that pressure for an early review is unhelpful, and is a cause of stress. (There's plenty of that coming from folks who aren't high-visibility members of the community.) It's almost certain that @nessita has looked at this several times, and is just trying to find the mental space needed to reply appropriately. I understand you'll be keen to push this forwards, but she'll/they'll get to it in their time. Thanks \ud83d\ude4f",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1891497309/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1892746951",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1892746951",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1892746951,
          "node_id": "IC_kwDOAD-Lgs5w0QbH",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-15T20:45:47Z",
          "updated_at": "2024-01-15T20:45:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @thibaudcolas, this review is on my to-do list, and as mentioned 4 days ago when you reached out on Slack, I intend to elevate its priority. It would be beneficial if you could provide additional context regarding the urgency and the need for repeated reminders.\r\n\r\nI still require a good chunk of uninterrupted time to thoroughly read the latest version of the doc and provide additional feedback. This is especially important because, in principle, I don't agree with one of the latest answers stating that How-Tos would not be included as part of our docs. To respond properly and constructively to that, I need to re-read the PR text, the associated links, and the external tutorials to feel comfortable that linking to external sites is a good experience for contributors.\r\n\r\nI hope that makes sense! :hugs: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1892746951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1893500340",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1893500340",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1893500340,
          "node_id": "IC_kwDOAD-Lgs5w3IW0",
          "user": {
            "login": "thibaudcolas",
            "id": 877585,
            "node_id": "MDQ6VXNlcjg3NzU4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/877585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibaudcolas",
            "html_url": "https://github.com/thibaudcolas",
            "followers_url": "https://api.github.com/users/thibaudcolas/followers",
            "following_url": "https://api.github.com/users/thibaudcolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/thibaudcolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thibaudcolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thibaudcolas/subscriptions",
            "organizations_url": "https://api.github.com/users/thibaudcolas/orgs",
            "repos_url": "https://api.github.com/users/thibaudcolas/repos",
            "events_url": "https://api.github.com/users/thibaudcolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thibaudcolas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-16T10:49:38Z",
          "updated_at": "2024-01-16T10:49:58Z",
          "author_association": "MEMBER",
          "body": "Thank you \ud83d\ude4f I re-raised this because (to me) this is the top priority on the accessibility team\u2019s list. Having this in place would help us in delegating reviews to people outside the team / just be faster at reviewing contributors\u2019 pull requests and bug reports like https://code.djangoproject.com/ticket/35115.\r\n\r\n@nessita sorry if I\u2019m annoying by reaching out on Slack and here \u2013 I just commented here because I hadn\u2019t updated the PR when I raised this on Slack.\r\n\r\nI appreciate time is short for everyone but all we need here is a reply on \"are how-tos really a must to merge this or not\". If it\u2019s yes, then we\u2019ll figure out how to get the team working on those how-tos over 2024, and in the meantime publish those guidelines elsewhere. If it\u2019s \"no\", then I can proceed with asking others here for review.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1893500340/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1894108952",
          "html_url": "https://github.com/django/django/pull/17338#issuecomment-1894108952",
          "issue_url": "https://api.github.com/repos/django/django/issues/17338",
          "id": 1894108952,
          "node_id": "IC_kwDOAD-Lgs5w5c8Y",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-01-16T16:38:53Z",
          "updated_at": "2024-01-16T16:38:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Thank you \ud83d\ude4f I re-raised this because (to me) this is the top priority on the accessibility team\u2019s list. Having this in place would help us in delegating reviews to people outside the team / just be faster at reviewing contributors\u2019 pull requests and bug reports like https://code.djangoproject.com/ticket/35115.\r\n\r\nUnderstood, thanks for the extra rationale.\r\n\r\n> I appreciate time is short for everyone but all we need here is a reply on \"are how-tos really a must to merge this or not\". If it\u2019s yes, then we\u2019ll figure out how to get the team working on those how-tos over 2024, and in the meantime publish those guidelines elsewhere. If it\u2019s \"no\", then I can proceed with asking others here for review.\r\n\r\nThat's the conundrum I face: my current response is *I'm not sure*. I do believe that internal how-tos are necessary, perhaps starting with a simple task, such as building a basic but accessible page using Django. However, given your strong stance that how-tos should link to external resources, I feel it's essential to invest time in reviewing those external resources. This way, I can better evaluate whether they fulfill the needs of Django users and contributors before potentially contradicting that approach.\r\n\r\nWould you please share a short list of the external how-tos that were considered for linking from the Django docs?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1894108952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/8119",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/8119/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/8119/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/8119/events",
      "html_url": "https://github.com/django/django/pull/8119",
      "id": 210429854,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTA4MDc1NzA0",
      "number": 8119,
      "title": "Fixed #25367 -- Allowed boolean expressions in QuerySet.filter() and exclude().",
      "user": {
        "login": "schinckel",
        "id": 23411,
        "node_id": "MDQ6VXNlcjIzNDEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/schinckel",
        "html_url": "https://github.com/schinckel",
        "followers_url": "https://api.github.com/users/schinckel/followers",
        "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
        "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
        "organizations_url": "https://api.github.com/users/schinckel/orgs",
        "repos_url": "https://api.github.com/users/schinckel/repos",
        "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
        "received_events_url": "https://api.github.com/users/schinckel/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 50,
      "created_at": "2017-02-27T09:30:20Z",
      "updated_at": "2019-11-07T19:47:45Z",
      "closed_at": "2019-08-29T08:13:00Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/8119",
        "html_url": "https://github.com/django/django/pull/8119",
        "diff_url": "https://github.com/django/django/pull/8119.diff",
        "patch_url": "https://github.com/django/django/pull/8119.patch",
        "merged_at": "2019-08-29T08:13:00Z"
      },
      "body": "Here is a first crack at making it possible to do nice things like:\r\n\r\n    queryset.filter(Exists(subquery))\r\n\r\nAlso:\r\n\r\n    queryset.annotate(foo=Case(When(Exists(subquery), then=...))\r\n",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/8119/reactions",
        "total_count": 16,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 6,
        "confused": 0,
        "heart": 10,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/8119/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/282670435",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-282670435",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 282670435,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjY3MDQzNQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-27T09:33:31Z",
          "updated_at": "2017-02-27T09:33:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'm well aware of the superficial issues with this PR (imports and the like). What I want to know is if this is an appropriate approach to implement filter expressions.\r\n\r\n@jarshwah and I have been discussing this for some time: we thought there might be a whole lot more work to it than this, but it seems to me that we can just inject some logic in to explicitly handle `Expression` objects, as long as they have an `output_field` that is a `BooleanField`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/282670435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/282681280",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-282681280",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 282681280,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjY4MTI4MA==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-27T10:20:03Z",
          "updated_at": "2017-02-27T10:20:03Z",
          "author_association": "MEMBER",
          "body": "A few things off the top of my head:\r\n\r\n- Does this also work with `exclude()`? \r\n- Does it handle `__related` fields?\r\n- Do regular lookups (perhaps by adding a boolean output_field) work in the same way?\r\n\r\nThis is really cool though. I expected there to be a lot more work involved.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/282681280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/282979775",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-282979775",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 282979775,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjk3OTc3NQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-28T08:52:21Z",
          "updated_at": "2017-02-28T08:52:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yes. `.exclude(Exists(foo))`, and also `.filter(~Exists(...))`, and `.exclude(~Exists(...))` all appear to work.\r\n\r\nI'm not sure about the other two: can you elaborate on what sort of queries you mean? Anything that is an expression that has an `output_field` that is a boolean should work.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/282979775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/283009553",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-283009553",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 283009553,
          "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzAwOTU1Mw==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-02-28T11:00:33Z",
          "updated_at": "2017-02-28T11:00:33Z",
          "author_association": "MEMBER",
          "body": "2. Never mind - Exists takes a queryset which sets up joins etc.\r\n\r\n3. Does using Lookups as Expressions work? See:\r\n\r\n```\r\nfrom django.db.models.lookups import GreaterThan\r\n# Lookups don't currently define an output_field, but if they did..\r\nModel.objects.filter(GreaterThan('counter', 3))\r\n```\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/283009553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/306099431",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-306099431",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 306099431,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjA5OTQzMQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-06-05T04:13:51Z",
          "updated_at": "2017-06-05T04:13:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "Okay, @funkybob just showed me a pair of EXPLAINs that shows an order of magnitude improvement by only having the EXISTS in the WHERE clause, rather than in the select.\r\n\r\nI'm surprised, as I thought postgres would do a better job of optimising this.\r\n\r\nWith EXISTS in SELECT: https://explain.depesz.com/s/xaH\r\n\r\nWith EXISTS only in WHERE: https://explain.depesz.com/s/nc9m",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/306099431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/307605964",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-307605964",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 307605964,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzYwNTk2NA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-06-11T04:37:43Z",
          "updated_at": "2017-06-11T04:37:43Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah Currently `Model.objects.filter(GreaterThan('foo', 2))` fails, because the `Lookup` object doesn't like a string (or an `F`, actually).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/307605964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/307606001",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-307606001",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 307606001,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzYwNjAwMQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-06-11T04:39:07Z",
          "updated_at": "2017-06-11T04:39:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think we could possibly avoid the need for a `Lookup` to define an `output_field`: wouldn't all lookups imply they are a boolean output? If so, we can allow any Lookup in a filter.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/307606001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/307606154",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-307606154",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 307606154,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzYwNjE1NA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-06-11T04:43:57Z",
          "updated_at": "2017-06-11T04:43:57Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hmm. I'm not sure it's possible without _quite_ a lot of work to do anything with a `Lookup`, as it is passed something as `lhs` that already has an `output_field`, and without that, we can't even instantiate a `GreaterThan`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/307606154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/312421788",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-312421788",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 312421788,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQyMTc4OA==",
          "user": {
            "login": "funkybob",
            "id": 301363,
            "node_id": "MDQ6VXNlcjMwMTM2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/301363?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/funkybob",
            "html_url": "https://github.com/funkybob",
            "followers_url": "https://api.github.com/users/funkybob/followers",
            "following_url": "https://api.github.com/users/funkybob/following{/other_user}",
            "gists_url": "https://api.github.com/users/funkybob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/funkybob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/funkybob/subscriptions",
            "organizations_url": "https://api.github.com/users/funkybob/orgs",
            "repos_url": "https://api.github.com/users/funkybob/repos",
            "events_url": "https://api.github.com/users/funkybob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/funkybob/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-07-01T09:33:10Z",
          "updated_at": "2017-07-01T09:33:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "I am a person and I approve of this feature :)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/312421788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/312610528",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-312610528",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 312610528,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjYxMDUyOA==",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-07-03T10:30:41Z",
          "updated_at": "2017-07-03T10:30:49Z",
          "author_association": "MEMBER",
          "body": "> Oxford comma. The best type of comma.\r\n\r\n\ud83d\udc4c I'm a fan, though I'm not sure Django has an official policy.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/312610528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/320573744",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-320573744",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 320573744,
          "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU3Mzc0NA==",
          "user": {
            "login": "jarshwah",
            "id": 541083,
            "node_id": "MDQ6VXNlcjU0MTA4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/541083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarshwah",
            "html_url": "https://github.com/jarshwah",
            "followers_url": "https://api.github.com/users/jarshwah/followers",
            "following_url": "https://api.github.com/users/jarshwah/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions",
            "organizations_url": "https://api.github.com/users/jarshwah/orgs",
            "repos_url": "https://api.github.com/users/jarshwah/repos",
            "events_url": "https://api.github.com/users/jarshwah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarshwah/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2017-08-07T05:43:51Z",
          "updated_at": "2017-08-07T05:43:51Z",
          "author_association": "MEMBER",
          "body": "Let's get this one merged I reckon. I've made a suggestion for a small improvement, but that's probably all it needs. Couldn't find the ticket (easily) so a link here or a number would be aces.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/320573744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/369854208",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-369854208",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 369854208,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTg1NDIwOA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-02T08:25:39Z",
          "updated_at": "2018-03-06T03:54:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jarshwah Finally found the issue: https://code.djangoproject.com/ticket/25367",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/369854208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/371681491",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-371681491",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 371681491,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY4MTQ5MQ==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-09T01:20:59Z",
          "updated_at": "2018-03-09T01:20:59Z",
          "author_association": "MEMBER",
          "body": "Thanks for your work on this @schinckel! It's great to see no invasive changes are required to make this work appropriately!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/371681491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373577472",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373577472",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373577472,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU3NzQ3Mg==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T01:45:38Z",
          "updated_at": "2018-03-16T01:45:38Z",
          "author_association": "MEMBER",
          "body": "Matthew, if you'd like some assistance with the Oracle failures, maybe @felixxm can help.\r\n```\r\n======================================================================\r\nERROR: test_case_valid_in_filter_if_boolean_output_field (expressions.tests.BasicExpressionsTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/backends/oracle/base.py\", line 510, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\ncx_Oracle.DatabaseError: ORA-00920: invalid relational operator\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/tim/code/django/tests/expressions/tests.py\", line 602, in test_case_valid_in_filter_if_boolean_output_field\r\n    ordered=False\r\n  File \"/home/tim/code/django/django/test/testcases.py\", line 931, in assertQuerysetEqual\r\n    items = map(transform, qs)\r\n  File \"/home/tim/code/django/django/db/models/query.py\", line 267, in __iter__\r\n    self._fetch_all()\r\n  File \"/home/tim/code/django/django/db/models/query.py\", line 1171, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/home/tim/code/django/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\r\n  File \"/home/tim/code/django/django/db/models/sql/compiler.py\", line 1053, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 68, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 77, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/backends/oracle/base.py\", line 510, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\ndjango.db.utils.DatabaseError: ORA-00920: invalid relational operator\r\n\r\n======================================================================\r\nERROR: test_exists_in_filter (expressions.tests.BasicExpressionsTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/backends/oracle/base.py\", line 510, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\ncx_Oracle.DatabaseError: ORA-00920: invalid relational operator\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/tim/code/django/tests/expressions/tests.py\", line 591, in test_exists_in_filter\r\n    self.assertCountEqual(outer_2, outer_1)\r\n  File \"/opt/python3.6.4/lib/python3.6/unittest/case.py\", line 1165, in assertCountEqual\r\n    first_seq, second_seq = list(first), list(second)\r\n  File \"/home/tim/code/django/django/db/models/query.py\", line 267, in __iter__\r\n    self._fetch_all()\r\n  File \"/home/tim/code/django/django/db/models/query.py\", line 1171, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/home/tim/code/django/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\r\n  File \"/home/tim/code/django/django/db/models/sql/compiler.py\", line 1053, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 68, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 77, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/home/tim/code/django/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/tim/code/django/django/db/backends/oracle/base.py\", line 510, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\ndjango.db.utils.DatabaseError: ORA-00920: invalid relational operator\r\n``",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373577472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373598311",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373598311",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373598311,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU5ODMxMQ==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T04:12:54Z",
          "updated_at": "2018-03-16T04:12:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yeah, that would be good. I don\u2019t really have an Oracle setup. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373598311/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373774865",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373774865",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373774865,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc3NDg2NQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T16:48:08Z",
          "updated_at": "2018-03-16T16:48:08Z",
          "author_association": "MEMBER",
          "body": "np, I will try to check this at the weekend.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373774865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373840388",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373840388",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373840388,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg0MDM4OA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T20:46:52Z",
          "updated_at": "2018-03-16T20:46:52Z",
          "author_association": "MEMBER",
          "body": "@schinckel Oracle doesn't allow booleans in the `SELECT` list that's why we wrap it with a `CASE WHEN ...` expression (see [`Exists.as_oracle()`](https://github.com/django/django/blob/master/django/db/models/expressions.py#L1069-L1075)). Therefore an query is incorrect on Oracle e.g. in the `test_exists_in_filter()`:\r\n```python\r\n>>> outer_1 = Employee.objects.filter(Exists(inner))\r\n>>> print(outer_1.query)\r\nSELECT\r\n    \"EXPRESSIONS_EMPLOYEE\".\"ID\",\r\n    \"EXPRESSIONS_EMPLOYEE\".\"FIRSTNAME\",\r\n    \"EXPRESSIONS_EMPLOYEE\".\"LASTNAME\",\r\n    \"EXPRESSIONS_EMPLOYEE\".\"SALARY\"\r\nFROM\r\n    \"EXPRESSIONS_EMPLOYEE\"\r\nWHERE\r\n   CASE\r\n       WHEN EXISTS(\r\n           SELECT U0.\"ID\"\r\n           FROM \"EXPRESSIONS_COMPANY\" U0\r\n           WHERE U0.\"CEO_ID\" = (\"EXPRESSIONS_EMPLOYEE\".\"ID\")\r\n       )\r\n       THEN 1\r\n       ELSE 0\r\n   END\r\n```\r\nIt seems that the easiest solution will be to compare it always with `True`, i.e.:\r\n```sql\r\nWHERE CASE WHEN EXISTS(...) THEN 1 ELSE 0 END = True\r\nWHERE CASE WHEN NOT EXISTS(...) THEN 1 ELSE 0 END = True\r\n```\r\nthis should work also on other backends (without wrapping):\r\n```sql\r\nWHERE EXISTS(...) = True\r\nWHERE NOT EXISTS(...) = True\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373840388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373844543",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373844543",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373844543,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg0NDU0Mw==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T21:04:15Z",
          "updated_at": "2018-03-16T21:04:15Z",
          "author_association": "MEMBER",
          "body": "I'd be great if you could avoid the `= True` on backends not requiring it. I suggest we use a database feature to determine whether or not it should be added instead of unconditionally adding it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373844543/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373848418",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373848418",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373848418,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg0ODQxOA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T21:21:36Z",
          "updated_at": "2018-03-16T21:21:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'd prefer this too, but I'm not sure how to do that: we need to know at the time of generating the SQL where the clause is in a query, but we don't know this then, only at the time it is resolved (from what I can see).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373848418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/373850810",
          "html_url": "https://github.com/django/django/pull/8119#issuecomment-373850810",
          "issue_url": "https://api.github.com/repos/django/django/issues/8119",
          "id": 373850810,
          "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg1MDgxMA==",
          "user": {
            "login": "schinckel",
            "id": 23411,
            "node_id": "MDQ6VXNlcjIzNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinckel",
            "html_url": "https://github.com/schinckel",
            "followers_url": "https://api.github.com/users/schinckel/followers",
            "following_url": "https://api.github.com/users/schinckel/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions",
            "organizations_url": "https://api.github.com/users/schinckel/orgs",
            "repos_url": "https://api.github.com/users/schinckel/repos",
            "events_url": "https://api.github.com/users/schinckel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinckel/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2018-03-16T21:32:28Z",
          "updated_at": "2018-03-16T21:32:28Z",
          "author_association": "CONTRIBUTOR",
          "body": "Okay, we can mark a given `Exists` as being used within a `WHERE`, and then handle in the `as_oracle`.\r\n\r\nI have no idea if this will work: this syntax was forbidden in Postgres.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/373850810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/14587",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/14587/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/14587/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/14587/events",
      "html_url": "https://github.com/django/django/pull/14587",
      "id": 936084651,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NjgyODk2MTY0",
      "number": 14587,
      "title": "Refs #29898 -- Made ProjectState encapsulate alterations in relations registry.",
      "user": {
        "login": "manav014",
        "id": 51242628,
        "node_id": "MDQ6VXNlcjUxMjQyNjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/manav014",
        "html_url": "https://github.com/manav014",
        "followers_url": "https://api.github.com/users/manav014/followers",
        "following_url": "https://api.github.com/users/manav014/following{/other_user}",
        "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
        "organizations_url": "https://api.github.com/users/manav014/orgs",
        "repos_url": "https://api.github.com/users/manav014/repos",
        "events_url": "https://api.github.com/users/manav014/events{/privacy}",
        "received_events_url": "https://api.github.com/users/manav014/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 21,
      "created_at": "2021-07-02T21:54:03Z",
      "updated_at": "2021-08-25T10:14:09Z",
      "closed_at": "2021-08-25T07:52:37Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/14587",
        "html_url": "https://github.com/django/django/pull/14587",
        "diff_url": "https://github.com/django/django/pull/14587.diff",
        "patch_url": "https://github.com/django/django/pull/14587.patch",
        "merged_at": "2021-08-25T07:52:37Z"
      },
      "body": "The population of Central Registry in ProjectState proxied methods.",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/14587/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/14587/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/873274623",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-873274623",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 873274623,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzI3NDYyMw==",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-02T21:55:21Z",
          "updated_at": "2021-07-02T21:55:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have added the logic to populate the central mapping in ProjectState methods. Please provide a review so that I may start working on Tests.\r\nRegards,\r\nManav",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/873274623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/876806573",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-876806573",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 876806573,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjgwNjU3Mw==",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-08T23:25:47Z",
          "updated_at": "2021-07-08T23:25:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hey @charettes!\r\nI even feel that using the traditional  Dictionary Mapping won't be effective. But I tried to figure out something else which could perform the action in a constant time. But I am unable to come up with an idea for the same. May you please help me out in a bit more detail about how can we use `reverse map` to reduce the time complexity or which Data Structure we should prefer for the mapping. I am thinking about it for the last 2 days and unable to find an alternative.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/876806573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/876806969",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-876806969",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 876806969,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjgwNjk2OQ==",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-08T23:26:59Z",
          "updated_at": "2021-07-08T23:27:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "I even thought to change the properties of `fields `of a `ModelState `and populate `to `attribute in the field instances itself. But I think that won't be feasible.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/876806969/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/879410778",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-879410778",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 879410778,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTQxMDc3OA==",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-13T21:19:53Z",
          "updated_at": "2021-07-13T21:20:44Z",
          "author_association": "CONTRIBUTOR",
          "body": "Would it be feasible to change the properties of `fields in ModelStates`? Like populating the `remote_field `and other properties of `ModelState fields` and making them work similar to that of `__fake__ ` model fields.  This will perhaps even maintain the backward compatibility. \r\n\r\nI am not aware of the consequences of the same. Please let me know if this will cause something inappropriate? If this will have some wrong consequences then we will continue with central mapping.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/879410778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/879575823",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-879575823",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 879575823,
          "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTU3NTgyMw==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-14T04:25:08Z",
          "updated_at": "2021-07-14T04:39:34Z",
          "author_association": "MEMBER",
          "body": "> I am not aware of the consequences of the same. Please let me know if this will cause something inappropriate? If this will have some wrong consequences then we will continue with central mapping.\r\n\r\nWe want to avoid doing that as that will make cache invalidation trickier. Looking back at it it seems `ProjectState.relations` already has all that you need thanks to the work of @David-Wobrock in #12688. As hinted above it's a simple structure of nested `dict`s. In other words, the proper reverse registry primitives already exists\r\n\r\nI guess that we'll want to make sure `.relations` get auto-populated on access instead (maybe replace `resolve_fields_and_relations` by a `cached_property`) and that any alteration methods you added updates it if it's already populated or do nothing otherwise. From there you should be able to write tests that create `ProjectState` instances, assert against their `.relations` and perform operations (e.g. `alter_field`, `rename_model`, ...) and assert `.relations` has been properly updated.\r\n\r\nHere's an example to get you started.\r\n\r\n```python\r\ndef test_rename_model(self):\r\n     project_state = ProjectState()\r\n     project_state.add_model(ModelState('tests', 'bar', {'id': AutoField()}))\r\n     project_state.add_model(ModelState('tests', 'foo', {'id': AutoField(), 'bar': ForeignKey('tests.bar')}))\r\n     self.assertEqual(set(project_state.relations['tests', 'bar']), {('tests', 'foo')})\r\n     project_state.rename_model('tests', 'bar', 'baz')\r\n     self.assertNotIn(('tests', 'bar'), project_state.relations)\r\n     self.assertEqual(set(project_state.relations['tests', 'baz']), {('tests', 'foo')})\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/879575823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/882125354",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-882125354",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 882125354,
          "node_id": "IC_kwDOAD-Lgs40lCoq",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-18T22:33:48Z",
          "updated_at": "2021-07-18T22:33:48Z",
          "author_association": "CONTRIBUTOR",
          "body": "Apologies for closing the PR by mistake because of the Laptop malfunctioning.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/882125354/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/882125377",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-882125377",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 882125377,
          "node_id": "IC_kwDOAD-Lgs40lCpB",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-18T22:34:02Z",
          "updated_at": "2021-07-18T22:34:02Z",
          "author_association": "CONTRIBUTOR",
          "body": "First of all Thanks to @David-Wobrock for the much-needed work. \r\n@charettes Please correct me if I am wrong. \r\nAll we have to do is as follows:\r\n1. make `resolve_fields_and_relations`  a `cached_property`\r\n2. make a call to `resolve_fields_and_relations` in `ProjectState.__init__`\r\n3. if the `relations` is populated then the alteration methods should make their changes in the same otherwise they have to make a call to `resolve_fields_and_relations`.\r\n4. Writing Tests(Of Course)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/882125377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/883243742",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-883243742",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 883243742,
          "node_id": "IC_kwDOAD-Lgs40pTre",
          "user": {
            "login": "David-Wobrock",
            "id": 8582749,
            "node_id": "MDQ6VXNlcjg1ODI3NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8582749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/David-Wobrock",
            "html_url": "https://github.com/David-Wobrock",
            "followers_url": "https://api.github.com/users/David-Wobrock/followers",
            "following_url": "https://api.github.com/users/David-Wobrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/David-Wobrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/David-Wobrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/David-Wobrock/subscriptions",
            "organizations_url": "https://api.github.com/users/David-Wobrock/orgs",
            "repos_url": "https://api.github.com/users/David-Wobrock/repos",
            "events_url": "https://api.github.com/users/David-Wobrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/David-Wobrock/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-20T09:26:34Z",
          "updated_at": "2021-07-20T09:26:34Z",
          "author_association": "MEMBER",
          "body": "Hi, happy to read that this little bit of code can help you :)\r\nIt's great to see this piece of work being tackled :muscle: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/883243742/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/883872966",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-883872966",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 883872966,
          "node_id": "IC_kwDOAD-Lgs40rtTG",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-21T04:13:58Z",
          "updated_at": "2021-07-21T04:13:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have added a commit with the desired changes. \r\nAlso, @charettes  Please provide me with some references on where to start writing documentation and what shall I mention in the same.\r\nRegards\r\nManav",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/883872966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/886130460",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-886130460",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 886130460,
          "node_id": "IC_kwDOAD-Lgs400Ucc",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-07-25T00:59:51Z",
          "updated_at": "2021-07-25T00:59:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you @charettes for your suggestions so far. I have committed the desired changes.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/886130460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/894756819",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-894756819",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 894756819,
          "node_id": "IC_kwDOAD-Lgs41VOfT",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-08T07:36:06Z",
          "updated_at": "2021-08-08T07:36:06Z",
          "author_association": "CONTRIBUTOR",
          "body": "@charettes Please help me out with what shall I do now for the registry?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/894756819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/900594729",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-900594729",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 900594729,
          "node_id": "IC_kwDOAD-Lgs41rfwp",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-17T20:06:24Z",
          "updated_at": "2021-08-19T11:08:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank You @felixxm for your comments. I have made the desired changes.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/900594729/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/902951758",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-902951758",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 902951758,
          "node_id": "IC_kwDOAD-Lgs410fNO",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-20T20:54:26Z",
          "updated_at": "2021-08-20T20:54:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm I have committed the desired changes. Also, I tried to squash and rebase the commits but I messed up everything and was unable to do that. May you please help me out with what shall I do in order to squash and rebase them properly.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/902951758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/903144420",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-903144420",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 903144420,
          "node_id": "IC_kwDOAD-Lgs411OPk",
          "user": {
            "login": "manav014",
            "id": 51242628,
            "node_id": "MDQ6VXNlcjUxMjQyNjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51242628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manav014",
            "html_url": "https://github.com/manav014",
            "followers_url": "https://api.github.com/users/manav014/followers",
            "following_url": "https://api.github.com/users/manav014/following{/other_user}",
            "gists_url": "https://api.github.com/users/manav014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manav014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manav014/subscriptions",
            "organizations_url": "https://api.github.com/users/manav014/orgs",
            "repos_url": "https://api.github.com/users/manav014/repos",
            "events_url": "https://api.github.com/users/manav014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manav014/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-21T16:54:48Z",
          "updated_at": "2021-08-21T16:58:40Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank You @felixxm for the review. I have made the desired changes.\r\nAlso, I have not removed `set()` from `test_state.StateTests` tests as if I will do so, we will have to use `defaultdict` for the tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/903144420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/903443609",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-903443609",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 903443609,
          "node_id": "IC_kwDOAD-Lgs412XSZ",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-23T04:58:20Z",
          "updated_at": "2021-08-23T04:58:20Z",
          "author_association": "MEMBER",
          "body": "Squashed & rebased.\r\n\r\n@manav014 Please don't force push or rebase this branch anymore, I will handle before merging. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/903443609/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/903594809",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-903594809",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 903594809,
          "node_id": "IC_kwDOAD-Lgs4128M5",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-23T09:22:58Z",
          "updated_at": "2021-08-23T09:22:58Z",
          "author_association": "MEMBER",
          "body": "I pushed edits and extra tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/903594809/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/903845703",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-903845703",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 903845703,
          "node_id": "IC_kwDOAD-Lgs4135dH",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-23T14:52:35Z",
          "updated_at": "2021-08-23T14:52:35Z",
          "author_association": "MEMBER",
          "body": "@cjerdonek Thanks :+1: I pushed edits.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/903845703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/904336012",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-904336012",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 904336012,
          "node_id": "IC_kwDOAD-Lgs415xKM",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-24T05:34:03Z",
          "updated_at": "2021-08-24T05:34:03Z",
          "author_association": "MEMBER",
          "body": " I'm satisfied with the test coverage :detective: This should be ready to merge :confetti_ball: :partying_face:\r\n\r\n@charettes @cjerdonek Thanks for reviews :1st_place_medal: \r\n@manav014 Thanks for preparing the patch :+1:",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/904336012/reactions",
            "total_count": 6,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 5,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/904687664",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-904687664",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 904687664,
          "node_id": "IC_kwDOAD-Lgs417HAw",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-24T14:22:07Z",
          "updated_at": "2021-08-24T14:22:07Z",
          "author_association": "MEMBER",
          "body": "Tomorrow I will check changing fields to `dict`, see [comment](https://code.djangoproject.com/ticket/29899#comment:14).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/904687664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/904811923",
          "html_url": "https://github.com/django/django/pull/14587#issuecomment-904811923",
          "issue_url": "https://api.github.com/repos/django/django/issues/14587",
          "id": 904811923,
          "node_id": "IC_kwDOAD-Lgs417lWT",
          "user": {
            "login": "cjerdonek",
            "id": 355822,
            "node_id": "MDQ6VXNlcjM1NTgyMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/355822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjerdonek",
            "html_url": "https://github.com/cjerdonek",
            "followers_url": "https://api.github.com/users/cjerdonek/followers",
            "following_url": "https://api.github.com/users/cjerdonek/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjerdonek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjerdonek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjerdonek/subscriptions",
            "organizations_url": "https://api.github.com/users/cjerdonek/orgs",
            "repos_url": "https://api.github.com/users/cjerdonek/repos",
            "events_url": "https://api.github.com/users/cjerdonek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjerdonek/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2021-08-24T16:52:08Z",
          "updated_at": "2021-08-24T16:52:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "> Tomorrow I will check changing fields\r\n\r\nEspecially if it's easier for you, I thought it'd be okay to do separately as a follow-on.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/904811923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/12159",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/12159/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/12159/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/12159/events",
      "html_url": "https://github.com/django/django/pull/12159",
      "id": 530410573,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MDk5ODI4",
      "number": 12159,
      "title": "Fixed #31034 -- Added a navigation sidebar to the admin",
      "user": {
        "login": "knyghty",
        "id": 3871354,
        "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knyghty",
        "html_url": "https://github.com/knyghty",
        "followers_url": "https://api.github.com/users/knyghty/followers",
        "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
        "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
        "organizations_url": "https://api.github.com/users/knyghty/orgs",
        "repos_url": "https://api.github.com/users/knyghty/repos",
        "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
        "received_events_url": "https://api.github.com/users/knyghty/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "carltongibson",
        "id": 64686,
        "node_id": "MDQ6VXNlcjY0Njg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/carltongibson",
        "html_url": "https://github.com/carltongibson",
        "followers_url": "https://api.github.com/users/carltongibson/followers",
        "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
        "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
        "organizations_url": "https://api.github.com/users/carltongibson/orgs",
        "repos_url": "https://api.github.com/users/carltongibson/repos",
        "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/carltongibson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "carltongibson",
          "id": 64686,
          "node_id": "MDQ6VXNlcjY0Njg2",
          "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/carltongibson",
          "html_url": "https://github.com/carltongibson",
          "followers_url": "https://api.github.com/users/carltongibson/followers",
          "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
          "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
          "organizations_url": "https://api.github.com/users/carltongibson/orgs",
          "repos_url": "https://api.github.com/users/carltongibson/repos",
          "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/carltongibson/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 77,
      "created_at": "2019-11-29T15:56:16Z",
      "updated_at": "2020-08-19T18:06:51Z",
      "closed_at": "2020-05-11T17:37:40Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/12159",
        "html_url": "https://github.com/django/django/pull/12159",
        "diff_url": "https://github.com/django/django/pull/12159.diff",
        "patch_url": "https://github.com/django/django/pull/12159.patch",
        "merged_at": "2020-05-11T17:37:40Z"
      },
      "body": "https://code.djangoproject.com/ticket/31034\r\n\r\nI'm not altogether sure about my approach here. This seems to be the way that is the least disruptive to me, (almost) all the CSS is in a new file so it shouldn't affect users that have it turned off.\r\n\r\nReally I think something like a drawer that slides from the side and covers some of the page would be better, as even with it only enabled on the largest breakpoint it can be a little crowded at the minimum size (1024px). Open to suggestions here. Also couldn't find a combination of `height`s and `min-height`s that would get the sidebar to cover the whole height of the screen without breaking something.\r\n\r\nI decided to default to on since it seems like the majority of users would want that, and it's easy enough to turn off if upgrading and not wanting it.\r\n\r\nTested with latest Chrome, Firefox, Safari. Could use some eyes on other browsers.\r\n\r\nWill add tests/docs after getting some feedback.\r\n\r\nScreens:\r\n\r\n15\" Macbook:\r\n<img width=\"1440\" alt=\"Screenshot 2019-12-05 at 14 22 05\" src=\"https://user-images.githubusercontent.com/3871354/70239136-06213300-176b-11ea-81f5-cb34656f752a.png\">\r\n\r\nAt 1025px, the smallest size the sidebar will show up (a little crowded, but didn't want to add another breakpoint):\r\n<img width=\"1029\" alt=\"Screenshot 2019-12-05 at 14 24 00\" src=\"https://user-images.githubusercontent.com/3871354/70239203-2b15a600-176b-11ea-981e-f292dbb06f70.png\">\r\n",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/12159/reactions",
        "total_count": 6,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 2,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/12159/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/561698191",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-561698191",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 561698191,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTY5ODE5MQ==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-04T15:34:03Z",
          "updated_at": "2019-12-04T15:34:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "Hi, thank you very much for the work on this, it will be very much appreciated here. To get more comments, maybe you could add screenshots (both here and on the mailing list) ? \r\n\r\nI had a quick look on desktop :\r\n\r\n**breadcrumbs bar** : currently it conflicts both visually and functionnaly.\r\nI'd suggest putting the bar to the right of the menu instead of the top. I'd also suggest to remove the bar altogether for the basic admin views, as thanks to the menu, most breadcrumbs would be useless. The only point where the breadcrumbs bar makes sense is to get back to the main instance from some custom instance views (e.g. admin history).\r\n\r\n**add buttons** : is it possible to have the \"add\" button in the menu as in the admin_site view ? the \"change\" button is useless though, as it's the same than the link\r\n\r\n**folding** : for projects with many apps and apps with many models, the menu becomes really long. it would be great to be able to fold apps.\r\n\r\n**ordering/filtering** : do you plan to add some ability to order/filter items in the menu ? It's also something that's very much missing to have good navigation in the admin (even on the admin_index view)\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/561698191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/561886481",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-561886481",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 561886481,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg4NjQ4MQ==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-04T23:19:55Z",
          "updated_at": "2019-12-04T23:19:55Z",
          "author_association": "MEMBER",
          "body": "Thanks for the feedback, @olivierdalang \r\n\r\nYep, agreed, I will add some screenshots here soon.\r\n\r\nFor your suggestions:\r\n\r\n**breadcrumbs bar**: yeah it does clash visually somewhat. I'll take another look at that. I think you're right that it's redundant for a lot of pages, but I also worry that it will feel weird to only have breadcrumbs on a few specific pages. I feel like I want to leave it there, I think that having more options is better than fewer, and also that it reduces the chance of bugs if I mess with less code.\r\n\r\n**add buttons**: good idea. While you can get to the add page easily from the list, I think it's probably okay to have an `[add]` link - I'll see how it looks anyway.\r\n\r\n**folding**: I think this is a great idea, but a little impractical to implement right now. It'd be a great improvement, but for now it's a little hard to figure out how it would work. The admin just renders templates, so we can't easily keep the state of what's folded/not between reloads, at least without adding a fair amount of code (local storage, perhaps?). Another option is just to have everything folded except what is \"active\" but this seems a little useless to me. I think for now if you have so many apps/models it would make the sidebar too long, perhaps a better solution (if possible) is to make more use of groups and give people access only to the apps/models they need.\r\n\r\n**ordering/filtering**: definitely out of scope for what I want to do with this PR, but might make a nice improvement after/if this is merged.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/561886481/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/562128133",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-562128133",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 562128133,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjEyODEzMw==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-05T13:27:35Z",
          "updated_at": "2019-12-05T13:27:35Z",
          "author_association": "MEMBER",
          "body": "Added tests. It could probably use more, but need some direction on what's useful here.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/562128133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/566083209",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-566083209",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 566083209,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjA4MzIwOQ==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-16T14:25:07Z",
          "updated_at": "2019-12-16T14:25:07Z",
          "author_association": "MEMBER",
          "body": "@knyghty Please take a look at failing test and change the `ADMIN_ENABLE_NAV_SIDEBAR` setting to an admin site attribute. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/566083209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/566228608",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-566228608",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 566228608,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjIyODYwOA==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-16T20:26:22Z",
          "updated_at": "2019-12-16T20:26:22Z",
          "author_association": "MEMBER",
          "body": "@felixxm Thanks. I've moved this to be an `AdminSite` attribute. I'm having some issues with the test, I can't figure out what the issue is, other than something is apparently causing a number to be bumped by one. It seems unrelated to my code, but I don't know why it occurs here. I asked on `#django-dev` without any luck, so I'd appreciate any help debugging it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/566228608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/568290236",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-568290236",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 568290236,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODI5MDIzNg==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-12-22T18:21:48Z",
          "updated_at": "2019-12-22T18:21:48Z",
          "author_association": "MEMBER",
          "body": "@felixxm I've fixed the test by just changing the value in it.\r\n\r\nI took a look at the history of that test and it looks like the number has changed before and the test updated, so I just changed it here as well so it'll pass. I tried messing around with some inlines / formets in the admin and they seem to work okay for me. Hopefully that's ok.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/568290236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/571095915",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-571095915",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 571095915,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTA5NTkxNQ==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-01-06T10:56:40Z",
          "updated_at": "2020-01-06T10:56:40Z",
          "author_association": "CONTRIBUTOR",
          "body": "> breadcrumbs bar: (...) I also worry that it will feel weird to only have breadcrumbs on a few specific pages.\r\n\r\nThat's already the case : breadcrumbs don't appear on the admin index. It would be so much better without it :-)\r\n \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/571095915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/596197414",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-596197414",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 596197414,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjE5NzQxNA==",
          "user": {
            "login": "lostb1t",
            "id": 168401,
            "node_id": "MDQ6VXNlcjE2ODQwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/168401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lostb1t",
            "html_url": "https://github.com/lostb1t",
            "followers_url": "https://api.github.com/users/lostb1t/followers",
            "following_url": "https://api.github.com/users/lostb1t/following{/other_user}",
            "gists_url": "https://api.github.com/users/lostb1t/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lostb1t/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lostb1t/subscriptions",
            "organizations_url": "https://api.github.com/users/lostb1t/orgs",
            "repos_url": "https://api.github.com/users/lostb1t/repos",
            "events_url": "https://api.github.com/users/lostb1t/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lostb1t/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-08T11:56:40Z",
          "updated_at": "2020-03-08T13:13:11Z",
          "author_association": "NONE",
          "body": "Great job. But 100% height on the sidebar would really finish it.\r\nHere's my stab at it (based of this PR).\r\n\r\n<img width=\"1538\" alt=\"Screenshot 2020-03-08 at 13 14 27\" src=\"https://user-images.githubusercontent.com/168401/76162515-c9385400-613e-11ea-8f80-ceb341201d83.png\">\r\n\r\nnav_sidebar.css\r\n\r\n```css\r\n#container {\r\n    min-height: 100vh;\r\n}\r\n\r\n.login #container {\r\n    min-height: auto;\r\n}\r\n\r\n#content {\r\n    float: left;\r\n    width: calc(100% - 300px);\r\n    padding-left: 260px;\r\n}\r\n\r\n.dashboard #content {\r\n    width: calc(100% - 600px);\r\n}\r\n\r\n.nav-sidebar {\r\n    background: #f8f8f8;\r\n    height: 100vh;\r\n    font-size: 13px;\r\n    position: fixed;\r\n    width: 220px;\r\n}\r\n\r\n.nav-app {\r\n    margin: 20px 0;\r\n}\r\n\r\n.nav-app:first-child {\r\n    margin-top: 0;\r\n}\r\n\r\n.nav-app-name {\r\n    background: #79aec8;\r\n    display: block;\r\n    font-size: 12px;\r\n    letter-spacing: 0.5px;\r\n    margin-bottom: 5px;\r\n    padding: 8px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.nav-app-name:link, .nav-app-name:visited {\r\n    color: #fff;\r\n}\r\n\r\n.nav-app-name:hover {\r\n    text-decoration: underline;\r\n}\r\n\r\n.nav-model {\r\n    font-weight: bold;\r\n    padding: 5px 10px;\r\n}\r\n\r\n@media (max-width: 1024px) {\r\n    .nav-sidebar {\r\n        display: none;\r\n    }\r\n}\r\n```\r\n\r\nps: When testing this PR beforehand, I noticed the following:\r\n\r\n- width of the content container did not adjusted to smaller viewports (max 1024px) on several views like the listing. (all browsers).\r\n- And login form fields where not 100% width on Safari.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/596197414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/596203895",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-596203895",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 596203895,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjIwMzg5NQ==",
          "user": {
            "login": "lostb1t",
            "id": 168401,
            "node_id": "MDQ6VXNlcjE2ODQwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/168401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lostb1t",
            "html_url": "https://github.com/lostb1t",
            "followers_url": "https://api.github.com/users/lostb1t/followers",
            "following_url": "https://api.github.com/users/lostb1t/following{/other_user}",
            "gists_url": "https://api.github.com/users/lostb1t/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lostb1t/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lostb1t/subscriptions",
            "organizations_url": "https://api.github.com/users/lostb1t/orgs",
            "repos_url": "https://api.github.com/users/lostb1t/repos",
            "events_url": "https://api.github.com/users/lostb1t/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lostb1t/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-08T13:07:48Z",
          "updated_at": "2020-03-08T13:14:28Z",
          "author_association": "NONE",
          "body": "Another suggestion, line up the sidebar padding with the header/ breadcrumb.\r\n\r\n<img width=\"692\" alt=\"Screenshot 2020-03-08 at 14 14 09\" src=\"https://user-images.githubusercontent.com/168401/76163518-1a4c4600-6147-11ea-9f37-d2e880e52087.png\">\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/596203895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/599042976",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-599042976",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 599042976,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTA0Mjk3Ng==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-14T11:20:58Z",
          "updated_at": "2020-03-14T11:20:58Z",
          "author_association": "MEMBER",
          "body": "@olivierdalang I've tried to add buttons for add but without success, the space limitation makes it quite hard to make something non-ugly. If you have a suggestion it'd be good to hear it, but I don't think it's too important.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/599042976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/599043334",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-599043334",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 599043334,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTA0MzMzNA==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-14T11:24:56Z",
          "updated_at": "2020-03-14T11:26:49Z",
          "author_association": "MEMBER",
          "body": "@sarendsen wow, thanks for that. I had tried to get the full-height working initially but my CSS-fu was not so good. This is working well. I've also fixed the login form issue (which I'd fixed before but maybe I broke it again somehow).\r\n\r\nThe problem I see with changing the alignment is that because of the space restrictions stemming from fitting the sidebar into the original design, I don't want to indent the navbar content all the way to match the heading indentation. I also don't want to move the heading indentation back as I feel like I'd be messing with the original design intent. Personally I'm okay with how it is, but I'm open to tuning it somewhat.\r\n\r\n> width of the content container did not adjusted to smaller viewports (max 1024px) on several views like the listing. (all browsers).\r\n\r\nI'm not completely sure what you mean by this, but the smallest breakpoint is 1024px and I didn't want to add any new breakpoints just for this feature, it wouldn't feel very consistent to me.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/599043334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/599083187",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-599083187",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 599083187,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTA4MzE4Nw==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-14T15:45:18Z",
          "updated_at": "2020-03-14T15:45:18Z",
          "author_association": "CONTRIBUTOR",
          "body": "> I've tried to add buttons for add but without success, the space limitation makes it quite hard to make something non-ugly. If you have a suggestion it'd be good to hear it, but I don't think it's too important.\r\n@knyghty No good suggestion, but agree it's not too important.\r\n\r\nI'm not exactly sure what will happen to the breadcrumbs bar though ? @sarendsen's screens shows it once with the breadcrumbs bar, and once without it.\r\n\r\nIf not changed, I'd like to insist once more one that :-) Having duplicated links really defeats the improvement in navigation clarity IMO. Also the sidebar takes up more screen space, so at least we should reclaim what we can !\r\n\r\nThanks for the great work \ud83d\udc4d \r\n\r\n\r\n\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/599083187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/599241347",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-599241347",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 599241347,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI0MTM0Nw==",
          "user": {
            "login": "knyghty",
            "id": 3871354,
            "node_id": "MDQ6VXNlcjM4NzEzNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3871354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/knyghty",
            "html_url": "https://github.com/knyghty",
            "followers_url": "https://api.github.com/users/knyghty/followers",
            "following_url": "https://api.github.com/users/knyghty/following{/other_user}",
            "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions",
            "organizations_url": "https://api.github.com/users/knyghty/orgs",
            "repos_url": "https://api.github.com/users/knyghty/repos",
            "events_url": "https://api.github.com/users/knyghty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/knyghty/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-15T17:40:10Z",
          "updated_at": "2020-03-15T17:40:10Z",
          "author_association": "MEMBER",
          "body": "@olivierdalang I haven't forgotten about the breadcrumbs issue, would just like some feedback on that from the core team, or someone with more UX knowledge at least.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/599241347/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/613897713",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-613897713",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 613897713,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzg5NzcxMw==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-15T08:30:09Z",
          "updated_at": "2020-04-15T08:30:09Z",
          "author_association": "MEMBER",
          "body": "Hi @knyghty \r\n\r\nFound another issue: \r\n\r\n![Screenshot 2020-04-15 at 10 28 56](https://user-images.githubusercontent.com/64686/79315968-fdecb780-7f03-11ea-9ba7-d7d75cbbf8bf.png)\r\n\r\nMessages are overlaid. \r\n\r\n(Admin == lots of variations to check.) \r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/613897713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/613898873",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-613898873",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 613898873,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzg5ODg3Mw==",
          "user": {
            "login": "goetzb",
            "id": 1097522,
            "node_id": "MDQ6VXNlcjEwOTc1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goetzb",
            "html_url": "https://github.com/goetzb",
            "followers_url": "https://api.github.com/users/goetzb/followers",
            "following_url": "https://api.github.com/users/goetzb/following{/other_user}",
            "gists_url": "https://api.github.com/users/goetzb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/goetzb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/goetzb/subscriptions",
            "organizations_url": "https://api.github.com/users/goetzb/orgs",
            "repos_url": "https://api.github.com/users/goetzb/repos",
            "events_url": "https://api.github.com/users/goetzb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/goetzb/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-15T08:32:18Z",
          "updated_at": "2020-04-15T08:32:18Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for posting the link on the mailing list. I like the idea of a sidebar a lot. It would probably be good if we could highlight the current page/model in the sidebar in some way, like by adding an `active` class with different colours or something similar, if possible, to make a bit clearer in the sidebar itself where the user currently is.\r\n\r\nIn my view, especially without breadcrumbs navigation, the different capitalisation of the model name in the sidebar (\"Model\") and in the heading (\"Select model to change\") in the main content section could be a bit confusing too.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/613898873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/613910560",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-613910560",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 613910560,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzkxMDU2MA==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-15T08:55:52Z",
          "updated_at": "2020-04-15T08:55:52Z",
          "author_association": "MEMBER",
          "body": "@goetzb Are you able to help with the design/implementation there? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/613910560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/613926121",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-613926121",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 613926121,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzkyNjEyMQ==",
          "user": {
            "login": "goetzb",
            "id": 1097522,
            "node_id": "MDQ6VXNlcjEwOTc1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goetzb",
            "html_url": "https://github.com/goetzb",
            "followers_url": "https://api.github.com/users/goetzb/followers",
            "following_url": "https://api.github.com/users/goetzb/following{/other_user}",
            "gists_url": "https://api.github.com/users/goetzb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/goetzb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/goetzb/subscriptions",
            "organizations_url": "https://api.github.com/users/goetzb/orgs",
            "repos_url": "https://api.github.com/users/goetzb/repos",
            "events_url": "https://api.github.com/users/goetzb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/goetzb/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-15T09:26:11Z",
          "updated_at": "2020-04-15T09:26:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @goetzb Are you able to help with the design/implementation there?\r\n\r\n@carltongibson I could perhaps have a closer look at the current code, yes. But to provide more detailed suggestions, I will first need set up a new environment with a development version of Django (I believe that's all documented somewhere, so I just need to read up on it and do it). Not sure I'll get around doing that today, but should manage to do it tomorrow.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/613926121/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/614596654",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-614596654",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 614596654,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDU5NjY1NA==",
          "user": {
            "login": "goetzb",
            "id": 1097522,
            "node_id": "MDQ6VXNlcjEwOTc1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goetzb",
            "html_url": "https://github.com/goetzb",
            "followers_url": "https://api.github.com/users/goetzb/followers",
            "following_url": "https://api.github.com/users/goetzb/following{/other_user}",
            "gists_url": "https://api.github.com/users/goetzb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/goetzb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/goetzb/subscriptions",
            "organizations_url": "https://api.github.com/users/goetzb/orgs",
            "repos_url": "https://api.github.com/users/goetzb/repos",
            "events_url": "https://api.github.com/users/goetzb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/goetzb/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-16T11:32:55Z",
          "updated_at": "2020-04-16T11:32:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "I've now made a few changes to the code from @knyghty in https://github.com/goetzb/django/commit/b54ac9f71803fcd505a4901739cbb1f0ad8664cf\r\n\r\n* Changed the sidebar menu markup to nested lists (seems best practice and also good for accessibility)\r\n* Added active classes to CSS, improved accessibility with `aria-current=\"page\"`\r\n* Added visual highlighting for active app and model sidebar items\r\n* Added a small border above the sidebar if the breadcrumbs navigation is present before the `.nav-sidebar` in the HTML\r\n* Added hidden \"Main Menu\" header for accessibility (forgot to change the text to \"Sidebar Menu\")\r\n* Fixed the message position when the `.nav-sidebar` immediately before `ul.messagelist` in HTML (highlighted by @carltongibson - I've made that change in `base.css`, but it should probably also go into `nav_sidebar.css`)\r\n\r\n<img width=\"361\" alt=\"Screenshot 2020-04-16 12 25 56\" src=\"https://user-images.githubusercontent.com/1097522/79450873-7f644880-7fdd-11ea-8b93-6b160a589214.png\">\r\n\r\nLooking at this screenshot, I find the positioning of the text in the header and the sidebar not ideal - maybe we should now standardise the `padding-left` for the header, the breadcrumbs and the sidebar?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/614596654/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/614602141",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-614602141",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 614602141,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDYwMjE0MQ==",
          "user": {
            "login": "olivierdalang",
            "id": 1894106,
            "node_id": "MDQ6VXNlcjE4OTQxMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1894106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierdalang",
            "html_url": "https://github.com/olivierdalang",
            "followers_url": "https://api.github.com/users/olivierdalang/followers",
            "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierdalang/orgs",
            "repos_url": "https://api.github.com/users/olivierdalang/repos",
            "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierdalang/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-16T11:45:30Z",
          "updated_at": "2020-04-16T11:45:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "What about moving the breadcrumbs next to the page title like this :\r\n\r\n![image](https://user-images.githubusercontent.com/1894106/79452273-2c43c300-7fe8-11ea-93dd-c33c69b88d95.png)\r\n\r\nThat would alleviate this \"duplicated navigation\" effect, and would also provide more stable structure between pages with and without breadcrumbs (the homepage has no breadcrumbs).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/614602141/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/614627143",
          "html_url": "https://github.com/django/django/pull/12159#issuecomment-614627143",
          "issue_url": "https://api.github.com/repos/django/django/issues/12159",
          "id": 614627143,
          "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDYyNzE0Mw==",
          "user": {
            "login": "goetzb",
            "id": 1097522,
            "node_id": "MDQ6VXNlcjEwOTc1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goetzb",
            "html_url": "https://github.com/goetzb",
            "followers_url": "https://api.github.com/users/goetzb/followers",
            "following_url": "https://api.github.com/users/goetzb/following{/other_user}",
            "gists_url": "https://api.github.com/users/goetzb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/goetzb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/goetzb/subscriptions",
            "organizations_url": "https://api.github.com/users/goetzb/orgs",
            "repos_url": "https://api.github.com/users/goetzb/repos",
            "events_url": "https://api.github.com/users/goetzb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/goetzb/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-04-16T12:39:53Z",
          "updated_at": "2020-04-16T12:39:53Z",
          "author_association": "CONTRIBUTOR",
          "body": "@olivierdalang Good idea, yes. I just wanted to touch as little outside the sidebar as possible. Not sure to what extent people customise the breadcrumbs in a way that moving it around would mess up their admin. But if this is a change that's acceptable to make, then yes, this would make the navigation overall a bit more compact.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/614627143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18823",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18823/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18823/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18823/events",
      "html_url": "https://github.com/django/django/pull/18823",
      "id": 2665917497,
      "node_id": "PR_kwDOAD-Lgs6CKLJk",
      "number": 18823,
      "title": "Fixed #28041 -- Added prefix matching for PostgreSQL full text search",
      "user": {
        "login": "GappleBee",
        "id": 85840539,
        "node_id": "MDQ6VXNlcjg1ODQwNTM5",
        "avatar_url": "https://avatars.githubusercontent.com/u/85840539?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GappleBee",
        "html_url": "https://github.com/GappleBee",
        "followers_url": "https://api.github.com/users/GappleBee/followers",
        "following_url": "https://api.github.com/users/GappleBee/following{/other_user}",
        "gists_url": "https://api.github.com/users/GappleBee/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GappleBee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GappleBee/subscriptions",
        "organizations_url": "https://api.github.com/users/GappleBee/orgs",
        "repos_url": "https://api.github.com/users/GappleBee/repos",
        "events_url": "https://api.github.com/users/GappleBee/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GappleBee/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 9,
      "created_at": "2024-11-17T14:20:14Z",
      "updated_at": "2025-06-10T15:10:42Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18823",
        "html_url": "https://github.com/django/django/pull/18823",
        "diff_url": "https://github.com/django/django/pull/18823.diff",
        "patch_url": "https://github.com/django/django/pull/18823.patch",
        "merged_at": null
      },
      "body": "#### Trac ticket number\r\n<!-- Replace XXXXX with the corresponding Trac ticket number, or delete the line and write \"N/A\" if this is a trivial PR. -->\r\n\r\nticket-28041\r\n\r\n#### Branch description\r\nContinued [#12727](https://github.com/django/django/pull/12727)\r\n\r\nI've rebased it, changed a few docs, and removed the diamond inheritance pattern\r\n\r\n#### Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [ ] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18823/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18823/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2483283034",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2483283034",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2483283034,
          "node_id": "IC_kwDOAD-Lgs6UA-Ra",
          "user": {
            "login": "adamzap",
            "id": 101698,
            "node_id": "MDQ6VXNlcjEwMTY5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamzap",
            "html_url": "https://github.com/adamzap",
            "followers_url": "https://api.github.com/users/adamzap/followers",
            "following_url": "https://api.github.com/users/adamzap/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamzap/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamzap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamzap/subscriptions",
            "organizations_url": "https://api.github.com/users/adamzap/orgs",
            "repos_url": "https://api.github.com/users/adamzap/repos",
            "events_url": "https://api.github.com/users/adamzap/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamzap/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-18T14:52:46Z",
          "updated_at": "2024-11-18T14:52:46Z",
          "author_association": "MEMBER",
          "body": "Also, it looks like you will want to add `lexeme` and `lexemes` to [`spelling_wordlist`](https://github.com/django/django/blob/e035db1bc3bbeb4282a177ad106add3b07d97b09/docs/spelling_wordlist):\r\n\r\nhttps://github.com/django/django/actions/runs/11879803180/job/33102168797?pr=18823",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2483283034/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2491381175",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2491381175",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2491381175,
          "node_id": "IC_kwDOAD-Lgs6Uf3W3",
          "user": {
            "login": "GappleBee",
            "id": 85840539,
            "node_id": "MDQ6VXNlcjg1ODQwNTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/85840539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GappleBee",
            "html_url": "https://github.com/GappleBee",
            "followers_url": "https://api.github.com/users/GappleBee/followers",
            "following_url": "https://api.github.com/users/GappleBee/following{/other_user}",
            "gists_url": "https://api.github.com/users/GappleBee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GappleBee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GappleBee/subscriptions",
            "organizations_url": "https://api.github.com/users/GappleBee/orgs",
            "repos_url": "https://api.github.com/users/GappleBee/repos",
            "events_url": "https://api.github.com/users/GappleBee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GappleBee/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-11-21T14:32:21Z",
          "updated_at": "2024-11-21T14:32:21Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the suggestions @pauloxnet the code looks cleaner now",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2491381175/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2663600552",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2663600552",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2663600552,
          "node_id": "IC_kwDOAD-Lgs6ew1Go",
          "user": {
            "login": "jacobtylerwalls",
            "id": 38668450,
            "node_id": "MDQ6VXNlcjM4NjY4NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobtylerwalls",
            "html_url": "https://github.com/jacobtylerwalls",
            "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
            "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
            "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
            "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-02-17T16:32:53Z",
          "updated_at": "2025-02-17T16:32:53Z",
          "author_association": "MEMBER",
          "body": "And a housekeeping note: you can update the PR title to say \"Fixed ...\" since we'll be closing the ticket.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2663600552/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2711325552",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2711325552",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2711325552,
          "node_id": "IC_kwDOAD-Lgs6hm4tw",
          "user": {
            "login": "GappleBee",
            "id": 85840539,
            "node_id": "MDQ6VXNlcjg1ODQwNTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/85840539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GappleBee",
            "html_url": "https://github.com/GappleBee",
            "followers_url": "https://api.github.com/users/GappleBee/followers",
            "following_url": "https://api.github.com/users/GappleBee/following{/other_user}",
            "gists_url": "https://api.github.com/users/GappleBee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GappleBee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GappleBee/subscriptions",
            "organizations_url": "https://api.github.com/users/GappleBee/orgs",
            "repos_url": "https://api.github.com/users/GappleBee/repos",
            "events_url": "https://api.github.com/users/GappleBee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GappleBee/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-10T17:26:52Z",
          "updated_at": "2025-03-10T17:26:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the detailed reviews @jacobtylerwalls \r\nI think all of the issues have been dealt with but this is development so we shall see",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2711325552/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2745894268",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2745894268",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2745894268,
          "node_id": "IC_kwDOAD-Lgs6jqwV8",
          "user": {
            "login": "GappleBee",
            "id": 85840539,
            "node_id": "MDQ6VXNlcjg1ODQwNTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/85840539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GappleBee",
            "html_url": "https://github.com/GappleBee",
            "followers_url": "https://api.github.com/users/GappleBee/followers",
            "following_url": "https://api.github.com/users/GappleBee/following{/other_user}",
            "gists_url": "https://api.github.com/users/GappleBee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GappleBee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GappleBee/subscriptions",
            "organizations_url": "https://api.github.com/users/GappleBee/orgs",
            "repos_url": "https://api.github.com/users/GappleBee/repos",
            "events_url": "https://api.github.com/users/GappleBee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GappleBee/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-22T22:20:13Z",
          "updated_at": "2025-03-22T22:21:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "I noticed that in `test_search.py`, `MultipleFieldsTest.test_config_query_implicit` fails if you replace `\"cadeaux\"` with `SearchQuery(\"cadeaux\")`, is this expected @jacobtylerwalls ? I was wondering if `config` should be inherited from `SearchVector` even if it isn't defined in `SearchQuery`",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2745894268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2746277689",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2746277689",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2746277689,
          "node_id": "IC_kwDOAD-Lgs6jsN85",
          "user": {
            "login": "jacobtylerwalls",
            "id": 38668450,
            "node_id": "MDQ6VXNlcjM4NjY4NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobtylerwalls",
            "html_url": "https://github.com/jacobtylerwalls",
            "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
            "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
            "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
            "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-23T15:37:30Z",
          "updated_at": "2025-03-23T15:37:30Z",
          "author_association": "MEMBER",
          "body": "I'm not sure how we would do that. I don't think we need to worry about it at this juncture.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2746277689/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2761819605",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2761819605",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2761819605,
          "node_id": "IC_kwDOAD-Lgs6kngXV",
          "user": {
            "login": "GappleBee",
            "id": 85840539,
            "node_id": "MDQ6VXNlcjg1ODQwNTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/85840539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GappleBee",
            "html_url": "https://github.com/GappleBee",
            "followers_url": "https://api.github.com/users/GappleBee/followers",
            "following_url": "https://api.github.com/users/GappleBee/following{/other_user}",
            "gists_url": "https://api.github.com/users/GappleBee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GappleBee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GappleBee/subscriptions",
            "organizations_url": "https://api.github.com/users/GappleBee/orgs",
            "repos_url": "https://api.github.com/users/GappleBee/repos",
            "events_url": "https://api.github.com/users/GappleBee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GappleBee/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-03-28T16:15:10Z",
          "updated_at": "2025-03-28T16:15:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "I appreciate the consistency with this @jacobtylerwalls \r\nI think this time all the issues should be dealt with \ud83c\udf89",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2761819605/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2959630646",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2959630646",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2959630646,
          "node_id": "IC_kwDOAD-Lgs6waGE2",
          "user": {
            "login": "GappleBee",
            "id": 85840539,
            "node_id": "MDQ6VXNlcjg1ODQwNTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/85840539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GappleBee",
            "html_url": "https://github.com/GappleBee",
            "followers_url": "https://api.github.com/users/GappleBee/followers",
            "following_url": "https://api.github.com/users/GappleBee/following{/other_user}",
            "gists_url": "https://api.github.com/users/GappleBee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GappleBee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GappleBee/subscriptions",
            "organizations_url": "https://api.github.com/users/GappleBee/orgs",
            "repos_url": "https://api.github.com/users/GappleBee/repos",
            "events_url": "https://api.github.com/users/GappleBee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GappleBee/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-06-10T15:08:14Z",
          "updated_at": "2025-06-10T15:08:14Z",
          "author_association": "CONTRIBUTOR",
          "body": "What should be done about the failing check @jacobtylerwalls ? From the last commit that passed all checks, all that's been modified is the `search.txt` file and that's not failing any docs checks",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2959630646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2959638270",
          "html_url": "https://github.com/django/django/pull/18823#issuecomment-2959638270",
          "issue_url": "https://api.github.com/repos/django/django/issues/18823",
          "id": 2959638270,
          "node_id": "IC_kwDOAD-Lgs6waH7-",
          "user": {
            "login": "jacobtylerwalls",
            "id": 38668450,
            "node_id": "MDQ6VXNlcjM4NjY4NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobtylerwalls",
            "html_url": "https://github.com/jacobtylerwalls",
            "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
            "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
            "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
            "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-06-10T15:10:42Z",
          "updated_at": "2025-06-10T15:10:42Z",
          "author_association": "MEMBER",
          "body": "> What should be done about the failing check @jacobtylerwalls ? From the last commit that passed all checks, all that's been modified is the search.txt file and that's not failing any docs checks\r\n\r\nThat check has been flaky recently. (configuration problem on the ci machine?) It's not a concern. Thanks for getting those updates in!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2959638270/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/16092",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/16092/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/16092/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/16092/events",
      "html_url": "https://github.com/django/django/pull/16092",
      "id": 1384620397,
      "node_id": "PR_kwDOAD-Lgs4_ihKW",
      "number": 16092,
      "title": "Fixed #470 -- Added support for database defaults on fields.",
      "user": {
        "login": "LilyAcorn",
        "id": 1843202,
        "node_id": "MDQ6VXNlcjE4NDMyMDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LilyAcorn",
        "html_url": "https://github.com/LilyAcorn",
        "followers_url": "https://api.github.com/users/LilyAcorn/followers",
        "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
        "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
        "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
        "repos_url": "https://api.github.com/users/LilyAcorn/repos",
        "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 17,
      "created_at": "2022-09-24T10:16:45Z",
      "updated_at": "2023-05-12T17:54:45Z",
      "closed_at": "2023-05-12T17:53:58Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/16092",
        "html_url": "https://github.com/django/django/pull/16092",
        "diff_url": "https://github.com/django/django/pull/16092.diff",
        "patch_url": "https://github.com/django/django/pull/16092.patch",
        "merged_at": "2023-05-12T17:53:58Z"
      },
      "body": "https://code.djangoproject.com/ticket/470\r\n\r\nRebased from #13709.",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/16092/reactions",
        "total_count": 35,
        "+1": 2,
        "-1": 0,
        "laugh": 2,
        "hooray": 0,
        "confused": 0,
        "heart": 26,
        "rocket": 2,
        "eyes": 3
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/16092/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1264614646",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1264614646",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1264614646,
          "node_id": "IC_kwDOAD-Lgs5LYHz2",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-02T11:05:01Z",
          "updated_at": "2022-10-02T12:28:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "This SQL is generated by Django for Oracle, but leads to the `ORA-00936: missing expression` error:\r\n\r\n```sql\r\nINSERT INTO \"FIELD_DEFAULTS_DBARTICLE\" (\"HEADLINE\", \"PUB_DATE\")\r\n    SELECT * FROM (SELECT DEFAULT col_0, TO_TIMESTAMP(DEFAULT) col_1 FROM DUAL\r\n        UNION ALL SELECT DEFAULT, TO_TIMESTAMP(DEFAULT) FROM DUAL)\r\n```\r\n\r\nThe relevant python code:\r\n\r\n```python\r\nclass DBArticle(models.Model):\r\n    headline = models.CharField(max_length=100, db_default=\"Default headline\")\r\n    pub_date = models.DateTimeField(db_default=Now())\r\n\r\n    def __str__(self):\r\n        return self.headline\r\n```\r\n```python\r\n        articles = [DBArticle(), DBArticle()]\r\n        DBArticle.objects.bulk_create(articles)\r\n```\r\n\r\nWhat I'm not yet clear on is:\r\n1: Which bit of the generated SQL is invalid\r\n~2: Why we use a subquery selecting from `DUAL` instead of a `VALUES` clause~",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1264614646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1264633158",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1264633158",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1264633158,
          "node_id": "IC_kwDOAD-Lgs5LYMVG",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-02T12:34:01Z",
          "updated_at": "2022-10-02T12:34:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "I can work around the above error somewhat by setting `supports_default_keyword_in_insert` to `False` for Oracle. This isn't ideal for a few reasons:\r\n\r\n1. Oracle supports `DEFAULT` just fine in a single insert, rather than in a bulk insert.\r\n2. I instead run into a new error: `ORA-01830: date format picture ends before converting entire input string`. This is because the `Now()` expression becomes `CURRENT_TIMESTAMP` which is then wrapped in `TO_TIMESTAMP()` by `BulkInsertMapper` in `bulk_insert_sql`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1264633158/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1264634217",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1264634217",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1264634217,
          "node_id": "IC_kwDOAD-Lgs5LYMlp",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-02T12:39:29Z",
          "updated_at": "2022-10-02T12:39:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "I currently suspect that we can't use the `DEFAULT` keyword in the `SELECT from DUAL` subquery.\r\n\r\nI'm wondering if the best fix here is to change how we handle Oracle bulk inserts to use the `INSERT ALL INTO` syntax:\r\n\r\n```sql\r\nINSERT ALL\r\n  INTO mytable (column1, column2, column_n) VALUES (expr1, expr2, expr_n)\r\n  INTO mytable (column1, column2, column_n) VALUES (expr1, expr2, expr_n)\r\n  INTO mytable (column1, column2, column_n) VALUES (expr1, expr2, expr_n)\r\nSELECT * FROM dual;\r\n```\r\n\r\nwhich I hope parallels single inserts sufficiently to support `DEFAULT` properly and won't cause other issues.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1264634217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1265398322",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1265398322",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1265398322,
          "node_id": "IC_kwDOAD-Lgs5LbHIy",
          "user": {
            "login": "Viicos",
            "id": 65306057,
            "node_id": "MDQ6VXNlcjY1MzA2MDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/65306057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Viicos",
            "html_url": "https://github.com/Viicos",
            "followers_url": "https://api.github.com/users/Viicos/followers",
            "following_url": "https://api.github.com/users/Viicos/following{/other_user}",
            "gists_url": "https://api.github.com/users/Viicos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Viicos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Viicos/subscriptions",
            "organizations_url": "https://api.github.com/users/Viicos/orgs",
            "repos_url": "https://api.github.com/users/Viicos/repos",
            "events_url": "https://api.github.com/users/Viicos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Viicos/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-10-03T12:55:19Z",
          "updated_at": "2022-10-03T12:55:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "This looks like a nice feature, but someone reading the documentation (me included) might be wondering what is the recommended argument to use (`default` or `db_default`) when defining model and attributes. Do you think adding a small section in the doc could be beneficial?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1265398322/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1365498207",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1365498207",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1365498207,
          "node_id": "IC_kwDOAD-Lgs5RY9lf",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-12-26T23:04:26Z",
          "updated_at": "2022-12-26T23:05:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm I've fixed the Oracle failures, but unfortunately this has left `field_defaults.tests.DefaultTests.test_field_database_defaults_returning` as a flaky test. I saw this failure occasionally when debugging the other tests, but I can't reliably trigger it:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jenkins/workspace/pull-requests-oracle/database/oracle19/label/oracle/python/python3.11/django/test/testcases.py\", line 1603, in skip_wrapper\r\n    return test_func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/jenkins/workspace/pull-requests-oracle/database/oracle19/label/oracle/python/python3.11/tests/field_defaults/tests.py\", line 51, in test_field_database_defaults_returning\r\n    self.assertLess((a.pub_date - now).seconds, 5)\r\nAssertionError: 86399 not less than 5\r\n```\r\n\r\nFor some reason, occasionally the `now` value is *later* than the `a.pub_date` value, despite being calculated earlier. Unfortunately this doesn't appear to be as simple as a millisecond/microsecond precision difference, as it was for sqlite on Windows. I'm wondering if Oracle and Python are using different clocks and therefore there is always a random chance of this failure on Oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1365498207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1365515996",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1365515996",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1365515996,
          "node_id": "IC_kwDOAD-Lgs5RZB7c",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2022-12-27T00:13:11Z",
          "updated_at": "2022-12-27T14:20:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think the postgres failure is completely unrelated to my changes.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1365515996/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1474873888",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1474873888",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1474873888,
          "node_id": "IC_kwDOAD-Lgs5X6Mog",
          "user": {
            "login": "HaddadJoe",
            "id": 13067123,
            "node_id": "MDQ6VXNlcjEzMDY3MTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HaddadJoe",
            "html_url": "https://github.com/HaddadJoe",
            "followers_url": "https://api.github.com/users/HaddadJoe/followers",
            "following_url": "https://api.github.com/users/HaddadJoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaddadJoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HaddadJoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaddadJoe/subscriptions",
            "organizations_url": "https://api.github.com/users/HaddadJoe/orgs",
            "repos_url": "https://api.github.com/users/HaddadJoe/repos",
            "events_url": "https://api.github.com/users/HaddadJoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HaddadJoe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-03-18T15:05:44Z",
          "updated_at": "2023-03-18T15:05:44Z",
          "author_association": "NONE",
          "body": "nice work here @LilyFoote , highly anticipated PR! is there any timelines of release? ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1474873888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1476248264",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1476248264",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1476248264,
          "node_id": "IC_kwDOAD-Lgs5X_cLI",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-03-20T13:35:33Z",
          "updated_at": "2023-03-20T13:35:33Z",
          "author_association": "CONTRIBUTOR",
          "body": "@HaddadJoe In 5.0 hopefully.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1476248264/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1500951897",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1500951897",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1500951897,
          "node_id": "IC_kwDOAD-Lgs5ZdrVZ",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-04-08T18:33:47Z",
          "updated_at": "2023-04-08T18:33:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "@felixxm I think I did everything now. Let me know if I missed something.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1500951897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1534192645",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1534192645",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1534192645,
          "node_id": "IC_kwDOAD-Lgs5bcewF",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-04T07:05:19Z",
          "updated_at": "2023-05-04T07:05:19Z",
          "author_association": "MEMBER",
          "body": "I will try to push it to the finish line in the next few days :crossed_fingers: . Starting from checking all comments and pushing small edits. Please don't force-push.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1534192645/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1541827501",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1541827501",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1541827501,
          "node_id": "IC_kwDOAD-Lgs5b5mut",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-10T09:52:35Z",
          "updated_at": "2023-05-10T09:52:35Z",
          "author_association": "MEMBER",
          "body": "Pushed set of small changes, 64% reviewed :sweat_smile: Tomorrow I want to start working on tests and docs.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1541827501/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1542421241",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1542421241",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1542421241,
          "node_id": "IC_kwDOAD-Lgs5b73r5",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-10T15:37:24Z",
          "updated_at": "2023-05-11T10:04:48Z",
          "author_association": "MEMBER",
          "body": "In the light of ticket-34553 and whole saga of `%` escaping in literal values usage in schema alterations I think it would be worth adding tests for `db_default=\"%\"`, `db_default=\"'\"`, and `db_default='\"'`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1542421241/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1543835104",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1543835104",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1543835104,
          "node_id": "IC_kwDOAD-Lgs5cBQ3g",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-11T11:36:13Z",
          "updated_at": "2023-05-11T11:36:13Z",
          "author_association": "MEMBER",
          "body": "> In the light of [ticket-34553](https://code.djangoproject.com/ticket/34553) and whole saga of `%` escaping in literal values usage in schema alterations I think it would be worth adding tests for `db_default=\"%\"`, `db_default=\"'\"`, and `db_default='\"'`.\r\n\r\nAdded tests. It's funny because they work in almost all cases :smile: The only exception is the single quotation mark `'` on Oracle, it's properly quoted and is set for new rows, but .... :drum: is not set on existing rows :exploding_head: I believe it's a bug in Oracle itself.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1543835104/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1544441181",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1544441181",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1544441181,
          "node_id": "IC_kwDOAD-Lgs5cDk1d",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-11T17:55:14Z",
          "updated_at": "2023-05-11T17:55:14Z",
          "author_association": "MEMBER",
          "body": "buildbot, test on oracle.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1544441181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1545294363",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1545294363",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1545294363,
          "node_id": "IC_kwDOAD-Lgs5cG1Ib",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-12T07:21:35Z",
          "updated_at": "2023-05-12T07:21:35Z",
          "author_association": "MEMBER",
          "body": "I noticed that inserting primary keys with `db_default` crashes, and fixed it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1545294363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1545501643",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1545501643",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1545501643,
          "node_id": "IC_kwDOAD-Lgs5cHnvL",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-12T10:05:50Z",
          "updated_at": "2023-05-12T10:05:50Z",
          "author_association": "MEMBER",
          "body": "I pushed final edits :rocket:\r\n\r\n@LilyFoote Thanks for your humongous efforts :1st_place_medal: :star2:\r\nWe implemented database defaults 18 years :smiling_face_with_tear:  after the ticket was created :boom: ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1545501643/reactions",
            "total_count": 33,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 11,
            "confused": 0,
            "heart": 8,
            "rocket": 14,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1545549190",
          "html_url": "https://github.com/django/django/pull/16092#issuecomment-1545549190",
          "issue_url": "https://api.github.com/repos/django/django/issues/16092",
          "id": 1545549190,
          "node_id": "IC_kwDOAD-Lgs5cHzWG",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2023-05-12T10:47:21Z",
          "updated_at": "2023-05-12T10:47:21Z",
          "author_association": "MEMBER",
          "body": "\u201cFestina lente\u201d, or \u201cmore haste, less speed\u201d \ud83d\udc22\r\n\r\n\ud83c\udfc5 Thank you @LilyFoote and @felixxm ! \ud83e\udd18",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1545549190/reactions",
            "total_count": 22,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 14,
            "confused": 0,
            "heart": 8,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18123",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18123/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18123/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18123/events",
      "html_url": "https://github.com/django/django/pull/18123",
      "id": 2276982056,
      "node_id": "PR_kwDOAD-Lgs5ub9fj",
      "number": 18123,
      "title": "Fixed #27452 -- Added serial fields to contrib.postgres.",
      "user": {
        "login": "csirmazbendeguz",
        "id": 19559023,
        "node_id": "MDQ6VXNlcjE5NTU5MDIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/csirmazbendeguz",
        "html_url": "https://github.com/csirmazbendeguz",
        "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
        "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
        "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
        "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
        "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
        "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 17,
      "created_at": "2024-05-03T05:59:08Z",
      "updated_at": "2024-07-31T09:40:46Z",
      "closed_at": "2024-07-31T09:27:56Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18123",
        "html_url": "https://github.com/django/django/pull/18123",
        "diff_url": "https://github.com/django/django/pull/18123.diff",
        "patch_url": "https://github.com/django/django/pull/18123.patch",
        "merged_at": null
      },
      "body": "# Trac ticket number\r\nticket-27452\r\n\r\n# Branch description\r\nAdded `SmallSerialField`, `SerialField`, `BigSerialField` to `contrib.postgres`.\r\n\r\n[Previous PR](https://github.com/django/django/pull/12989)\r\n[Composite PK](https://github.com/django/django/pull/18056)\r\n\r\n!!! A more basic implementation can be found in [this PR](https://github.com/django/django/pull/18280). !!!\r\n\r\n# Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n- [x] I have attached screenshots in both light and dark modes for any UI changes.\r\n",
      "closed_by": {
        "login": "csirmazbendeguz",
        "id": 19559023,
        "node_id": "MDQ6VXNlcjE5NTU5MDIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/csirmazbendeguz",
        "html_url": "https://github.com/csirmazbendeguz",
        "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
        "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
        "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
        "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
        "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
        "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18123/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18123/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2094761572",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2094761572",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2094761572,
          "node_id": "IC_kwDOAD-Lgs5824Zk",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-05T11:09:05Z",
          "updated_at": "2024-05-05T11:09:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "> This looks like a great start!\r\n> \r\n> In addition to the specific comments I added, we'll need some migrations tests to cover adding/removing serial fields and converting between serial and auto fields.\r\n\r\n@LilyFoote , thanks for the review! Could you point me to some tests I could copy to get started? I'm not sure how to test the migrations other than with the `tests/schema` tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2094761572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2094783578",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2094783578",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2094783578,
          "node_id": "IC_kwDOAD-Lgs5829xa",
          "user": {
            "login": "LilyAcorn",
            "id": 1843202,
            "node_id": "MDQ6VXNlcjE4NDMyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1843202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LilyAcorn",
            "html_url": "https://github.com/LilyAcorn",
            "followers_url": "https://api.github.com/users/LilyAcorn/followers",
            "following_url": "https://api.github.com/users/LilyAcorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LilyAcorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LilyAcorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LilyAcorn/subscriptions",
            "organizations_url": "https://api.github.com/users/LilyAcorn/orgs",
            "repos_url": "https://api.github.com/users/LilyAcorn/repos",
            "events_url": "https://api.github.com/users/LilyAcorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LilyAcorn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-05T12:13:36Z",
          "updated_at": "2024-05-05T12:13:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "For database defaults I added tests in [tests/migrations/test_autodetector.py](https://github.com/django/django/blob/main/tests/migrations/test_autodetector.py) and [tests/migrations/test_operations.py](https://github.com/django/django/blob/main/tests/migrations/test_operations.py).",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2094783578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2099693638",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2099693638",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2099693638,
          "node_id": "IC_kwDOAD-Lgs59JshG",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-08T03:59:24Z",
          "updated_at": "2024-05-08T04:08:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have managed to test these operations (add, alter, remove serial field) in the `schema.tests`, I'm not sure if more tests are necessary?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2099693638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2102787290",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2102787290",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2102787290,
          "node_id": "IC_kwDOAD-Lgs59Vfza",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-09T14:34:31Z",
          "updated_at": "2024-05-09T14:34:31Z",
          "author_association": "CONTRIBUTOR",
          "body": "@ngnpope , thank you for reviewing my changes ! \ud83d\ude4f I have pushed a fix for the issues you mentioned.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2102787290/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2109361028",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2109361028",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2109361028,
          "node_id": "IC_kwDOAD-Lgs59ukuE",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-14T06:09:27Z",
          "updated_at": "2024-05-14T06:09:27Z",
          "author_association": "CONTRIBUTOR",
          "body": "@ngnpope , I think all concerns has been addressed, let me know what you think.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2109361028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2114034982",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2114034982",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2114034982,
          "node_id": "IC_kwDOAD-Lgs5-AZ0m",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-16T05:04:52Z",
          "updated_at": "2024-05-16T05:04:52Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks a lot @LilyFoote ! I addressed your suggestions.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2114034982/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 2,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2130909500",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2130909500",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2130909500,
          "node_id": "IC_kwDOAD-Lgs5_Axk8",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-25T06:33:01Z",
          "updated_at": "2024-05-25T06:33:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks a lot @sarahboyce , I addressed your comments, let me know what you think.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2130909500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2133825242",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2133825242",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2133825242,
          "node_id": "IC_kwDOAD-Lgs5_L5ba",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-27T16:49:41Z",
          "updated_at": "2024-05-27T16:49:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @sarahboyce , fair enough, I made some adjustments.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2133825242/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2134544594",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2134544594",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2134544594,
          "node_id": "IC_kwDOAD-Lgs5_OpDS",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-28T07:39:16Z",
          "updated_at": "2024-05-28T07:39:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the review @InvalidInterrupt , it's much appreciated! \ud83d\ude4f ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2134544594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2136468408",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2136468408",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2136468408,
          "node_id": "IC_kwDOAD-Lgs5_V-u4",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-29T03:58:52Z",
          "updated_at": "2024-05-29T11:06:44Z",
          "author_association": "CONTRIBUTOR",
          "body": "I realized instead of adding new system checks, I could just raise a `ValueError` in `__init__`. This is how `GeneratedField` does it. WDYT?\r\n\r\nI think it's better, because:\r\n1. it's consistent with how it's done elsewhere\r\n2. it's stricter, the code will fail immediately, doesn't need to wait for checks to run\r\n3. it doesn't require adding new checks",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2136468408/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2137765147",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2137765147",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2137765147,
          "node_id": "IC_kwDOAD-Lgs5_a7Ub",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-29T16:01:41Z",
          "updated_at": "2024-05-29T16:04:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "So I would like to summarize what I figured out today for both myself and others to see.\r\n\r\nWe have two options: either enable serial fields to define a `default` value, or not. As @InvalidInterrupt pointed out, it would be preferrable to enable this for consistency's sake.\r\n\r\nIf `default` is not allowed, then:\r\n1. Adding a serial field to a table shouldn't trigger a prompt for a default value. The new field will be populated by the sequence.\r\n2. Changing a nullable integer field to a serial field will trigger an error if the table contains any null values. I am looking into if we could also populate the null values with the sequence in this case.\r\n\r\nIf `default` is allowed, then:\r\n1. Adding a serial field to a table should trigger a prompt for a default value. The new field should be populated by the default value. QUESTION: what if I want to populate the field with a sequence by default? I think if we need to pick one, it's more sensible to populate the serial field with a sequence instead of a single default value.\r\n2. We can't use Postgres's built-in serial type when creating a serial field. This is because it's impossible to create a serial field with a default value, since serial fields already have a sequence by default. We could create a regular integer field instead and attach a sequence to it in multiple steps.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2137765147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2137952325",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2137952325",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2137952325,
          "node_id": "IC_kwDOAD-Lgs5_bpBF",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-29T17:46:41Z",
          "updated_at": "2024-05-30T09:10:25Z",
          "author_association": "CONTRIBUTOR",
          "body": "some notes so I don't forget:\r\nwhen changing a nullable integer to a serial field, the issue is with the order the queries are executed (`fragment` vs `other_actions`).\r\nit would be nice if `_alter_column_type_sql` could return a _list_ of actions instead of a single action (`fragment`). this is because setting up a serial field needs multiple queries.\r\n\r\nEDIT:\r\nit's not necessary, queries can be executed directly in `_alter_column_type_sql` instead.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2137952325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2138822468",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2138822468",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2138822468,
          "node_id": "IC_kwDOAD-Lgs5_e9dE",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-30T07:04:31Z",
          "updated_at": "2024-05-30T08:08:09Z",
          "author_association": "CONTRIBUTOR",
          "body": "So I decided to stop fighting against what's already in place and try to conform to the existing code. I managed to achieve the following:\r\n1. no `default` is allowed, it's always set to `DatabaseDefault`\r\n2. added the `SerialFieldSequence` class for serial fields `db_default`\r\n3. adding a serial field to an existing table doesn't trigger a prompt\r\n4. adding a serial field to an existing table will populate it with a sequence starting from 1\r\n5. changing a nullable integer to a serial field will populate the null values with a sequence starting from `max(field)`",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2138822468/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2154999563",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2154999563",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2154999563,
          "node_id": "IC_kwDOAD-Lgs6Acq8L",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-07T14:47:43Z",
          "updated_at": "2024-06-07T14:54:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "We had a discussion yesterday with @charettes about this. The key takeaways were:\r\n1. We would like a 3rd opinion whether altering between serial <-> integer <-> auto fields is needed. Removing this support would simplify the code significantly.\r\n2. @charettes pointed out a potential race condition. When altering an integer field to a serial field, for example, there may be new records inserted before we reset the sequence. To fix this we would need to lock the column. This is something I haven't thought about and this could be a real problem in production environments.\r\n3. I haven't tested what happens if a migration operation fails. For example, what if the sequence is created but the migration crashes? Are the operations rolled back in this case (is the sequence deleted)? This would require further testing.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2154999563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2166428014",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2166428014",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2166428014,
          "node_id": "IC_kwDOAD-Lgs6BIRFu",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-13T17:44:47Z",
          "updated_at": "2024-06-25T06:42:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks @LilyFoote , @sarahboyce for the meeting.\r\nNotes:\r\n1. Let's open a separate PR adding the basic serial fields as @charettes suggests, we can merge that, and we can argue later if support for other functionality is necessary (can be added in a follow-up PR).\r\n2. Is resetting the sequence after migration really necessary? Removing support for this extra functionality would remove the possibility of a race condition. AutoFields don't reset the sequence either.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2166428014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2175757193",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2175757193",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2175757193,
          "node_id": "IC_kwDOAD-Lgs6Br2uJ",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-06-18T10:26:11Z",
          "updated_at": "2024-06-18T11:09:47Z",
          "author_association": "CONTRIBUTOR",
          "body": "Please refer to [this PR](https://github.com/django/django/pull/18280) for a more basic implementation.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2175757193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2260074596",
          "html_url": "https://github.com/django/django/pull/18123#issuecomment-2260074596",
          "issue_url": "https://api.github.com/repos/django/django/issues/18123",
          "id": 2260074596,
          "node_id": "IC_kwDOAD-Lgs6GtgBk",
          "user": {
            "login": "csirmazbendeguz",
            "id": 19559023,
            "node_id": "MDQ6VXNlcjE5NTU5MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19559023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csirmazbendeguz",
            "html_url": "https://github.com/csirmazbendeguz",
            "followers_url": "https://api.github.com/users/csirmazbendeguz/followers",
            "following_url": "https://api.github.com/users/csirmazbendeguz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csirmazbendeguz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csirmazbendeguz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csirmazbendeguz/subscriptions",
            "organizations_url": "https://api.github.com/users/csirmazbendeguz/orgs",
            "repos_url": "https://api.github.com/users/csirmazbendeguz/repos",
            "events_url": "https://api.github.com/users/csirmazbendeguz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csirmazbendeguz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-31T09:27:57Z",
          "updated_at": "2024-07-31T09:40:46Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'm closing this after the [forum discussion](https://forum.djangoproject.com/t/serialfields-yay-or-nay/32541) we had about it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2260074596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/11650",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/11650/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/11650/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/11650/events",
      "html_url": "https://github.com/django/django/pull/11650",
      "id": 479296148,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MzA2MjMxODU5",
      "number": 11650,
      "title": "Fixed #31224 -- Added support for asynchronous views and middleware.",
      "user": {
        "login": "andrewgodwin",
        "id": 36182,
        "node_id": "MDQ6VXNlcjM2MTgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewgodwin",
        "html_url": "https://github.com/andrewgodwin",
        "followers_url": "https://api.github.com/users/andrewgodwin/followers",
        "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
        "repos_url": "https://api.github.com/users/andrewgodwin/repos",
        "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "felixxm",
          "id": 2865885,
          "node_id": "MDQ6VXNlcjI4NjU4ODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/felixxm",
          "html_url": "https://github.com/felixxm",
          "followers_url": "https://api.github.com/users/felixxm/followers",
          "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
          "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
          "organizations_url": "https://api.github.com/users/felixxm/orgs",
          "repos_url": "https://api.github.com/users/felixxm/repos",
          "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/felixxm/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 42,
      "created_at": "2019-08-10T18:50:44Z",
      "updated_at": "2020-03-21T09:19:14Z",
      "closed_at": "2020-03-18T19:20:38Z",
      "author_association": "MEMBER",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/11650",
        "html_url": "https://github.com/django/django/pull/11650",
        "diff_url": "https://github.com/django/django/pull/11650.diff",
        "patch_url": "https://github.com/django/django/pull/11650.patch",
        "merged_at": "2020-03-18T19:20:38Z"
      },
      "body": "ticket-31224 \r\n\r\nThis implements the ability to have asynchronous views in Django, by simply declaring a view as `async def`.\r\n\r\nUnder the hood, it rewrites the BaseHandler to be natively async and makes the WSGI request path run an async loop in-place for every request in order to service this. The ASGI request path down to a view is instead intended to be natively asynchronous all the way down.\r\n\r\nThis is still a work in progress, as it currently has several potential issues:\r\n\r\n- [x] There are a small number of failing tests \r\n- [x] Synchronous middleware works, but its presence means a thread is used every request, defeating the point of async views. \r\n- [x] Class-based views do not have a clear path to async compatibility\r\n- [x] There is not yet any documentation about how to use it\r\n\r\nI'm putting it up as a draft PR so people have a place to easily see it and review the code so far.",
      "closed_by": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/11650/reactions",
        "total_count": 90,
        "+1": 35,
        "-1": 0,
        "laugh": 0,
        "hooray": 19,
        "confused": 0,
        "heart": 20,
        "rocket": 16,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/11650/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/534370223",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-534370223",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 534370223,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDM3MDIyMw==",
          "user": {
            "login": "auvipy",
            "id": 6212603,
            "node_id": "MDQ6VXNlcjYyMTI2MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6212603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auvipy",
            "html_url": "https://github.com/auvipy",
            "followers_url": "https://api.github.com/users/auvipy/followers",
            "following_url": "https://api.github.com/users/auvipy/following{/other_user}",
            "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions",
            "organizations_url": "https://api.github.com/users/auvipy/orgs",
            "repos_url": "https://api.github.com/users/auvipy/repos",
            "events_url": "https://api.github.com/users/auvipy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auvipy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-09-24T03:16:39Z",
          "updated_at": "2019-09-24T03:16:39Z",
          "author_association": "CONTRIBUTOR",
          "body": "is it too late to consider trio? for class-based async views, can we get inspiration from django-vanilla-views? what about making new async views instead of current class based views?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/534370223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/535086088",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-535086088",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 535086088,
          "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTA4NjA4OA==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-09-25T15:47:20Z",
          "updated_at": "2019-09-25T15:47:20Z",
          "author_association": "MEMBER",
          "body": "@auvipy Unfortunately, while I like trio, it has a much smaller library ecosystem and so pragmatically we can't use it. My hope is eventually to make it possible to use in some situations.\r\n\r\nSome more class-based views discussion is over on the forum (https://forum.djangoproject.com/c/internals/async) - while new async views is cleanest, it does mean having two versions of everything to maintain, which isn't great.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/535086088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/541234602",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-541234602",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 541234602,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTIzNDYwMg==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-11T21:45:39Z",
          "updated_at": "2019-10-11T21:45:39Z",
          "author_association": "MEMBER",
          "body": "@aeros We use the `iscoroutinefunction` function from `asyncio` as it allows us to flag things that are effectively coroutine functions (i.e. callables that return a coroutine) that are not declared as `async def`. Specifically, this is used in our SyncToAsync wrapper that turns sync-callables into async-callables.\r\n\r\nBy my reading, the `inspect` version does not offer this, whereas the `asyncio` version lets you annotate functions with `asyncio.coroutines._is_coroutine` to mark them as such. Given this, we can't use the `inspect` version, as it's too narrow - it only returns functions that were declared async def, rather than actually telling you if something is a coroutine function.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/541234602/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/541362009",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-541362009",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 541362009,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTM2MjAwOQ==",
          "user": {
            "login": "aeros",
            "id": 44193521,
            "node_id": "MDQ6VXNlcjQ0MTkzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/44193521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeros",
            "html_url": "https://github.com/aeros",
            "followers_url": "https://api.github.com/users/aeros/followers",
            "following_url": "https://api.github.com/users/aeros/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeros/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeros/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeros/subscriptions",
            "organizations_url": "https://api.github.com/users/aeros/orgs",
            "repos_url": "https://api.github.com/users/aeros/repos",
            "events_url": "https://api.github.com/users/aeros/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeros/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2019-10-12T21:14:24Z",
          "updated_at": "2019-10-12T21:14:24Z",
          "author_association": "NONE",
          "body": "> By my reading, the inspect version does not offer this, whereas the asyncio version lets you annotate functions with asyncio.coroutines._is_coroutine to mark them as such. Given this, we can't use the inspect version, as it's too narrow - it only returns functions that were declared async def, rather than actually telling you if something is a coroutine function.\r\n\r\n@andrewgodwin That's correct. I mainly wanted to make sure that it was intentional and it's clear that doing so will indirectly support the older generator coroutines that are being deprecated in Python 3.10 (unless `asyncio.iscoroutine()` and `asyncio.iscoroutinefunction()` are changed). I wasn't aware of Django's `SyncToAsync` wrapper, but I can see why `inspect.iscoroutine()` would not be compatible with it.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/541362009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/579474480",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-579474480",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 579474480,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3NDQ4MA==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-01-28T21:51:57Z",
          "updated_at": "2020-01-28T22:14:28Z",
          "author_association": "MEMBER",
          "body": "Given that this branch now passes all tests and shows no drop in sync performance in my testing, I consider it ready for review. I've also added relevant docs.\r\n\r\n(I did not squash the commits down as I want to either do that with github's squash-and-merge, or wait until all requested changes are through and we're ready to go)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/579474480/reactions",
            "total_count": 9,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 9,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/582481061",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-582481061",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 582481061,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjQ4MTA2MQ==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-05T16:06:53Z",
          "updated_at": "2020-02-05T16:06:53Z",
          "author_association": "MEMBER",
          "body": "Good point about the testing - I always tend to forget that late in a project (especially as I was mostly performance-testing this with a separate suite). I'll try to get some extra tests in today or over the weekend and get that coverage up.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/582481061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/582575292",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-582575292",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 582575292,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjU3NTI5Mg==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-05T19:36:26Z",
          "updated_at": "2020-02-05T19:36:26Z",
          "author_association": "MEMBER",
          "body": "@carltongibson I've added more handler tests as well as the necessary `AsyncClient` we needed to support them, and then some user docs about using all this for your own async tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/582575292/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/582584688",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-582584688",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 582584688,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjU4NDY4OA==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-05T19:58:28Z",
          "updated_at": "2020-02-05T19:58:28Z",
          "author_association": "MEMBER",
          "body": "Super @andrewgodwin! I saw the commit come in and had to laugh. Great work. Will look again tomorrow. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/582584688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585285338",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585285338",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585285338,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTI4NTMzOA==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T16:17:32Z",
          "updated_at": "2020-02-12T16:17:32Z",
          "author_association": "MEMBER",
          "body": "@carltongibson Ah, interesting! I only ever run the test suites rather than the individual methods, so I never ran into this.\r\n\r\nLet me go dive in and see if I can figure out a way to have Django do this automatically; I had considered making the test runner just auto-apply `async_to_sync`, so maybe this is the time to do this.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585285338/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585296684",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585296684",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585296684,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTI5NjY4NA==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T16:39:22Z",
          "updated_at": "2020-02-12T16:40:16Z",
          "author_association": "MEMBER",
          "body": "Hey @andrewgodwin Super. Thanks.\r\n\r\nWhilst you're looking... My other (currently proto-) question is, Can we reduce the number of `async def`s in test/client.py? \r\n\r\n* Does AsyncRequestFactory need `async def` at all? \r\n   * If yes, can it just be `request()`, but that doesn't `await` anything so...?\r\n* Then we just have `async def request()` in AsyncClient, which does `await`. \r\n\r\nAm still playing with it, but thought I'd mention it early since you're here. \ud83d\ude42\r\n\r\n\r\nOther than that, this is looking good I think. (Time to ask @felixxm to get out the fine-toothed comb, before another fine read of the docs...) Thanks for the super effort. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585296684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585321879",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585321879",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585321879,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTMyMTg3OQ==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T17:31:11Z",
          "updated_at": "2020-02-12T17:31:11Z",
          "author_association": "MEMBER",
          "body": "@carltongibson I don't think I can stop `AsyncRequestFactory.request` being one - since its child `AsyncClient.request` is - but I might be able to remove it from `AsyncRequestFactory.generic`. Will have a go.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585321879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585351303",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585351303",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585351303,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTM1MTMwMw==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T18:29:53Z",
          "updated_at": "2020-02-12T18:29:53Z",
          "author_association": "MEMBER",
          "body": "I think that's allowed: \r\n\r\n```\r\nimport asyncio\r\n\r\n\r\nclass Parent:\r\n    def foo(self):\r\n        return \"Hello\"\r\n\r\n\r\nclass Child(Parent):\r\n    async def foo(self):\r\n        return super().foo()\r\n\r\n\r\nasync def main():\r\n    c = Child()\r\n    return await c.foo()\r\n\r\n\r\nif __name__ == '__main__':\r\n    print(\r\n        asyncio.run(main())\r\n    )\r\n```\r\n\r\nRuns as \r\n\r\n```\r\n~/Desktop $ python async_subclass.py \r\nHello\r\n```\r\n\r\nNothing seemed to break when I was experimenting earlier. \r\n\r\n\r\n---\r\n\r\nI see you rebased. Failures are from 4e8d6a1bafbbebc0720c5d1ed751521356364fe9\r\n\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585351303/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585352707",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585352707",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585352707,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTM1MjcwNw==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T18:33:02Z",
          "updated_at": "2020-02-12T18:33:02Z",
          "author_association": "MEMBER",
          "body": "@carltongibson It is possible, definitely, but I don't think it is a good idea - IMO, the types signatures of parent and child should always match. I did get rid of async def on `generic`, though.\r\n\r\nI'm just in the process of trying to make the middleware a wee bit more efficient by making `MiddlewareMixin` async-aware and then I'll properly rebase and fix the conflicts/tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585352707/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585354030",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585354030",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585354030,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTM1NDAzMA==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T18:36:06Z",
          "updated_at": "2020-02-12T18:36:06Z",
          "author_association": "MEMBER",
          "body": "@andrewgodwin OK, that's a different kettle of fish. Happy if that's your reasoning. \r\n\r\nSuper stuff. Thanks \ud83d\udc4d ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585354030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585405762",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585405762",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585405762,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQwNTc2Mg==",
          "user": {
            "login": "carltongibson",
            "id": 64686,
            "node_id": "MDQ6VXNlcjY0Njg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carltongibson",
            "html_url": "https://github.com/carltongibson",
            "followers_url": "https://api.github.com/users/carltongibson/followers",
            "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
            "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
            "organizations_url": "https://api.github.com/users/carltongibson/orgs",
            "repos_url": "https://api.github.com/users/carltongibson/repos",
            "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carltongibson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T20:36:30Z",
          "updated_at": "2020-02-12T20:36:30Z",
          "author_association": "MEMBER",
          "body": "Hey @andrewgodwin \r\n\r\n> ... the types signatures of parent and child should always match ...\r\n\r\nBut we already swapped from def to async def when we subclassed RequestFactory for AsyncRequestFactory. (So we could just delay that one no?)\r\n\r\n(More than the particular answer, I\u00b4m wondering if there isn\u00b4t a little _Smell_ here. I\u00b4m sure it\u00b4d be _Fine_, but I\u00b4d like us to get it right, because once it\u00b4s in I think we\u00b4re stuck with it.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585405762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585409332",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585409332",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585409332,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQwOTMzMg==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T20:45:29Z",
          "updated_at": "2020-02-12T20:45:29Z",
          "author_association": "MEMBER",
          "body": "> But we already swapped from def to async def when we subclassed RequestFactory for AsyncRequestFactory. (So we could just delay that one no?)\r\n\r\nHm, you got me there. Personally, I would have made every method on `AsyncRequestFactory` explicitly async, but refrained from doing so to avoid useless code (they are all still async by convention, as they return coroutines, but they will not return `True` if you look at them with `iscoroutinefunction`, so they're in a weird middle ground).\r\n\r\nI'll remove it for now, and put a comment to advise the casual source code reader what is happening.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585409332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585443597",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585443597",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585443597,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQ0MzU5Nw==",
          "user": {
            "login": "aeros",
            "id": 44193521,
            "node_id": "MDQ6VXNlcjQ0MTkzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/44193521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aeros",
            "html_url": "https://github.com/aeros",
            "followers_url": "https://api.github.com/users/aeros/followers",
            "following_url": "https://api.github.com/users/aeros/following{/other_user}",
            "gists_url": "https://api.github.com/users/aeros/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aeros/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aeros/subscriptions",
            "organizations_url": "https://api.github.com/users/aeros/orgs",
            "repos_url": "https://api.github.com/users/aeros/repos",
            "events_url": "https://api.github.com/users/aeros/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aeros/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T22:11:19Z",
          "updated_at": "2020-02-12T22:11:38Z",
          "author_association": "NONE",
          "body": "@carltongibson While that's technically allowed, if that await never eventually hits a `yield` (in an `__await__`), the coroutine will not get suspended. This means means the await ends up being fairly pointless, and makes `await Child().foo()` behave effectively the same as if you had just called `Parent().foo()` directly.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585443597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/585447637",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-585447637",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 585447637,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQ0NzYzNw==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-02-12T22:21:43Z",
          "updated_at": "2020-02-12T22:21:43Z",
          "author_association": "MEMBER",
          "body": "Alright, I've rebased to master, squashed, fixed up the tests to remove the need to even have `async_to_sync` except in rare cases, as well as made all the default middleware considerably more efficient in async mode (no longer uses a thread while the view is running) and added a 3.1 release notes section.\r\n\r\nI await further feedback and the fine-toothed comb!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/585447637/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/595250314",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-595250314",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 595250314,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTI1MDMxNA==",
          "user": {
            "login": "felixxm",
            "id": 2865885,
            "node_id": "MDQ6VXNlcjI4NjU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixxm",
            "html_url": "https://github.com/felixxm",
            "followers_url": "https://api.github.com/users/felixxm/followers",
            "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
            "organizations_url": "https://api.github.com/users/felixxm/orgs",
            "repos_url": "https://api.github.com/users/felixxm/repos",
            "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixxm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-05T14:14:16Z",
          "updated_at": "2020-03-05T14:14:16Z",
          "author_association": "MEMBER",
          "body": "I merged autoconversion of test async methods in 17009e910538b9c3709d302f54c2d10eb245cf38 and rebased this PR.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/595250314/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/595508265",
          "html_url": "https://github.com/django/django/pull/11650#issuecomment-595508265",
          "issue_url": "https://api.github.com/repos/django/django/issues/11650",
          "id": 595508265,
          "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTUwODI2NQ==",
          "user": {
            "login": "andrewgodwin",
            "id": 36182,
            "node_id": "MDQ6VXNlcjM2MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewgodwin",
            "html_url": "https://github.com/andrewgodwin",
            "followers_url": "https://api.github.com/users/andrewgodwin/followers",
            "following_url": "https://api.github.com/users/andrewgodwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrewgodwin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrewgodwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrewgodwin/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewgodwin/orgs",
            "repos_url": "https://api.github.com/users/andrewgodwin/repos",
            "events_url": "https://api.github.com/users/andrewgodwin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrewgodwin/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2020-03-06T00:09:24Z",
          "updated_at": "2020-03-06T00:09:24Z",
          "author_association": "MEMBER",
          "body": "@felixxm Looks good to me. Any more work needed on this PR, or are we just waiting for final review and merge?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/595508265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/6726",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/6726/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/6726/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/6726/events",
      "html_url": "https://github.com/django/django/pull/6726",
      "id": 158556974,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NzI2MzA3MzI=",
      "number": 6726,
      "title": "Fixed #26709 -- Add class based indexes and CreateIndex operation",
      "user": {
        "login": "akki",
        "id": 4801628,
        "node_id": "MDQ6VXNlcjQ4MDE2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4801628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/akki",
        "html_url": "https://github.com/akki",
        "followers_url": "https://api.github.com/users/akki/followers",
        "following_url": "https://api.github.com/users/akki/following{/other_user}",
        "gists_url": "https://api.github.com/users/akki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/akki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/akki/subscriptions",
        "organizations_url": "https://api.github.com/users/akki/orgs",
        "repos_url": "https://api.github.com/users/akki/repos",
        "events_url": "https://api.github.com/users/akki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/akki/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 15,
      "created_at": "2016-06-05T14:29:12Z",
      "updated_at": "2016-06-27T14:41:37Z",
      "closed_at": "2016-06-27T14:41:37Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/6726",
        "html_url": "https://github.com/django/django/pull/6726",
        "diff_url": "https://github.com/django/django/pull/6726.diff",
        "patch_url": "https://github.com/django/django/pull/6726.patch",
        "merged_at": null
      },
      "body": "Ticket [#26709](https://code.djangoproject.com/ticket/26709).\n",
      "closed_by": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/6726/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/6726/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/224070377",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-224070377",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 224070377,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDA3MDM3Nw==",
          "user": {
            "login": "mjtamlyn",
            "id": 389581,
            "node_id": "MDQ6VXNlcjM4OTU4MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/389581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjtamlyn",
            "html_url": "https://github.com/mjtamlyn",
            "followers_url": "https://api.github.com/users/mjtamlyn/followers",
            "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions",
            "organizations_url": "https://api.github.com/users/mjtamlyn/orgs",
            "repos_url": "https://api.github.com/users/mjtamlyn/repos",
            "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjtamlyn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-06T19:59:25Z",
          "updated_at": "2016-06-06T19:59:25Z",
          "author_association": "MEMBER",
          "body": "I think this is broadly heading in the right direction. I'd like to see some example migration file code. Perhaps it's worth you setting up a simple project that we can build up the functionality but makes it easy to show that it works.\n\nI think `Index.as_sql` is likely to need some refactoring as we make it more complex to support other options. In particular, I think that just using interpolation into `schema.sql_create_index` may prove too simplistic.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/224070377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/224670789",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-224670789",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 224670789,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY3MDc4OQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-08T17:42:14Z",
          "updated_at": "2016-06-08T17:42:14Z",
          "author_association": "MEMBER",
          "body": "About naming, we have:\nCreateModel, DeleteModel\nAddField, RemoveField,\n\nIt would be nice if the new operations were consistent with these names. I guess I'd go with AddIndex/RemoveIndex since, like fields, these are ancillary things to models -- other opinions?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/224670789/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/224673465",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-224673465",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 224673465,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY3MzQ2NQ==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-08T17:51:32Z",
          "updated_at": "2016-06-08T17:51:32Z",
          "author_association": "MEMBER",
          "body": "> About naming, we have:\n> CreateModel, DeleteModel\n> AddField, RemoveField,\n> \n> It would be nice if the new operations were consistent with these names. I guess I'd go with AddIndex/RemoveIndex since, like fields, these are ancillary things to models -- other opinions?\n\nAgreed.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/224673465/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/224675371",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-224675371",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 224675371,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY3NTM3MQ==",
          "user": {
            "login": "MarkusH",
            "id": 475613,
            "node_id": "MDQ6VXNlcjQ3NTYxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/475613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkusH",
            "html_url": "https://github.com/MarkusH",
            "followers_url": "https://api.github.com/users/MarkusH/followers",
            "following_url": "https://api.github.com/users/MarkusH/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkusH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkusH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkusH/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkusH/orgs",
            "repos_url": "https://api.github.com/users/MarkusH/repos",
            "events_url": "https://api.github.com/users/MarkusH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkusH/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-08T17:57:46Z",
          "updated_at": "2016-06-08T17:58:16Z",
          "author_association": "MEMBER",
          "body": "> > About naming, we have:\n> > CreateModel, DeleteModel\n> > AddField, RemoveField,\n> > \n> > It would be nice if the new operations were consistent with these names. I guess I'd go with AddIndex/RemoveIndex since, like fields, these are ancillary things to models -- other opinions?\n> \n> Agreed.\n\nThe names are derived from the SQL syntax which is `CREATE INDEX` and `DROP INDEX`. (`CREATE TABLE` / `DROP TABLE`, `ADD COLUMN` / `DROP COLUMN` [I agree the latter is poorly chosen]).\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/224675371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/224682555",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-224682555",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 224682555,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY4MjU1NQ==",
          "user": {
            "login": "MarkusH",
            "id": 475613,
            "node_id": "MDQ6VXNlcjQ3NTYxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/475613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkusH",
            "html_url": "https://github.com/MarkusH",
            "followers_url": "https://api.github.com/users/MarkusH/followers",
            "following_url": "https://api.github.com/users/MarkusH/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkusH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkusH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkusH/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkusH/orgs",
            "repos_url": "https://api.github.com/users/MarkusH/repos",
            "events_url": "https://api.github.com/users/MarkusH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkusH/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-08T18:22:23Z",
          "updated_at": "2016-06-08T18:22:23Z",
          "author_association": "MEMBER",
          "body": "> > > About naming, we have:\n> > > CreateModel, DeleteModel\n> > > AddField, RemoveField,\n> > > \n> > > It would be nice if the new operations were consistent with these names. I guess I'd go with AddIndex/RemoveIndex since, like fields, these are ancillary things to models -- other opinions?\n> > \n> > Agreed.\n> \n> The names are derived from the SQL syntax which is `CREATE INDEX` and `DROP INDEX`. (`CREATE TABLE` / `DROP TABLE`, `ADD COLUMN` / `DROP COLUMN` [I agree the latter is poorly chosen]).\n\nWell there we go, I don't even recall the names of the operations: it's `CreateModel`/`DeleteModel` and `AddField`/`RemoveField`. Anyhow, I find `CreateIndex`/`DeleteIndex` more intuitive (the keyword for the creating a new index is still the same as in SQL)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/224682555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/224684636",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-224684636",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 224684636,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY4NDYzNg==",
          "user": {
            "login": "charettes",
            "id": 9293,
            "node_id": "MDQ6VXNlcjkyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charettes",
            "html_url": "https://github.com/charettes",
            "followers_url": "https://api.github.com/users/charettes/followers",
            "following_url": "https://api.github.com/users/charettes/following{/other_user}",
            "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
            "organizations_url": "https://api.github.com/users/charettes/orgs",
            "repos_url": "https://api.github.com/users/charettes/repos",
            "events_url": "https://api.github.com/users/charettes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charettes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-08T18:29:21Z",
          "updated_at": "2016-06-08T18:29:21Z",
          "author_association": "MEMBER",
          "body": "As indexes are related to a table/model I find `AddIndex`/`RemoveIndex` more appropriate.\n\nIs there a reason not to use a single `AlterIndexes` operation analogous to `AlterUniqueTogether`/`AlterIndexTogether`?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/224684636/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/225340443",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-225340443",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 225340443,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM0MDQ0Mw==",
          "user": {
            "login": "akki",
            "id": 4801628,
            "node_id": "MDQ6VXNlcjQ4MDE2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4801628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akki",
            "html_url": "https://github.com/akki",
            "followers_url": "https://api.github.com/users/akki/followers",
            "following_url": "https://api.github.com/users/akki/following{/other_user}",
            "gists_url": "https://api.github.com/users/akki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akki/subscriptions",
            "organizations_url": "https://api.github.com/users/akki/orgs",
            "repos_url": "https://api.github.com/users/akki/repos",
            "events_url": "https://api.github.com/users/akki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akki/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-11T06:38:56Z",
          "updated_at": "2016-06-11T06:38:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have made all the changes.\nPending decisions:\n1) Naming of the operations - the reason I chose CreateIndex and DropIndex is because of the SQL statements but if that's not the case let's decide on the names.\n2) Do we actually need these two operations or an `AlterIndexes` will do the job.\n3) For the new `get_name` to be independent of databases, we need to put a restriction of 30 chars on the name length. Does this look good or any other suggestions ?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/225340443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/226180118",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-226180118",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 226180118,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjE4MDExOA==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-15T13:02:35Z",
          "updated_at": "2016-06-15T13:02:35Z",
          "author_association": "MEMBER",
          "body": "I wonder if it would be better to drop the `BaseIndex` class and call that `Index` instead to parallel the `models.Field` base class?\n\nIs there a design discussion about why we're moving toward storing index names in migration files instead of delegating that to the database? Can you revive the DEP?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/226180118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/226186386",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-226186386",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 226186386,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjE4NjM4Ng==",
          "user": {
            "login": "akki",
            "id": 4801628,
            "node_id": "MDQ6VXNlcjQ4MDE2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4801628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akki",
            "html_url": "https://github.com/akki",
            "followers_url": "https://api.github.com/users/akki/followers",
            "following_url": "https://api.github.com/users/akki/following{/other_user}",
            "gists_url": "https://api.github.com/users/akki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akki/subscriptions",
            "organizations_url": "https://api.github.com/users/akki/orgs",
            "repos_url": "https://api.github.com/users/akki/repos",
            "events_url": "https://api.github.com/users/akki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akki/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-15T13:27:00Z",
          "updated_at": "2016-06-15T13:27:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "Auto-creation of index names makes it very hard to maintain/relate indexes when entities like fields and models are altered. Also this will allow users to pick names of their choice for their indexes. A previous discussion for the same can be found on this Django-developers thread - [DB Migrations: Proposed fix for \"Index name collisions after objects are renamed then re-created\"](https://groups.google.com/d/msg/django-developers/7pMxh2JF1lo/Q9B-cxqG4r4J).\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/226186386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/226583255",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-226583255",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 226583255,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU4MzI1NQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-16T19:07:48Z",
          "updated_at": "2016-06-16T19:07:48Z",
          "author_association": "MEMBER",
          "body": "If you're waiting for reviews, maybe you want to look at https://code.djangoproject.com/ticket/24442 in the meantime.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/226583255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/226984046",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-226984046",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 226984046,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk4NDA0Ng==",
          "user": {
            "login": "akki",
            "id": 4801628,
            "node_id": "MDQ6VXNlcjQ4MDE2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4801628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akki",
            "html_url": "https://github.com/akki",
            "followers_url": "https://api.github.com/users/akki/followers",
            "following_url": "https://api.github.com/users/akki/following{/other_user}",
            "gists_url": "https://api.github.com/users/akki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akki/subscriptions",
            "organizations_url": "https://api.github.com/users/akki/orgs",
            "repos_url": "https://api.github.com/users/akki/repos",
            "events_url": "https://api.github.com/users/akki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akki/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-19T07:36:49Z",
          "updated_at": "2016-06-19T07:38:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "I have updated the algorithm.\nTwo indexes are identical if they are on the same **table**, have the same set of **fields** and are of the same **type**, so I have taken all three of these into account while hashing.\nAlso, I have alloted a share to each of them in the index name to keep it meaningful (as much as possible). I have given more share to table-name than field-name because table-name contains both app label and model name which usually makes it significantly larger than the column name.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/226984046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/227148365",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-227148365",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 227148365,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzE0ODM2NQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-20T13:53:42Z",
          "updated_at": "2016-06-20T13:53:42Z",
          "author_association": "MEMBER",
          "body": "Some cosmetic edits at https://github.com/akki/django/pull/2.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/227148365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/227616722",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-227616722",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 227616722,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzYxNjcyMg==",
          "user": {
            "login": "akki",
            "id": 4801628,
            "node_id": "MDQ6VXNlcjQ4MDE2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4801628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akki",
            "html_url": "https://github.com/akki",
            "followers_url": "https://api.github.com/users/akki/followers",
            "following_url": "https://api.github.com/users/akki/following{/other_user}",
            "gists_url": "https://api.github.com/users/akki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akki/subscriptions",
            "organizations_url": "https://api.github.com/users/akki/orgs",
            "repos_url": "https://api.github.com/users/akki/repos",
            "events_url": "https://api.github.com/users/akki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akki/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-22T01:09:01Z",
          "updated_at": "2016-06-22T01:09:01Z",
          "author_association": "CONTRIBUTOR",
          "body": "@timgraham Added tests for index names starting with numbers and underscores (regarding `get_name`) if that's what you meant.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/227616722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/228663808",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-228663808",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 228663808,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyODY2MzgwOA==",
          "user": {
            "login": "akki",
            "id": 4801628,
            "node_id": "MDQ6VXNlcjQ4MDE2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4801628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akki",
            "html_url": "https://github.com/akki",
            "followers_url": "https://api.github.com/users/akki/followers",
            "following_url": "https://api.github.com/users/akki/following{/other_user}",
            "gists_url": "https://api.github.com/users/akki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akki/subscriptions",
            "organizations_url": "https://api.github.com/users/akki/orgs",
            "repos_url": "https://api.github.com/users/akki/repos",
            "events_url": "https://api.github.com/users/akki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akki/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-27T06:29:05Z",
          "updated_at": "2016-06-27T06:29:05Z",
          "author_association": "CONTRIBUTOR",
          "body": "Updated PR addressing all comments. Rebased against master and squashed all commits.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/228663808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/228765951",
          "html_url": "https://github.com/django/django/pull/6726#issuecomment-228765951",
          "issue_url": "https://api.github.com/repos/django/django/issues/6726",
          "id": 228765951,
          "node_id": "MDEyOklzc3VlQ29tbWVudDIyODc2NTk1MQ==",
          "user": {
            "login": "timgraham",
            "id": 411869,
            "node_id": "MDQ6VXNlcjQxMTg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timgraham",
            "html_url": "https://github.com/timgraham",
            "followers_url": "https://api.github.com/users/timgraham/followers",
            "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
            "organizations_url": "https://api.github.com/users/timgraham/orgs",
            "repos_url": "https://api.github.com/users/timgraham/repos",
            "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timgraham/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2016-06-27T14:41:37Z",
          "updated_at": "2016-06-27T14:41:37Z",
          "author_association": "MEMBER",
          "body": "merged in 156e2d59cf92eb252c2f6ef9bb0b65f26c707de2, thanks!\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/228765951/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/2720",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/2720/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/2720/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/2720/events",
      "html_url": "https://github.com/django/django/pull/2720",
      "id": 34350761,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzNTkzNTU=",
      "number": 2720,
      "title": "#22707 Replaced misleading primary/replica terminology with widely recognized m...",
      "user": {
        "login": "chrisk12345",
        "id": 1642618,
        "node_id": "MDQ6VXNlcjE2NDI2MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1642618?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chrisk12345",
        "html_url": "https://github.com/chrisk12345",
        "followers_url": "https://api.github.com/users/chrisk12345/followers",
        "following_url": "https://api.github.com/users/chrisk12345/following{/other_user}",
        "gists_url": "https://api.github.com/users/chrisk12345/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chrisk12345/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chrisk12345/subscriptions",
        "organizations_url": "https://api.github.com/users/chrisk12345/orgs",
        "repos_url": "https://api.github.com/users/chrisk12345/repos",
        "events_url": "https://api.github.com/users/chrisk12345/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chrisk12345/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": true,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 119,
      "created_at": "2014-05-27T08:23:38Z",
      "updated_at": "2015-05-20T22:08:28Z",
      "closed_at": "2014-05-27T08:38:15Z",
      "author_association": "NONE",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/2720",
        "html_url": "https://github.com/django/django/pull/2720",
        "diff_url": "https://github.com/django/django/pull/2720.diff",
        "patch_url": "https://github.com/django/django/pull/2720.patch",
        "merged_at": null
      },
      "body": "...aster/slave\n\nAll occurences of \"master/slave\" were recently replaced with \"leader/follower\" (https://github.com/django/django/pull/2692), then with \"primary/replica\" (https://github.com/django/django/commit/beec05686ccc3bee8461f9a5a02c607a02352ae1).\nThis new terminology is vague, ill-advised, and '''very misleading.'''\n\nDjango is a server-side framework with the goal of making Pythonistas' life sweet. By no means this requires reforming old and widely accepted database terminology, or feeding fat internet trolls like Feminist Software Foundation.\n\nLet's look at the famous Zen of Python:\n- Special cases aren't special enough to break the rules.\n- Although practicality beats purity.\n- There should be one-- and preferably only one --obvious way to do it.\n\nAnd, above all:\n- '''Explicit is better than implicit.'''\n\nHere are four reasons, baked in the core of the language, as well as in the core or the developers' hearts, for why changing this '''old, clear, concise and immediately recognized''' terminology is a bad idea.\n\nThis terminology has been used for a long time, and by no means those purely technical terms carry racially charged meanings to users, neither are they offending in any other way.\nThis patch replaces all occurrences of \"primary/replica\" with the good old \"master/slave\" together with now unnecessary comments like \"referred to as master/slave by some databases\".\n",
      "closed_by": {
        "login": "evildmp",
        "id": 86222,
        "node_id": "MDQ6VXNlcjg2MjIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/86222?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/evildmp",
        "html_url": "https://github.com/evildmp",
        "followers_url": "https://api.github.com/users/evildmp/followers",
        "following_url": "https://api.github.com/users/evildmp/following{/other_user}",
        "gists_url": "https://api.github.com/users/evildmp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/evildmp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/evildmp/subscriptions",
        "organizations_url": "https://api.github.com/users/evildmp/orgs",
        "repos_url": "https://api.github.com/users/evildmp/repos",
        "events_url": "https://api.github.com/users/evildmp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/evildmp/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/2720/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/2720/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44248015",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44248015",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44248015,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjQ4MDE1",
          "user": {
            "login": "jorgecarleitao",
            "id": 2772607,
            "node_id": "MDQ6VXNlcjI3NzI2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2772607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgecarleitao",
            "html_url": "https://github.com/jorgecarleitao",
            "followers_url": "https://api.github.com/users/jorgecarleitao/followers",
            "following_url": "https://api.github.com/users/jorgecarleitao/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgecarleitao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgecarleitao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgecarleitao/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgecarleitao/orgs",
            "repos_url": "https://api.github.com/users/jorgecarleitao/repos",
            "events_url": "https://api.github.com/users/jorgecarleitao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgecarleitao/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T08:30:03Z",
          "updated_at": "2014-05-27T08:30:03Z",
          "author_association": "CONTRIBUTOR",
          "body": "IMHO this should be accompanied by a topic in the dev mailing list, and the relevant discussion should happen there.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44248015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44248742",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44248742",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44248742,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjQ4NzQy",
          "user": {
            "login": "evildmp",
            "id": 86222,
            "node_id": "MDQ6VXNlcjg2MjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/86222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evildmp",
            "html_url": "https://github.com/evildmp",
            "followers_url": "https://api.github.com/users/evildmp/followers",
            "following_url": "https://api.github.com/users/evildmp/following{/other_user}",
            "gists_url": "https://api.github.com/users/evildmp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evildmp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evildmp/subscriptions",
            "organizations_url": "https://api.github.com/users/evildmp/orgs",
            "repos_url": "https://api.github.com/users/evildmp/repos",
            "events_url": "https://api.github.com/users/evildmp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evildmp/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T08:38:15Z",
          "updated_at": "2014-05-27T08:38:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yes indeed. Please do raise the question on the django-dev email list, or even on the users email list since this is not just a question for developers. \n\nI'm closing this pull request now; for now, at least. Feel free to raise it again later, but please give it a little time, and allow an opportunity for wider discussion. Thanks.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44248742/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44250406",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44250406",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44250406,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjUwNDA2",
          "user": {
            "login": "chrisk12345",
            "id": 1642618,
            "node_id": "MDQ6VXNlcjE2NDI2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisk12345",
            "html_url": "https://github.com/chrisk12345",
            "followers_url": "https://api.github.com/users/chrisk12345/followers",
            "following_url": "https://api.github.com/users/chrisk12345/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisk12345/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisk12345/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisk12345/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisk12345/orgs",
            "repos_url": "https://api.github.com/users/chrisk12345/repos",
            "events_url": "https://api.github.com/users/chrisk12345/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisk12345/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T08:55:52Z",
          "updated_at": "2014-05-27T08:55:52Z",
          "author_association": "NONE",
          "body": "In this case, the two previous commits should be reverted. If this issue deserves a wider discussion, any change should take place after the django contributors come to an agreement on mailing list.\nMerging a controversial commit was clearly a mistake and it should be reverted.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44250406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44252462",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44252462",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44252462,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjUyNDYy",
          "user": {
            "login": "ajpaulson",
            "id": 1290947,
            "node_id": "MDQ6VXNlcjEyOTA5NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1290947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajpaulson",
            "html_url": "https://github.com/ajpaulson",
            "followers_url": "https://api.github.com/users/ajpaulson/followers",
            "following_url": "https://api.github.com/users/ajpaulson/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajpaulson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajpaulson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajpaulson/subscriptions",
            "organizations_url": "https://api.github.com/users/ajpaulson/orgs",
            "repos_url": "https://api.github.com/users/ajpaulson/repos",
            "events_url": "https://api.github.com/users/ajpaulson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajpaulson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T09:19:01Z",
          "updated_at": "2014-05-27T09:19:01Z",
          "author_association": "NONE",
          "body": "While `master` and `slave` are widely used in database terms the terms `primary` and `replica` are also used and are interchangeable: http://en.wikipedia.org/wiki/Replication_%28computing%29\n\nThe point brought forth for the original change was that the terms `master` and `slave` have a negative impact on people and can be seen as insensitive.\n\nI understand that your reason for wanting to revert to that terminology is that you think people will be confused by the terms `primary` and `replica` but they are, and have been widely used and interchangeable in this context for some time now and accurately describe the concept.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44252462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44254797",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44254797",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44254797,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU0Nzk3",
          "user": {
            "login": "Fuuzetsu",
            "id": 893115,
            "node_id": "MDQ6VXNlcjg5MzExNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/893115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fuuzetsu",
            "html_url": "https://github.com/Fuuzetsu",
            "followers_url": "https://api.github.com/users/Fuuzetsu/followers",
            "following_url": "https://api.github.com/users/Fuuzetsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Fuuzetsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Fuuzetsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Fuuzetsu/subscriptions",
            "organizations_url": "https://api.github.com/users/Fuuzetsu/orgs",
            "repos_url": "https://api.github.com/users/Fuuzetsu/repos",
            "events_url": "https://api.github.com/users/Fuuzetsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Fuuzetsu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T09:46:08Z",
          "updated_at": "2014-05-27T09:46:08Z",
          "author_association": "NONE",
          "body": "Any term can have \u2018negative impact\u2019 on someone, that's just how it is. The fact that this gets closed and told to go and discuss on the mailing list first but the original PR gets merged in without as much as a single comment of justification is a joke. Focus your effort on actual issues instead of mangling documentation for the sake of political correctness in eyes of some individuals.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44254797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44255302",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44255302",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44255302,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU1MzAy",
          "user": {
            "login": "ajpaulson",
            "id": 1290947,
            "node_id": "MDQ6VXNlcjEyOTA5NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1290947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajpaulson",
            "html_url": "https://github.com/ajpaulson",
            "followers_url": "https://api.github.com/users/ajpaulson/followers",
            "following_url": "https://api.github.com/users/ajpaulson/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajpaulson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajpaulson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajpaulson/subscriptions",
            "organizations_url": "https://api.github.com/users/ajpaulson/orgs",
            "repos_url": "https://api.github.com/users/ajpaulson/repos",
            "events_url": "https://api.github.com/users/ajpaulson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajpaulson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T09:51:30Z",
          "updated_at": "2014-05-27T09:51:30Z",
          "author_association": "NONE",
          "body": "@Fuuzetsu Yes any term _can_ have a negative impact on individuals, but `master` and `slave` have negative impacts on large amounts of people and are generally offensive terms.\n\nI agree there should have been some discussion of the original PR so that it was clear exactly why it was being changed and everyone could weigh in on the possible alternatives to make the transition cleaner. But switching back to or defending offensive terms is not the way to go.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44255302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44255384",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44255384",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44255384,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU1Mzg0",
          "user": {
            "login": "mcvsama",
            "id": 110877,
            "node_id": "MDQ6VXNlcjExMDg3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/110877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcvsama",
            "html_url": "https://github.com/mcvsama",
            "followers_url": "https://api.github.com/users/mcvsama/followers",
            "following_url": "https://api.github.com/users/mcvsama/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcvsama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcvsama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcvsama/subscriptions",
            "organizations_url": "https://api.github.com/users/mcvsama/orgs",
            "repos_url": "https://api.github.com/users/mcvsama/repos",
            "events_url": "https://api.github.com/users/mcvsama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcvsama/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T09:52:36Z",
          "updated_at": "2014-05-27T09:58:31Z",
          "author_association": "NONE",
          "body": "While I strongly agree that the original merge was\u2026 let's say \"funny but stupid\", I would rather not be told what to do in my project by some random people, if I was django developer. Oh, not necessarily a django developer, but any developer. First, it's their project and they can do whatever they want to do with it, second - it only makes them upset and encourages to stay behind their original decision, even if they later think it was wrong.\n\nBut anyway - master/slave are not offensive. Only person's action can be offensive, but not the word itself.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44255384/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44255990",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44255990",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44255990,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU1OTkw",
          "user": {
            "login": "ajpaulson",
            "id": 1290947,
            "node_id": "MDQ6VXNlcjEyOTA5NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1290947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajpaulson",
            "html_url": "https://github.com/ajpaulson",
            "followers_url": "https://api.github.com/users/ajpaulson/followers",
            "following_url": "https://api.github.com/users/ajpaulson/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajpaulson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajpaulson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajpaulson/subscriptions",
            "organizations_url": "https://api.github.com/users/ajpaulson/orgs",
            "repos_url": "https://api.github.com/users/ajpaulson/repos",
            "events_url": "https://api.github.com/users/ajpaulson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajpaulson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T09:59:19Z",
          "updated_at": "2014-05-27T09:59:19Z",
          "author_association": "NONE",
          "body": "@mcvsama Firstly: `master` / `slave` are offensive terms. They were created to describe a subjugation of human beings.\n\nSecondly: Django is a public open source project - to survive it must be inclusive of everyone and using offensive terms is harmful to the project.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44255990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44256605",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44256605",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44256605,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU2NjA1",
          "user": {
            "login": "mcvsama",
            "id": 110877,
            "node_id": "MDQ6VXNlcjExMDg3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/110877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcvsama",
            "html_url": "https://github.com/mcvsama",
            "followers_url": "https://api.github.com/users/mcvsama/followers",
            "following_url": "https://api.github.com/users/mcvsama/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcvsama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcvsama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcvsama/subscriptions",
            "organizations_url": "https://api.github.com/users/mcvsama/orgs",
            "repos_url": "https://api.github.com/users/mcvsama/repos",
            "events_url": "https://api.github.com/users/mcvsama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcvsama/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:05:58Z",
          "updated_at": "2014-05-27T10:06:40Z",
          "author_association": "NONE",
          "body": "@ajpaulson No, they aren't. If someone uses offensive words, you can say those words are offensive - it's a mental shortcut. There's no such mental shortcut in DB terminology or in django. And subjugation of humans is just one of meanings of \"master\" and \"slave\".\n\nSecondly: the fact it's public and open source is unrelated. It's still not something that everyone owns. In the end it's still controlled by some group of people. They will do whatever they want regardless of your opinion. :-)\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44256605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44256682",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44256682",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44256682,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU2Njgy",
          "user": {
            "login": "chrisk12345",
            "id": 1642618,
            "node_id": "MDQ6VXNlcjE2NDI2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisk12345",
            "html_url": "https://github.com/chrisk12345",
            "followers_url": "https://api.github.com/users/chrisk12345/followers",
            "following_url": "https://api.github.com/users/chrisk12345/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisk12345/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisk12345/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisk12345/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisk12345/orgs",
            "repos_url": "https://api.github.com/users/chrisk12345/repos",
            "events_url": "https://api.github.com/users/chrisk12345/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisk12345/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:06:48Z",
          "updated_at": "2014-05-27T10:06:48Z",
          "author_association": "NONE",
          "body": "Just how exactly can a free, supposedly American, person be offended by a technical term?\nHysterically accepting any claim for a terminology change just out of guilt for being free, is that how we fight slavery?\nWhy don't we focus the efforts on building a web framework easy to dive into for everyone, which is partially achieved by using common terminology and ignoring the attempts of the internet trolls to waste your time?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44256682/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44257134",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44257134",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44257134,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU3MTM0",
          "user": {
            "login": "ajpaulson",
            "id": 1290947,
            "node_id": "MDQ6VXNlcjEyOTA5NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1290947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajpaulson",
            "html_url": "https://github.com/ajpaulson",
            "followers_url": "https://api.github.com/users/ajpaulson/followers",
            "following_url": "https://api.github.com/users/ajpaulson/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajpaulson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajpaulson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajpaulson/subscriptions",
            "organizations_url": "https://api.github.com/users/ajpaulson/orgs",
            "repos_url": "https://api.github.com/users/ajpaulson/repos",
            "events_url": "https://api.github.com/users/ajpaulson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajpaulson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:11:51Z",
          "updated_at": "2014-05-27T10:11:51Z",
          "author_association": "NONE",
          "body": "\"Easy to dive into for everyone\" Yet you want to revert to language that a lot of people find offensive when there is a widely used and inoffensive alternative?\n\nAlso: why are you assuming that this is only for Americans? This is for a worldwide audience, many of whom witness or are affected by modern day slavery (sex slavery, indentured servitude etc).\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44257134/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44258258",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44258258",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44258258,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU4MjU4",
          "user": {
            "login": "chrisk12345",
            "id": 1642618,
            "node_id": "MDQ6VXNlcjE2NDI2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisk12345",
            "html_url": "https://github.com/chrisk12345",
            "followers_url": "https://api.github.com/users/chrisk12345/followers",
            "following_url": "https://api.github.com/users/chrisk12345/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisk12345/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisk12345/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisk12345/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisk12345/orgs",
            "repos_url": "https://api.github.com/users/chrisk12345/repos",
            "events_url": "https://api.github.com/users/chrisk12345/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisk12345/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:25:50Z",
          "updated_at": "2014-05-27T10:25:50Z",
          "author_association": "NONE",
          "body": "\"Easy to dive in\" means \"most of the terms and concepts used are immediately obvious or easily googleable.\" It is irrelevant what one thinks of a word itself if this word helps him get the job done.\n\nI'm not American myself, so your second attack goes astray :) It was just a suggestion based on the US' history of slavery.\n\nI googled \"master slave\", first results were relevant database stuff: https://www.google.com/search?q=master+slave&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a&channel=fflb\n\nThen, I googled \"primary replica\", and had a hard time finding anything that could be helpful, especially for a beginner: https://www.google.com/search?q=primary+replica&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a&channel=fflb\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44258258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44258635",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44258635",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44258635,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU4NjM1",
          "user": {
            "login": "ajpaulson",
            "id": 1290947,
            "node_id": "MDQ6VXNlcjEyOTA5NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1290947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajpaulson",
            "html_url": "https://github.com/ajpaulson",
            "followers_url": "https://api.github.com/users/ajpaulson/followers",
            "following_url": "https://api.github.com/users/ajpaulson/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajpaulson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajpaulson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajpaulson/subscriptions",
            "organizations_url": "https://api.github.com/users/ajpaulson/orgs",
            "repos_url": "https://api.github.com/users/ajpaulson/repos",
            "events_url": "https://api.github.com/users/ajpaulson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajpaulson/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:31:04Z",
          "updated_at": "2014-05-27T10:31:04Z",
          "author_association": "NONE",
          "body": "My second point was not an \"attack\" it was a counter to your mention of \"ust how exactly can a free, supposedly American, person be offended by a technical term?\"\n\nIn your `primary replica` search result the top result I see is the link I posted about replication in computing with a section on database replication, the second result is to MongoDB, the rest are MSSQL, MySQL, PostgreSQL and StackOverflow links about databases. In fact, even several pages into that search term I still have mostly database related results.\n\nprimary and replica are also more accurate descriptions of the full scope of what is happening.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44258635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44259191",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44259191",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44259191,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU5MTkx",
          "user": {
            "login": "anru",
            "id": 130013,
            "node_id": "MDQ6VXNlcjEzMDAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/130013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anru",
            "html_url": "https://github.com/anru",
            "followers_url": "https://api.github.com/users/anru/followers",
            "following_url": "https://api.github.com/users/anru/following{/other_user}",
            "gists_url": "https://api.github.com/users/anru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anru/subscriptions",
            "organizations_url": "https://api.github.com/users/anru/orgs",
            "repos_url": "https://api.github.com/users/anru/repos",
            "events_url": "https://api.github.com/users/anru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anru/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:38:37Z",
          "updated_at": "2014-05-27T10:38:37Z",
          "author_association": "NONE",
          "body": "OMG, as a programmer I want see master/slave pair instead of other not popular versions.\nEstablished IT-terminology does not need hypocritical ward.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44259191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44259501",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44259501",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44259501,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU5NTAx",
          "user": {
            "login": "chrisk12345",
            "id": 1642618,
            "node_id": "MDQ6VXNlcjE2NDI2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisk12345",
            "html_url": "https://github.com/chrisk12345",
            "followers_url": "https://api.github.com/users/chrisk12345/followers",
            "following_url": "https://api.github.com/users/chrisk12345/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisk12345/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisk12345/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisk12345/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisk12345/orgs",
            "repos_url": "https://api.github.com/users/chrisk12345/repos",
            "events_url": "https://api.github.com/users/chrisk12345/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisk12345/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T10:43:15Z",
          "updated_at": "2014-05-27T10:43:15Z",
          "author_association": "NONE",
          "body": "Maybe you're using a private version of Google? Here's a typical link from my search results: http://www.patrickkeisler.com/2013/07/are-you-primary-replica.html\n\n\"Primary replica\", \"secondary replica\". This is not the same thing as \"master=primary, slave=replica\". And this is how the terms are using in most of my search results.\n\nIn fact, the very documentation that is under the question is admitting that the terms are misleading. I notice at least two comments that go like this: \"referred to as master/slave by some databases\"\nDoesn't this actually mean \"we don't want to use the word 'slave', but that's what all the database folks are doing, so please google for master/slave to get relevant results\"?\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44259501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44261696",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44261696",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44261696,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjYxNjk2",
          "user": {
            "login": "darkwebdev",
            "id": 2737310,
            "node_id": "MDQ6VXNlcjI3MzczMTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2737310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darkwebdev",
            "html_url": "https://github.com/darkwebdev",
            "followers_url": "https://api.github.com/users/darkwebdev/followers",
            "following_url": "https://api.github.com/users/darkwebdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/darkwebdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darkwebdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darkwebdev/subscriptions",
            "organizations_url": "https://api.github.com/users/darkwebdev/orgs",
            "repos_url": "https://api.github.com/users/darkwebdev/repos",
            "events_url": "https://api.github.com/users/darkwebdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darkwebdev/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T11:10:37Z",
          "updated_at": "2014-05-27T11:10:37Z",
          "author_association": "NONE",
          "body": "Dear Django developers, you understand that you are just the victims of trolls, right? They are just making fun of your political correctness and your fear to be misunderstood by easily-offended people. First you change master/slave to something else, then you'll have to rename a master branch, then color: black, etc...\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44261696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44262194",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44262194",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44262194,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjYyMTk0",
          "user": {
            "login": "mvasilkov",
            "id": 140257,
            "node_id": "MDQ6VXNlcjE0MDI1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/140257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvasilkov",
            "html_url": "https://github.com/mvasilkov",
            "followers_url": "https://api.github.com/users/mvasilkov/followers",
            "following_url": "https://api.github.com/users/mvasilkov/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvasilkov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvasilkov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvasilkov/subscriptions",
            "organizations_url": "https://api.github.com/users/mvasilkov/orgs",
            "repos_url": "https://api.github.com/users/mvasilkov/repos",
            "events_url": "https://api.github.com/users/mvasilkov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvasilkov/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T11:16:11Z",
          "updated_at": "2014-05-27T11:16:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "I second this pull request very much, the \"new\" terminology is misleading.\n\nLet's be technical here and not delve into historical aspects of how mankind came to be, it's unrelated for today's Django devs. Master/slave is generally accepted and mainstream, alternatives are niche at best.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44262194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44264285",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44264285",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44264285,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjY0Mjg1",
          "user": {
            "login": "chrisk12345",
            "id": 1642618,
            "node_id": "MDQ6VXNlcjE2NDI2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1642618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisk12345",
            "html_url": "https://github.com/chrisk12345",
            "followers_url": "https://api.github.com/users/chrisk12345/followers",
            "following_url": "https://api.github.com/users/chrisk12345/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisk12345/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisk12345/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisk12345/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisk12345/orgs",
            "repos_url": "https://api.github.com/users/chrisk12345/repos",
            "events_url": "https://api.github.com/users/chrisk12345/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisk12345/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T11:38:28Z",
          "updated_at": "2014-05-27T11:38:28Z",
          "author_association": "NONE",
          "body": "Here's a comment from the ticket I filed:\n\"For now, we're going to leave it as master/replica. Time will tell whether that's the best solution. If it still seems glaringly wrong to you in six months' time, say, feel free to raise it again, but in the meantime, please accept that it's going to stay like that for the time being.\"\n\nWhy was not the same told to FSF when they suggested a change to the bullshit \"leader/follower\" pair?\nI suggest you revert the commits and wait 6 months to see if the trolls are still willing to continue pushing it.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44264285/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44267330",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44267330",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44267330,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjY3MzMw",
          "user": {
            "login": "Sapphire64",
            "id": 1443567,
            "node_id": "MDQ6VXNlcjE0NDM1Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1443567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sapphire64",
            "html_url": "https://github.com/Sapphire64",
            "followers_url": "https://api.github.com/users/Sapphire64/followers",
            "following_url": "https://api.github.com/users/Sapphire64/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sapphire64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sapphire64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sapphire64/subscriptions",
            "organizations_url": "https://api.github.com/users/Sapphire64/orgs",
            "repos_url": "https://api.github.com/users/Sapphire64/repos",
            "events_url": "https://api.github.com/users/Sapphire64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sapphire64/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T12:13:51Z",
          "updated_at": "2014-05-27T12:13:51Z",
          "author_association": "NONE",
          "body": "You can suggest for master/slave terminology haters to implement a way to change this pattern in doc options according to visitor's preferences. This should satisfy all of us.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44267330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/44268516",
          "html_url": "https://github.com/django/django/pull/2720#issuecomment-44268516",
          "issue_url": "https://api.github.com/repos/django/django/issues/2720",
          "id": 44268516,
          "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjY4NTE2",
          "user": {
            "login": "krainboltgreene",
            "id": 334809,
            "node_id": "MDQ6VXNlcjMzNDgwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/334809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krainboltgreene",
            "html_url": "https://github.com/krainboltgreene",
            "followers_url": "https://api.github.com/users/krainboltgreene/followers",
            "following_url": "https://api.github.com/users/krainboltgreene/following{/other_user}",
            "gists_url": "https://api.github.com/users/krainboltgreene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krainboltgreene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krainboltgreene/subscriptions",
            "organizations_url": "https://api.github.com/users/krainboltgreene/orgs",
            "repos_url": "https://api.github.com/users/krainboltgreene/repos",
            "events_url": "https://api.github.com/users/krainboltgreene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krainboltgreene/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2014-05-27T12:26:59Z",
          "updated_at": "2014-05-27T12:26:59Z",
          "author_association": "NONE",
          "body": "I appreciate this not changing back. This is a step forward.\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/44268516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/18421",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/18421/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/18421/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/18421/events",
      "html_url": "https://github.com/django/django/pull/18421",
      "id": 2434133475,
      "node_id": "PR_kwDOAD-Lgs52rWOq",
      "number": 18421,
      "title": "Fixed #35514 -- Allows to configure multiple email backends.",
      "user": {
        "login": "jrief",
        "id": 1132472,
        "node_id": "MDQ6VXNlcjExMzI0NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrief",
        "html_url": "https://github.com/jrief",
        "followers_url": "https://api.github.com/users/jrief/followers",
        "following_url": "https://api.github.com/users/jrief/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
        "organizations_url": "https://api.github.com/users/jrief/orgs",
        "repos_url": "https://api.github.com/users/jrief/repos",
        "events_url": "https://api.github.com/users/jrief/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrief/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 31,
      "created_at": "2024-07-28T22:06:02Z",
      "updated_at": "2025-05-13T02:06:16Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/18421",
        "html_url": "https://github.com/django/django/pull/18421",
        "diff_url": "https://github.com/django/django/pull/18421.diff",
        "patch_url": "https://github.com/django/django/pull/18421.patch",
        "merged_at": null
      },
      "body": "# Trac ticket number\r\n\r\nticket-35514\r\n\r\n# Branch description\r\n\r\nThis is a draft pull request. It just replaces the the configuration settings starting with `EMAIL_\u2026` with a dictionary based configuration. More features have to be added.\r\n\r\n# Checklist\r\n- [x] This PR targets the `main` branch. <!-- Backports will be evaluated and done by mergers, when necessary. -->\r\n- [x] The commit message is written in past tense, mentions the ticket number, and ends with a period.\r\n- [x] I have checked the \"Has patch\" ticket flag in the Trac system.\r\n- [x] I have added or updated relevant tests.\r\n- [x] I have added or updated relevant docs, including release notes if applicable.\r\n- [ ] I have attached screenshots in both light and dark modes for any UI changes.\r\n",
      "closed_by": null,
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/18421/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/18421/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2257067085",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2257067085",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2257067085,
          "node_id": "IC_kwDOAD-Lgs6GiBxN",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-29T21:47:24Z",
          "updated_at": "2024-07-29T21:47:24Z",
          "author_association": "CONTRIBUTOR",
          "body": "I *think* an EmailBackend's init is going to need to know whether or not it was initialized from an EMAIL_PROVIDERS OPTIONS dict, to decide whether it's OK to use deprecated settings. See [this review comment](#discussion_r1695981045).\r\n\r\nMy suggestion would be that get_connection() should pass a new `provider_alias` (or `_provider`) param to the init:\r\n\r\n```patch\r\n  def get_connection(backend=None, fail_silently=False, *, provider=None, **kwds):\r\n+     provider_alias = provider\r\n      if backend:\r\n          ...\r\n-         return klass(fail_silently=fail_silently, **kwds)\r\n          return klass(\r\n               fail_silently=fail_silently, \r\n+              provider_alias=provider_alias, \r\n               **kwds,\r\n           )\r\n      provider = provider or \"default\"\r\n      klass = import_string(settings.EMAIL_PROVIDERS[provider][\"BACKEND\"])\r\n      return klass(\r\n          fail_silently=fail_silently,\r\n+         provider_alias=provider_alias,\r\n          **(settings.EMAIL_PROVIDERS[provider][\"OPTIONS\"] | **kwds),\r\n      )\r\n```\r\n\r\nThen EmailBackend init methods can check `if provider_alias is None` before using deprecated `EMAIL_*` settings.\r\n\r\n(The new arg could just be called `provider`, but I think that name has a relatively high chance of conflicting with some existing EmailBackend's init args.)\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2257067085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2257093726",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2257093726",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2257093726,
          "node_id": "IC_kwDOAD-Lgs6GiIRe",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-29T22:08:20Z",
          "updated_at": "2024-07-29T22:08:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "(Also, I think this is missing tests that the deprecated settings still work for now.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2257093726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2258101885",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2258101885",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2258101885,
          "node_id": "IC_kwDOAD-Lgs6Gl-Z9",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-07-30T11:14:41Z",
          "updated_at": "2024-07-30T11:14:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "Many thanks to your suggestions, after reading them I believe that it makes sense to disallow the deprecated `EMAIL_\u2026` settings. Rewriting them in the owner's `settings.py` is easy a job we can expect from users migrating to Django-6.0. After all, it's a major release and hence breaking changes may be expected. In addition to that, the user is well informed and knows what to to after upgrading to Django-6.0.\r\n\r\nHaving a compatibility layer makes the code really complicated for a minimal payoff. I will propose this problem to the community chat on Discord and ask for advise there.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2258101885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2264050260",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2264050260",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2264050260,
          "node_id": "IC_kwDOAD-Lgs6G8qpU",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-08-01T21:34:51Z",
          "updated_at": "2024-08-01T21:34:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jrief thanks for the followup. I added some more info about the deprecated settings and compatibility, but agree a forum discussion would be easier.\r\n\r\nThere are a handful of other comments you may not have seen. In particular, I think any new args to `send_mail()` and other documented functions have to be added at the end of the list, for compatibility and because [\"The API for this method is frozen\"](https://github.com/django/django/pull/18421/files#diff-a4a410070ddd9a2614dbf98311b960fbe7dd6fcacb2b9ace85dac1caa50c2b1aL74). (It's unfortunate they can't go where they'd make logical sense, which is why I'm suggesting keyword-only args going forward.)\r\n\r\n(GitHub has an annoying habit of hiding review comments behind a \"load more\" link. Search for \"hidden conversations\" in the thread above.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2264050260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2558120268",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2558120268",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2558120268,
          "node_id": "IC_kwDOAD-Lgs6YedFM",
          "user": {
            "login": "dpgraham4401",
            "id": 43794491,
            "node_id": "MDQ6VXNlcjQzNzk0NDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/43794491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dpgraham4401",
            "html_url": "https://github.com/dpgraham4401",
            "followers_url": "https://api.github.com/users/dpgraham4401/followers",
            "following_url": "https://api.github.com/users/dpgraham4401/following{/other_user}",
            "gists_url": "https://api.github.com/users/dpgraham4401/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dpgraham4401/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dpgraham4401/subscriptions",
            "organizations_url": "https://api.github.com/users/dpgraham4401/orgs",
            "repos_url": "https://api.github.com/users/dpgraham4401/repos",
            "events_url": "https://api.github.com/users/dpgraham4401/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dpgraham4401/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-12-21T13:16:54Z",
          "updated_at": "2024-12-21T13:16:54Z",
          "author_association": "NONE",
          "body": "Hi @jrief, do you still have to bandwidth to work on this? I'm happy to pitch in.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2558120268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2559102567",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2559102567",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2559102567,
          "node_id": "IC_kwDOAD-Lgs6YiM5n",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-12-23T07:57:17Z",
          "updated_at": "2024-12-23T07:57:17Z",
          "author_association": "CONTRIBUTOR",
          "body": "@dpgraham4401  sorry for not proceeding on this. Currently there is one missing unit test and I haven't found any viable way on how to fix it. Shall we chat on this?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2559102567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2561294668",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2561294668",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2561294668,
          "node_id": "IC_kwDOAD-Lgs6YqkFM",
          "user": {
            "login": "dpgraham4401",
            "id": 43794491,
            "node_id": "MDQ6VXNlcjQzNzk0NDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/43794491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dpgraham4401",
            "html_url": "https://github.com/dpgraham4401",
            "followers_url": "https://api.github.com/users/dpgraham4401/followers",
            "following_url": "https://api.github.com/users/dpgraham4401/following{/other_user}",
            "gists_url": "https://api.github.com/users/dpgraham4401/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dpgraham4401/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dpgraham4401/subscriptions",
            "organizations_url": "https://api.github.com/users/dpgraham4401/orgs",
            "repos_url": "https://api.github.com/users/dpgraham4401/repos",
            "events_url": "https://api.github.com/users/dpgraham4401/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dpgraham4401/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-12-24T17:04:22Z",
          "updated_at": "2024-12-24T17:04:22Z",
          "author_association": "NONE",
          "body": "@jrief I'll take a look after the holidays. Happy to chat as well ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2561294668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2607349411",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2607349411",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2607349411,
          "node_id": "IC_kwDOAD-Lgs6baP6j",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-22T14:09:26Z",
          "updated_at": "2025-01-22T14:09:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "@dpgraham4401 I had some time to work on this feature. I implemented the remaining unit tests and rebased to HEAD of the main branch.\r\n\r\n@medmunds This pull request now is ready for another review. What I did, is not moving the settings `EMAIL_USE_LOCALTIME` to the new configuration directives. This means that you can not configure this, depending on the used backend. This is caused by the API freeze mentioned before.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2607349411/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2608312303",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2608312303",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2608312303,
          "node_id": "IC_kwDOAD-Lgs6bd6_v",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-22T21:31:54Z",
          "updated_at": "2025-01-22T21:31:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jrief thanks! I'll try to take a closer look over the weekend.\r\n\r\nA few quick notes:\r\n\r\n* Keeping `EMAIL_USE_LOCALTIME` as a separate setting (outside `EMAIL_PROVIDERS`) seems fine to me. (It looks like there's some leftover code from your earlier approach in get_connection().)\r\n* There are still a handful of unresolved comments from my initial review: search for \"hidden conversations\" on this page, or look in the \"files changed\" tab. In particular, the order of existing arguments to send_message() and other functional APIs needs to be preserved to avoid breaking existing code. (I wish there were some way we could deprecate posargs to those functions, to simplify changes like this one. Maybe that's a separate ticket.)\r\n* The deprecations will all need to be changed from RemovedInDjango61Warning to RemovedInDjango70Warning. (Django 5.2 just entered feature freeze, so this PR is now targeting Django 6.0, and deprecations live for at least two releases.)\r\n* Do we have a solution to the \"wrapper backend\" compatibility problem from [my earlier comment](https://github.com/django/django/pull/18421#discussion_r1700878228)?\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2608312303/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2612497577",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2612497577",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2612497577,
          "node_id": "IC_kwDOAD-Lgs6bt4yp",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-24T13:10:22Z",
          "updated_at": "2025-01-24T13:10:22Z",
          "author_association": "CONTRIBUTOR",
          "body": "@medmunds \r\n* Fixed the order of existing arguments to `send_messages()` and other functional APIs.\r\n* Deprecations warnings have been changed from `RemovedInDjango61Warning` to `RemovedInDjango70Warning`.\r\n* I found a solution for the \"wrapper backend\" compatibility, so that django-mailer should still work.\r\n* I have not found any solution yet the smtp.EmailBackend constructor could tell whether it is being called from `get_connection(backend=)` vs. `get_connection(provider=)`. How important is this?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2612497577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2612688311",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2612688311",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2612688311,
          "node_id": "IC_kwDOAD-Lgs6bunW3",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-24T14:39:11Z",
          "updated_at": "2025-01-24T14:39:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "I also moved `EMAIL_FILE_PATH` into `EMAIL_PROVIDERS[\u2026]['OPTIONS']['file_path']` to be consistent with the other backends. It currently is only used in the `django.core.mail.backends.filebased.EmailBackend`.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2612688311/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2613330343",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2613330343",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2613330343,
          "node_id": "IC_kwDOAD-Lgs6bxEGn",
          "user": {
            "login": "pauloxnet",
            "id": 521097,
            "node_id": "MDQ6VXNlcjUyMTA5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/521097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauloxnet",
            "html_url": "https://github.com/pauloxnet",
            "followers_url": "https://api.github.com/users/pauloxnet/followers",
            "following_url": "https://api.github.com/users/pauloxnet/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauloxnet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauloxnet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauloxnet/subscriptions",
            "organizations_url": "https://api.github.com/users/pauloxnet/orgs",
            "repos_url": "https://api.github.com/users/pauloxnet/repos",
            "events_url": "https://api.github.com/users/pauloxnet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauloxnet/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-24T20:31:15Z",
          "updated_at": "2025-01-27T13:44:36Z",
          "author_association": "MEMBER",
          "body": "@jrief if this PR isn't a draft anymore, maybe you can remove WIP from the title to avoid confusion.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2613330343/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2613511024",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2613511024",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2613511024,
          "node_id": "IC_kwDOAD-Lgs6bxwNw",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-24T22:27:45Z",
          "updated_at": "2025-01-24T22:39:16Z",
          "author_association": "CONTRIBUTOR",
          "body": "@jrief part of Django's deprecation policy is that existing code continues to work (with warnings) during the deprecation period. So until a user chooses to change their settings.py to EMAIL_PROVIDERS (or Django 7.0 is released), the existing EMAIL_* settings will need to work.\r\n\r\nHere are a few examples I would expect to work (and they don't):\r\n```python\r\n@ignore_warnings(category=RemovedInDjango70Warning)\r\nclass ExampleDeprecatedSettingsTests(SimpleTestCase):\r\n    # During deprecation period, existing EMAIL_* settings must continue to work.\r\n    @override_settings(\r\n        EMAIL_BACKEND=\"django.core.mail.backends.smtp.EmailBackend\",\r\n        EMAIL_HOST=\"mail.example.com\",\r\n        EMAIL_PORT=9876,\r\n    )\r\n    def test_deprecated_settings_still_work(self):\r\n        connection = mail.get_connection()\r\n        self.assertIsInstance(connection, smtp.EmailBackend)\r\n        self.assertEqual(connection.host, \"mail.example.com\")\r\n        self.assertEqual(connection.port, 9876)\r\n\r\n    @override_settings(\r\n        EMAIL_BACKEND=\"django.core.mail.backends.smtp.EmailBackend\",\r\n        EMAIL_HOST=\"mail.example.com\",\r\n        EMAIL_PORT=9876,\r\n    )\r\n    def test_deprecated_settings_with_get_connection_kwargs(self):\r\n        # kwarg params to get_connection() override settings\r\n        connection = mail.get_connection(host=\"other.example.net\")\r\n        self.assertIsInstance(connection, smtp.EmailBackend)\r\n        self.assertEqual(connection.host, \"other.example.net\")\r\n        self.assertEqual(connection.port, 9876)  # from settings\r\n\r\n    @override_settings(\r\n        EMAIL_BACKEND=\"django.core.mail.backends.dummy.EmailBackend\",\r\n        EMAIL_HOST=\"mail.example.com\",\r\n        EMAIL_PORT=9876,\r\n    )\r\n    def test_get_connection_specific_backend(self):\r\n        # specific backend overrides EMAIL_BACKEND setting; kwargs work as above\r\n        connection = mail.get_connection(\r\n            \"django.core.mail.backends.smtp.EmailBackend\",\r\n            host=\"other.example.net\",\r\n        )\r\n        self.assertIsInstance(connection, smtp.EmailBackend)\r\n        self.assertEqual(connection.host, \"other.example.net\")\r\n        self.assertEqual(connection.port, 9876)  # from settings\r\n```\r\n\r\n(Those are just examples. It would be best to keep copies of all the existing settings/configuration/get_connection() params tests in a \"test deprecated features\" section, to make sure everything continues to work during the deprecation period. Django's developer docs have some suggestions for updating tests when [*deprecating a feature*](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/submitting-patches/#deprecating-a-feature).)\r\n\r\nI *suspect* maintaining settings compatibility would be cleaner if each EmailBackend.\\_\\_init__() stays responsible for loading its own deprecated settings, rather than trying to handle this mapping in the settings manager or get_connection(). If so, that logic would probably look something like:\r\n\r\n```python\r\nclass EmailBackend(BaseEmailBackend):  # SMTP backend\r\n    def __init__(self, host=None, port=None, ...):\r\n        if (being initialized from EMAIL_PROVIDERS OPTIONS dict):\r\n            self.host = host\r\n            self.port = port\r\n            ...\r\n        else:\r\n            # RemovedInDjango70Warning.\r\n            # Not using EMAIL_PROVIDERS **for this backend instance**,\r\n            # so fall back to deprecated EMAIL_* settings.\r\n            # (This just is the original EmailBackend.__init__() logic.)\r\n            self.host = host or settings.EMAIL_HOST\r\n            self.port = port or settings.EMAIL_PORT\r\n            ...\r\n```\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2613511024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2616183062",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2616183062",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2616183062,
          "node_id": "IC_kwDOAD-Lgs6b78kW",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-27T16:10:43Z",
          "updated_at": "2025-01-27T16:10:43Z",
          "author_association": "CONTRIBUTOR",
          "body": "@medmunds thanks for pointing this out. I now changed the internal logic and added some extra tests.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2616183062/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2623005691",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2623005691",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2623005691,
          "node_id": "IC_kwDOAD-Lgs6cV-P7",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-29T22:21:30Z",
          "updated_at": "2025-01-29T22:21:30Z",
          "author_association": "CONTRIBUTOR",
          "body": "blacken-docs fails, but I can't fix any files. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2623005691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2623223985",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2623223985",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2623223985,
          "node_id": "IC_kwDOAD-Lgs6cWzix",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-30T00:15:50Z",
          "updated_at": "2025-01-31T03:59:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think I figured out what's been confusing me with the settings. (Apologies if this seems long or repeats things you already know\u2014I'm explaining it to myself, too. Scroll down to the boldface line for the conclusions.)\r\n\r\nBefore this change, the SMTP EmailBackend relied on defaults from Django's global_settings:\r\n\r\n```python\r\n# django/core/mail/backends/smtp.py:\r\nclass EmailBackend(BaseEmailBackend):\r\n    def __init__(self, ..., host=None, port=None, ...):\r\n        ...\r\n        self.host = host or settings.EMAIL_HOST\r\n        self.port = port or settings.EMAIL_PORT\r\n        ...\r\n\r\n# django/conf/global_settings.py:\r\nEMAIL_HOST = \"localhost\"\r\nEMAIL_PORT = 25\r\n```\r\n\r\nSo if the user hadn't set `EMAIL_PORT` in their own settings.py, the SMTP EmailBackend would get its default port from Django's global defaults. It could be certain that `self.port` would never be `None`, because the global default setting would always be there as a fallback.\r\n\r\nIn implementing EMAIL_PROVIDERS, you've tried to map those old defaults into the default provider's options:\r\n\r\n```python\r\n# django/conf/global_settings.py:\r\nEMAIL_PROVIDERS = {\r\n    \"default\": {\r\n        \"BACKEND\": \"django.core.mail.backends.smtp.EmailBackend\",\r\n        \"OPTIONS\": {\r\n            \"host\": \"localhost\",\r\n            \"port\": 25,\r\n            ...\r\n        },\r\n    },\r\n}\r\n```\r\n\r\nWhich made sense to me at first: this seems like the natural replacement for the deprecated settings. It's how a user would update their own settings.py.\r\n\r\nBut the more I looked at it, I realized this is conflating two different things:\r\n1. The default email provider (the default value of the EMAIL_PROVIDERS setting)\r\n2. The default OPTIONS for an SMTP email backend (*any* SMTP backend)\u2014which used to come from EMAIL_HOST, EMAIL_PORT, etc.\r\n\r\nAnd trying to mix the two causes problems, because there's no guarantee the default email provider will be SMTP. (And if it is, users might not specify all the options.) Here's a test that fails even with your latest updates:\r\n\r\n```python\r\n# tests/mail/tests.py\r\nclass MoreSettingsTests(SimpleTestCase):\r\n    @override_settings(\r\n        EMAIL_PROVIDERS={\r\n            \"default\": {\r\n                \"BACKEND\": \"third.party.EmailBackend\",\r\n            },\r\n            \"alternative\": {\r\n                \"BACKEND\": \"django.core.mail.backends.smtp.EmailBackend\",\r\n                \"OPTIONS\": {\"host\": \"smtp.example.com\"},\r\n            },\r\n        }\r\n    )\r\n    def test_smtp_provider_not_default(self):\r\n        backend = mail.get_connection(provider=\"alternative\")\r\n        self.assertEqual(backend.port, 25)  # should be the default port\r\n        # AssertionError: None != 25\r\n```\r\n\r\nAnother way to think about this: the old `EMAIL_PORT` setting \"belonged to\" the SMTP EmailBackend, which could count on it being there. But `EMAIL_PROVIDERS[\"default\"][\"OPTIONS\"]` *doesn't* belong to the SMTP EmailBackend, or to *any* particular backend. So any code that assumes `EMAIL_PROVIDERS[\"default\"]` is an *SMTP* backend or has particular OPTIONS is going to be a problem.\r\n\r\n**So, where should the SMTP EmailBackend now look for its defaults?**\r\n\r\nSince there are no longer any SMTP-specific EMAIL_ settings, I think the SMTP defaults must move into the SMTP backend itself. You just did this for the \"check deprecated settings\" case; we also need it in the \"initialized from EMAIL_PROVIDERS\" case:\r\n\r\n```python\r\n# django/core/mail/backends/smtp.py:\r\nclass EmailBackend(BaseEmailBackend):\r\n    DEFAULT_HOST = \"localhost\"\r\n    DEFAULT_PORT = 25\r\n\r\n    def __init__(self, ..., host=None, port=None, ..., provider=None):\r\n        ...\r\n        if provider is not None:\r\n            # Being initialized from EMAIL_PROVIDERS.\r\n            self.host = host or self.DEFAULT_HOST\r\n            self.port = port or self.DEFAULT_PORT\r\n            ...\r\n        else:\r\n            # RemovedInDjango70Warning: Check deprecated settings...\r\n            self.host = host or getattr(settings, \"EMAIL_HOST\", self.DEFAULT_HOST)\r\n            self.port = port or getattr(settings, \"EMAIL_PORT\", self.DEFAULT_PORT)\r\n            ...\r\n        ...\r\n```\r\n\r\nOnce you've done that, several things get simpler:\r\n\r\n* You can remove the OPTIONS dict from the global EMAIL_PROVIDERS default:\r\n    ```python\r\n    # django/conf/global_settings.py:\r\n    EMAIL_PROVIDERS = {\r\n        \"default\": {\r\n            \"BACKEND\": \"django.core.mail.backends.smtp.EmailBackend\",\r\n            # No need for OPTIONS here: SMTP defaults are built into the SMTP backend.\r\n        },\r\n    }\r\n    ```\r\n\r\n* You can remove the special case handling for deprecated EMAIL_ settings in `LazySettings.__getattr__()`. (The SMTP backend properly checks the deprecated settings where necessary for compatibility.)\r\n\r\n* In the tests, there's no longer a need to force an options dict into backend constructors. EDIT: see next comment. ~~You can change `backend = smtp.EmailBackend(**settings.EMAIL_PROVIDERS[\"default\"][\"OPTIONS\"])` back to its original `backend = smtp.EmailBackend()`. (Or `smtp.EmailBackend(provider=\"anything\")` to send it down the non-deprecated path.)~~ Similarly, you should be able to remove most of the cases where you're copying `settings.EMAIL_PROVIDERS[\"default\"][\"OPTIONS\"]` in `@override_settings`.\r\n\r\nLet me know if that makes sense, or if I've missed something.\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2623223985/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2623482172",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2623482172",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2623482172,
          "node_id": "IC_kwDOAD-Lgs6cXyk8",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-01-30T04:17:56Z",
          "updated_at": "2025-01-31T04:03:15Z",
          "author_association": "CONTRIBUTOR",
          "body": "I wrote:\r\n> * In the tests \u2026 You can change `backend = smtp.EmailBackend(**settings.EMAIL_PROVIDERS[\"default\"][\"OPTIONS\"])` back to its original `backend = smtp.EmailBackend()`. (Or `smtp.EmailBackend(provider=\"anything\")` to send it down the non-deprecated path.)\r\n\r\n<del>Although that's true</del> [EDIT: actually, it isn't true. But this is:] I'm thinking there's a better approach. If the purpose of the test is to check that settings work correctly, the test really <del>should</del> <ins>MUST</ins> be using `mail.get_connection()` to instantiate the backend. Django has always documented that get_connection() is the way to get \"an instance of the email backend that you can use.\" Constructing a backend directly happened to work with the deprecated settings (and still does), but for settings-related tests we should probably be using the official API.\r\n\r\n```patch\r\n    @override_settings(\r\n-       EMAIL_SSL_KEYFILE=\"foo\"\r\n+       EMAIL_PROVIDERS={\r\n+           \"default\": {\r\n+               \"BACKEND\": \"django.core.mail.backends.smtp.EmailBackend\",\r\n+               \"OPTIONS\": {\"ssl_keyfile\": \"foo\"},\r\n+           },\r\n+       }\r\n    )\r\n    def test_email_ssl_keyfile_use_settings(self):\r\n-       backend = smtp.EmailBackend()\r\n+       backend = mail.get_connection()\r\n        self.assertEqual(backend.ssl_keyfile, \"foo\")\r\n```\r\n\r\n(Maybe we could figure out some sort of test helper that would override the OPTIONS for the default provider, to keep the tests more concise.)",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2623482172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2654220612",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2654220612",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2654220612,
          "node_id": "IC_kwDOAD-Lgs6eNDFE",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-02-12T16:21:04Z",
          "updated_at": "2025-02-12T16:21:04Z",
          "author_association": "CONTRIBUTOR",
          "body": "@medmunds all very valid annotations you pointed out here. Today I found some time to work on it again.\r\n\r\nI now refactored the code to always use `mail.get_connection(\u2026)` in order to get the backend.\r\n`EMAIL_PROVIDERS[\u2026][\"OPTIONS\"]` now is optional.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2654220612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2654744990",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2654744990",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2654744990,
          "node_id": "IC_kwDOAD-Lgs6ePDGe",
          "user": {
            "login": "medmunds",
            "id": 639984,
            "node_id": "MDQ6VXNlcjYzOTk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medmunds",
            "html_url": "https://github.com/medmunds",
            "followers_url": "https://api.github.com/users/medmunds/followers",
            "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
            "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
            "organizations_url": "https://api.github.com/users/medmunds/orgs",
            "repos_url": "https://api.github.com/users/medmunds/repos",
            "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medmunds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-02-12T20:13:00Z",
          "updated_at": "2025-02-12T20:13:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "> @medmunds all very valid annotations you pointed out here. Today I found some time to work on it again.\r\n\r\n@jrief great! I'll wait to go through it again until you're ready\u2014just click the \"Re-request review\" button by my name in the Reviewers panel.\r\n\r\nBefore that, it would be helpful if you could go through the open review comments and either click \"Resolved\" if you've addressed it, or add a reply if further discussion is needed. (I'm not able to resolve my own comments since it's your PR. Also, remember that GitHub has a bad habit of hiding unresolved conversations behind a \"load more\" link.)\r\n",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2654744990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2656209446",
          "html_url": "https://github.com/django/django/pull/18421#issuecomment-2656209446",
          "issue_url": "https://api.github.com/repos/django/django/issues/18421",
          "id": 2656209446,
          "node_id": "IC_kwDOAD-Lgs6eUoom",
          "user": {
            "login": "jrief",
            "id": 1132472,
            "node_id": "MDQ6VXNlcjExMzI0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1132472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrief",
            "html_url": "https://github.com/jrief",
            "followers_url": "https://api.github.com/users/jrief/followers",
            "following_url": "https://api.github.com/users/jrief/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrief/subscriptions",
            "organizations_url": "https://api.github.com/users/jrief/orgs",
            "repos_url": "https://api.github.com/users/jrief/repos",
            "events_url": "https://api.github.com/users/jrief/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrief/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2025-02-13T10:49:12Z",
          "updated_at": "2025-02-13T10:49:12Z",
          "author_association": "CONTRIBUTOR",
          "body": "@medmunds a question about the deprecation warnings. In the comments and release notes I now changed them to version 6.1. This means that starting from version 6.0 a user would get a warning that for instance `settings.EMAIL_BACKEND` is deprecated in version 6.1. It then will be removed altogether in version 7.0. It that correct?\r\n\r\nBtw. who is going to remove those settings and the associated unit tests then in the future?",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2656209446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/django/django/issues/17792",
      "repository_url": "https://api.github.com/repos/django/django",
      "labels_url": "https://api.github.com/repos/django/django/issues/17792/labels{/name}",
      "comments_url": "https://api.github.com/repos/django/django/issues/17792/comments",
      "events_url": "https://api.github.com/repos/django/django/issues/17792/events",
      "html_url": "https://github.com/django/django/pull/17792",
      "id": 2105664109,
      "node_id": "PR_kwDOAD-Lgs5lVcJp",
      "number": 17792,
      "title": "Fixed #31405 -- Added LoginRequiredAuthenticationMiddleware force all views to require authentication by default.",
      "user": {
        "login": "Hisham-Pak",
        "id": 45965466,
        "node_id": "MDQ6VXNlcjQ1OTY1NDY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/45965466?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hisham-Pak",
        "html_url": "https://github.com/Hisham-Pak",
        "followers_url": "https://api.github.com/users/Hisham-Pak/followers",
        "following_url": "https://api.github.com/users/Hisham-Pak/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hisham-Pak/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hisham-Pak/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hisham-Pak/subscriptions",
        "organizations_url": "https://api.github.com/users/Hisham-Pak/orgs",
        "repos_url": "https://api.github.com/users/Hisham-Pak/repos",
        "events_url": "https://api.github.com/users/Hisham-Pak/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hisham-Pak/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2024-01-29T14:45:52Z",
      "updated_at": "2024-05-22T06:51:17Z",
      "closed_at": "2024-05-22T06:51:17Z",
      "author_association": "CONTRIBUTOR",
      "type": null,
      "active_lock_reason": null,
      "draft": false,
      "pull_request": {
        "url": "https://api.github.com/repos/django/django/pulls/17792",
        "html_url": "https://github.com/django/django/pull/17792",
        "diff_url": "https://github.com/django/django/pull/17792.diff",
        "patch_url": "https://github.com/django/django/pull/17792.patch",
        "merged_at": "2024-05-22T06:51:17Z"
      },
      "body": "Ticket: https://code.djangoproject.com/ticket/31405\r\nMailing list: https://groups.google.com/forum/#!topic/django-developers/PUQQUHIxEXQ\r\nFollows: #12632\r\n\r\nAny suggestions are welcome.",
      "closed_by": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "reactions": {
        "url": "https://api.github.com/repos/django/django/issues/17792/reactions",
        "total_count": 12,
        "+1": 6,
        "-1": 0,
        "laugh": 0,
        "hooray": 3,
        "confused": 0,
        "heart": 0,
        "rocket": 3,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/django/django/issues/17792/timeline",
      "performed_via_github_app": null,
      "state_reason": null,
      "comments_data": [
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1920502277",
          "html_url": "https://github.com/django/django/pull/17792#issuecomment-1920502277",
          "issue_url": "https://api.github.com/repos/django/django/issues/17792",
          "id": 1920502277,
          "node_id": "IC_kwDOAD-Lgs5yeIoF",
          "user": {
            "login": "Hisham-Pak",
            "id": 45965466,
            "node_id": "MDQ6VXNlcjQ1OTY1NDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45965466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hisham-Pak",
            "html_url": "https://github.com/Hisham-Pak",
            "followers_url": "https://api.github.com/users/Hisham-Pak/followers",
            "following_url": "https://api.github.com/users/Hisham-Pak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hisham-Pak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hisham-Pak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hisham-Pak/subscriptions",
            "organizations_url": "https://api.github.com/users/Hisham-Pak/orgs",
            "repos_url": "https://api.github.com/users/Hisham-Pak/repos",
            "events_url": "https://api.github.com/users/Hisham-Pak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hisham-Pak/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-02-01T04:42:09Z",
          "updated_at": "2024-02-01T04:47:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "why does `make black` expects (at all code blocks):\r\n```\r\nclass MyView(TestMixin1, TestMixin2, View): ...\r\n```\r\ninstead of accepting:\r\n```\r\nclass MyView(TestMixin1, TestMixin2, View):\r\n    ...\r\n```",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1920502277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1921074940",
          "html_url": "https://github.com/django/django/pull/17792#issuecomment-1921074940",
          "issue_url": "https://api.github.com/repos/django/django/issues/17792",
          "id": 1921074940,
          "node_id": "IC_kwDOAD-Lgs5ygUb8",
          "user": {
            "login": "nessita",
            "id": 124304,
            "node_id": "MDQ6VXNlcjEyNDMwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nessita",
            "html_url": "https://github.com/nessita",
            "followers_url": "https://api.github.com/users/nessita/followers",
            "following_url": "https://api.github.com/users/nessita/following{/other_user}",
            "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
            "organizations_url": "https://api.github.com/users/nessita/orgs",
            "repos_url": "https://api.github.com/users/nessita/repos",
            "events_url": "https://api.github.com/users/nessita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nessita/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-02-01T11:08:54Z",
          "updated_at": "2024-02-01T11:08:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "> why does `make black` expects (at all code blocks):\r\n> \r\n> ```\r\n> class MyView(TestMixin1, TestMixin2, View): ...\r\n> ```\r\n> \r\n> instead of accepting:\r\n> \r\n> ```\r\n> class MyView(TestMixin1, TestMixin2, View):\r\n>     ...\r\n> ```\r\n\r\nI believe the cause of this is that the formatting tool Black has been recently updated to its 2024 style. The Django code has been updated as well, so if you rebase your branch onto main (`git rebase main` with no uncommitted changes) you will get the necessary fixes.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1921074940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1921262815",
          "html_url": "https://github.com/django/django/pull/17792#issuecomment-1921262815",
          "issue_url": "https://api.github.com/repos/django/django/issues/17792",
          "id": 1921262815,
          "node_id": "IC_kwDOAD-Lgs5yhCTf",
          "user": {
            "login": "Hisham-Pak",
            "id": 45965466,
            "node_id": "MDQ6VXNlcjQ1OTY1NDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45965466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hisham-Pak",
            "html_url": "https://github.com/Hisham-Pak",
            "followers_url": "https://api.github.com/users/Hisham-Pak/followers",
            "following_url": "https://api.github.com/users/Hisham-Pak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hisham-Pak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hisham-Pak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hisham-Pak/subscriptions",
            "organizations_url": "https://api.github.com/users/Hisham-Pak/orgs",
            "repos_url": "https://api.github.com/users/Hisham-Pak/repos",
            "events_url": "https://api.github.com/users/Hisham-Pak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hisham-Pak/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-02-01T12:53:19Z",
          "updated_at": "2024-02-01T12:53:19Z",
          "author_association": "CONTRIBUTOR",
          "body": "My bad, thanks for the fix!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1921262815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1922075149",
          "html_url": "https://github.com/django/django/pull/17792#issuecomment-1922075149",
          "issue_url": "https://api.github.com/repos/django/django/issues/17792",
          "id": 1922075149,
          "node_id": "IC_kwDOAD-Lgs5ykIoN",
          "user": {
            "login": "mdisec",
            "id": 4004716,
            "node_id": "MDQ6VXNlcjQwMDQ3MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4004716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdisec",
            "html_url": "https://github.com/mdisec",
            "followers_url": "https://api.github.com/users/mdisec/followers",
            "following_url": "https://api.github.com/users/mdisec/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdisec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdisec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdisec/subscriptions",
            "organizations_url": "https://api.github.com/users/mdisec/orgs",
            "repos_url": "https://api.github.com/users/mdisec/repos",
            "events_url": "https://api.github.com/users/mdisec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdisec/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-02-01T19:29:23Z",
          "updated_at": "2024-02-01T19:29:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "Amazing work @Hisham-Pak !! Couple of weeks ago friend of mine remind me this.. I was literally thinking about coming back and getting the work done on this PR. ",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1922075149/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/1922808797",
          "html_url": "https://github.com/django/django/pull/17792#issuecomment-1922808797",
          "issue_url": "https://api.github.com/repos/django/django/issues/17792",
          "id": 1922808797,
          "node_id": "IC_kwDOAD-Lgs5ym7vd",
          "user": {
            "login": "Hisham-Pak",
            "id": 45965466,
            "node_id": "MDQ6VXNlcjQ1OTY1NDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45965466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hisham-Pak",
            "html_url": "https://github.com/Hisham-Pak",
            "followers_url": "https://api.github.com/users/Hisham-Pak/followers",
            "following_url": "https://api.github.com/users/Hisham-Pak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hisham-Pak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hisham-Pak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hisham-Pak/subscriptions",
            "organizations_url": "https://api.github.com/users/Hisham-Pak/orgs",
            "repos_url": "https://api.github.com/users/Hisham-Pak/repos",
            "events_url": "https://api.github.com/users/Hisham-Pak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hisham-Pak/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-02-02T04:42:36Z",
          "updated_at": "2024-02-02T04:42:36Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thank you for the kind words. Appreciate the effort you put in!",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/1922808797/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        },
        {
          "url": "https://api.github.com/repos/django/django/issues/comments/2111221036",
          "html_url": "https://github.com/django/django/pull/17792#issuecomment-2111221036",
          "issue_url": "https://api.github.com/repos/django/django/issues/17792",
          "id": 2111221036,
          "node_id": "IC_kwDOAD-Lgs591q0s",
          "user": {
            "login": "adamchainz",
            "id": 857609,
            "node_id": "MDQ6VXNlcjg1NzYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/857609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamchainz",
            "html_url": "https://github.com/adamchainz",
            "followers_url": "https://api.github.com/users/adamchainz/followers",
            "following_url": "https://api.github.com/users/adamchainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions",
            "organizations_url": "https://api.github.com/users/adamchainz/orgs",
            "repos_url": "https://api.github.com/users/adamchainz/repos",
            "events_url": "https://api.github.com/users/adamchainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamchainz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
          },
          "created_at": "2024-05-14T22:10:48Z",
          "updated_at": "2024-05-14T22:10:48Z",
          "author_association": "MEMBER",
          "body": "I suggest we do **not** support class-based attributes on views, as currently defined in `LoginNotRequiredMixin`, and as @angusholder [previously queried](https://github.com/django/django/pull/17792/files#r1581904420).\r\n\r\nSupporting the class-level attributes adds significant complexity to the middleware implementation, as it has to look in two places on views for all of the attributes (`login_required`, `login_url`, redirect_field_name`). This makes it harder to understand the middleware, as well as any class-based views that might combine both options.\r\n\r\nInstead, I think we should only support view-function-level attributes. Class-based views can use `@method_decorator`, as covered in the [\u201cDecorating the class\u201d docs](https://docs.djangoproject.com/en/5.0/topics/class-based-views/intro/#decorating-the-class).\r\n\r\nThis would introduce the oddity that if you subclass a `View` with `@method_decorator(login_not_required, name='dispatch')` applied, and override `dispatch()`, that new `dispatch()` method will not have the `login_required = False` attribute. But we consider this okay as it \u201cfails closed\u201d, the view simply isn\u2019t public until the decorator is reapplied in the subclass.\r\n\r\nAlternatively, we could make the mixin still work with an implementation like:\r\n\r\n```python\r\nclass LoginNotRequiredMixin(View):\r\n    def __init_subclass__(cls):\r\n        method_decorator(login_not_required, name='dispatch')(cls)\r\n```\r\n\r\nBut IMO better to go with only `@method_decorator` here, to keep the API minimal for this critical security feature. We can always add a mixin later if there is demand.",
          "reactions": {
            "url": "https://api.github.com/repos/django/django/issues/comments/2111221036/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
          },
          "performed_via_github_app": null
        }
      ]
    }
  ],
  "recent_commits": [
    {
      "sha": "896fa85b0217ebc3a13c6ea42688f160103d0962",
      "node_id": "C_kwDOAD-LgtoAKDg5NmZhODViMDIxN2ViYzNhMTNjNmVhNDI2ODhmMTYwMTAzZDA5NjI",
      "commit": {
        "author": {
          "name": "LauHerregodts",
          "email": "114776063+LauHerregodts@users.noreply.github.com",
          "date": "2025-07-20T19:12:46Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-20T19:12:46Z"
        },
        "message": "Fixed #36230 -- Improved color contrast for blockquote in admin.\n\nThanks Thibaud Colas for the review.",
        "tree": {
          "sha": "533ab90dbd6ffeb8cf66856197a56c4f9801eb9d",
          "url": "https://api.github.com/repos/django/django/git/trees/533ab90dbd6ffeb8cf66856197a56c4f9801eb9d"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/896fa85b0217ebc3a13c6ea42688f160103d0962",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJofT+uCRC1aQ7uu5UhlAAAcRIQAKe2tW7XkGwvdh3MIKj5L/aH\nZwRx6RMGiIn7WaRA17iKvlypAdgLk8n5hwCk5wooPNtv+7jnsudYj2nZKGpXHOf2\nEt+IQSa3rE12E473oNOQ9IOSu1QAEWuGCE3v6/qO+qD2KyAvQciKsuzxARDJ500e\n6CDCtDDeGhr6U59lnHxMj4OVX61cY0ShOT+fhBvIFwRKdYWu4XHQZK97PxIBfWUD\nf612C9xcTS7wEC6K/cHxWtPNriUehCIpjlmzXKHtTLvc+BOnlx2enQ4FckjRidtZ\nOWt8AoOQXtP58xkg/1cHtg/09GMOdfO1aagHJaMTu9Y8rhmSRwycYCyENcq8scW0\n3THqHvefUKE0SU3qbw7y86cAcYTNXaQj5vX0x+podSyVGAxv8w3oV9OQnjEkmz+1\ne8zJTZ5lRcNSOrgxJvZcoQRFlnBYr5QvzFuh8bfmz8mf1LVi5KNdw/CWJ5Mh3Tfc\njDLe9ZDertISpYaJda4vO9STUO4VC8baX4DvQenmXMJxg8OFuO1CqYlBLSRPco2h\n28jeQR1oGmErM9lTyiSYuDx0racwdU76xZhuS+ftV3cq17U8xJiCJnslH27AypIT\ndyYiNeGlf47awHZQk07arjAJD4tPmOjbScbE+YyGN52TlYJ99KNwuso7vJtN+o6I\nR/nWyJuTuA15qcuSbocn\n=qIjZ\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 533ab90dbd6ffeb8cf66856197a56c4f9801eb9d\nparent a5b0a618c3ff16f9f52a9abdc89c05899ef112b4\nauthor LauHerregodts <114776063+LauHerregodts@users.noreply.github.com> 1753038766 +0200\ncommitter GitHub <noreply@github.com> 1753038766 +0200\n\nFixed #36230 -- Improved color contrast for blockquote in admin.\n\nThanks Thibaud Colas for the review.",
          "verified_at": "2025-07-20T19:12:47Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/896fa85b0217ebc3a13c6ea42688f160103d0962",
      "html_url": "https://github.com/django/django/commit/896fa85b0217ebc3a13c6ea42688f160103d0962",
      "comments_url": "https://api.github.com/repos/django/django/commits/896fa85b0217ebc3a13c6ea42688f160103d0962/comments",
      "author": {
        "login": "LauHerregodts",
        "id": 114776063,
        "node_id": "U_kgDOBtdX_w",
        "avatar_url": "https://avatars.githubusercontent.com/u/114776063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LauHerregodts",
        "html_url": "https://github.com/LauHerregodts",
        "followers_url": "https://api.github.com/users/LauHerregodts/followers",
        "following_url": "https://api.github.com/users/LauHerregodts/following{/other_user}",
        "gists_url": "https://api.github.com/users/LauHerregodts/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LauHerregodts/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LauHerregodts/subscriptions",
        "organizations_url": "https://api.github.com/users/LauHerregodts/orgs",
        "repos_url": "https://api.github.com/users/LauHerregodts/repos",
        "events_url": "https://api.github.com/users/LauHerregodts/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LauHerregodts/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a5b0a618c3ff16f9f52a9abdc89c05899ef112b4",
          "url": "https://api.github.com/repos/django/django/commits/a5b0a618c3ff16f9f52a9abdc89c05899ef112b4",
          "html_url": "https://github.com/django/django/commit/a5b0a618c3ff16f9f52a9abdc89c05899ef112b4"
        }
      ]
    },
    {
      "sha": "a5b0a618c3ff16f9f52a9abdc89c05899ef112b4",
      "node_id": "C_kwDOAD-LgtoAKGE1YjBhNjE4YzNmZjE2ZjlmNTJhOWFiZGM4OWMwNTg5OWVmMTEyYjQ",
      "commit": {
        "author": {
          "name": "Ahmed Ibrahim",
          "email": "ahmeddark369@gmail.com",
          "date": "2025-07-17T06:50:39Z"
        },
        "committer": {
          "name": "Mariusz Felisiak",
          "email": "felisiak.mariusz@gmail.com",
          "date": "2025-07-20T09:18:38Z"
        },
        "message": "Fixed #28696 -- Added GeometryType GIS database function and __geom_type lookup.\n\nCo-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",
        "tree": {
          "sha": "08c83f12bfe69d585b3c40fecb215dceaa52a4b3",
          "url": "https://api.github.com/repos/django/django/git/trees/08c83f12bfe69d585b3c40fecb215dceaa52a4b3"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/a5b0a618c3ff16f9f52a9abdc89c05899ef112b4",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/a5b0a618c3ff16f9f52a9abdc89c05899ef112b4",
      "html_url": "https://github.com/django/django/commit/a5b0a618c3ff16f9f52a9abdc89c05899ef112b4",
      "comments_url": "https://api.github.com/repos/django/django/commits/a5b0a618c3ff16f9f52a9abdc89c05899ef112b4/comments",
      "author": {
        "login": "LeOndaz",
        "id": 17862017,
        "node_id": "MDQ6VXNlcjE3ODYyMDE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/17862017?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LeOndaz",
        "html_url": "https://github.com/LeOndaz",
        "followers_url": "https://api.github.com/users/LeOndaz/followers",
        "following_url": "https://api.github.com/users/LeOndaz/following{/other_user}",
        "gists_url": "https://api.github.com/users/LeOndaz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LeOndaz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LeOndaz/subscriptions",
        "organizations_url": "https://api.github.com/users/LeOndaz/orgs",
        "repos_url": "https://api.github.com/users/LeOndaz/repos",
        "events_url": "https://api.github.com/users/LeOndaz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LeOndaz/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "6aa05fd23205fce523924e307f78ce8d614af7f1",
          "url": "https://api.github.com/repos/django/django/commits/6aa05fd23205fce523924e307f78ce8d614af7f1",
          "html_url": "https://github.com/django/django/commit/6aa05fd23205fce523924e307f78ce8d614af7f1"
        }
      ]
    },
    {
      "sha": "6aa05fd23205fce523924e307f78ce8d614af7f1",
      "node_id": "C_kwDOAD-LgtoAKDZhYTA1ZmQyMzIwNWZjZTUyMzkyNGUzMDdmNzhjZThkNjE0YWY3ZjE",
      "commit": {
        "author": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-16T10:20:41Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-18T15:29:12Z"
        },
        "message": "Triggered window resize to fix layout issues.",
        "tree": {
          "sha": "196a62c2e5375d6d79c74b216eef8d2fa814ad2c",
          "url": "https://api.github.com/repos/django/django/git/trees/196a62c2e5375d6d79c74b216eef8d2fa814ad2c"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/6aa05fd23205fce523924e307f78ce8d614af7f1",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/6aa05fd23205fce523924e307f78ce8d614af7f1",
      "html_url": "https://github.com/django/django/commit/6aa05fd23205fce523924e307f78ce8d614af7f1",
      "comments_url": "https://api.github.com/repos/django/django/commits/6aa05fd23205fce523924e307f78ce8d614af7f1/comments",
      "author": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "e767bd6838d40893b001c1ad6ba2ab9293527532",
          "url": "https://api.github.com/repos/django/django/commits/e767bd6838d40893b001c1ad6ba2ab9293527532",
          "html_url": "https://github.com/django/django/commit/e767bd6838d40893b001c1ad6ba2ab9293527532"
        }
      ]
    },
    {
      "sha": "e767bd6838d40893b001c1ad6ba2ab9293527532",
      "node_id": "C_kwDOAD-LgtoAKGU3NjdiZDY4MzhkNDA4OTNiMDAxYzFhZDZiYTJhYjkyOTM1Mjc1MzI",
      "commit": {
        "author": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-18T11:47:44Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-18T11:47:44Z"
        },
        "message": "Refs #35680 -- Sorted shell default autoimports to prevent isort mismatches.",
        "tree": {
          "sha": "61b1e2ab38fbca1b997d4125e4ebb11818d42da3",
          "url": "https://api.github.com/repos/django/django/git/trees/61b1e2ab38fbca1b997d4125e4ebb11818d42da3"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/e767bd6838d40893b001c1ad6ba2ab9293527532",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoejRgCRC1aQ7uu5UhlAAAyrkQADJ96RXWVkLAF07NqMeJkiTp\nLAs7nVYN2ywnOplDjglRHrFCuul4k0OU+FqwzHA9mbRyIHlgjw0GItNDITiropR7\nH3rnMZukG3ajbYYD0/DkqVo22ipMo8QskzEfFhbbceTXBwUfEr2KshQhRh05Siry\nTzl1Nk8M4427RKVOWQZ8EsXvc3T6OATcCPYsSAYnAU2Ts7mY+EpJ79eLHU0nep2K\n8l5ZppmrpdWyorsI5bbv6JRxtf8nyBXwtUH8V07yi7KuXsFAfSFbrzKN76AQOLdw\nr17yhp0XyKqp2lab9QIUGagydiy58Y3ZwPXn0AxyonCYXXDe11V7k2oxzpIyxZpS\nn4XZbnyrls62HlatBLULJIVSv10LxSQ0J4gH4hybFX0x3ssVBps33efVWd9mmnhW\nC61Azn7aBxVs3KV/kD8BIcbExMTm3IB/edk+22JUhmdNsJCKwcxDffNzQG4bDRS3\nG+S1OEupdNKFH3d8Xwc+g007jRp83LDtrPfN4kMqVx5N5gvi4M8vpc+FyU96+E5w\naqnkbyyqvSyLkzP9nu+/YuJiYOkIaUgqSgR8aaBUbH4rWfOj41RCpFrE8gB8W9wG\nwn4jOT0a9qbLXSISsumKh2n+jvLpT4C0hzAB4+IVhl486AzIJcKQw9dBWgrN93YY\nadav0OYALaCnqUi+YqoN\n=Tzjm\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 61b1e2ab38fbca1b997d4125e4ebb11818d42da3\nparent be8c9b19baeb4daf6bf2e603673714c7536b657c\nauthor nessita <124304+nessita@users.noreply.github.com> 1752839264 -0300\ncommitter GitHub <noreply@github.com> 1752839264 -0300\n\nRefs #35680 -- Sorted shell default autoimports to prevent isort mismatches.\n\n",
          "verified_at": "2025-07-18T11:47:45Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/e767bd6838d40893b001c1ad6ba2ab9293527532",
      "html_url": "https://github.com/django/django/commit/e767bd6838d40893b001c1ad6ba2ab9293527532",
      "comments_url": "https://api.github.com/repos/django/django/commits/e767bd6838d40893b001c1ad6ba2ab9293527532/comments",
      "author": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "be8c9b19baeb4daf6bf2e603673714c7536b657c",
          "url": "https://api.github.com/repos/django/django/commits/be8c9b19baeb4daf6bf2e603673714c7536b657c",
          "html_url": "https://github.com/django/django/commit/be8c9b19baeb4daf6bf2e603673714c7536b657c"
        }
      ]
    },
    {
      "sha": "be8c9b19baeb4daf6bf2e603673714c7536b657c",
      "node_id": "C_kwDOAD-LgtoAKGJlOGM5YjE5YmFlYjRkYWY2YmYyZTYwMzY3MzcxNGM3NTM2YjY1N2M",
      "commit": {
        "author": {
          "name": "IsJn-227",
          "email": "ishjain2712@gmail.com",
          "date": "2025-06-13T10:22:46Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-18T08:18:22Z"
        },
        "message": "Fixed #36456 -- Improved content type negotiation in technical 500 error response.",
        "tree": {
          "sha": "d9a31d68125c9f1e7268fd00a16485eb632b1610",
          "url": "https://api.github.com/repos/django/django/git/trees/d9a31d68125c9f1e7268fd00a16485eb632b1610"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/be8c9b19baeb4daf6bf2e603673714c7536b657c",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/be8c9b19baeb4daf6bf2e603673714c7536b657c",
      "html_url": "https://github.com/django/django/commit/be8c9b19baeb4daf6bf2e603673714c7536b657c",
      "comments_url": "https://api.github.com/repos/django/django/commits/be8c9b19baeb4daf6bf2e603673714c7536b657c/comments",
      "author": {
        "login": "IsJn-227",
        "id": 198904668,
        "node_id": "U_kgDOC9sLXA",
        "avatar_url": "https://avatars.githubusercontent.com/u/198904668?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IsJn-227",
        "html_url": "https://github.com/IsJn-227",
        "followers_url": "https://api.github.com/users/IsJn-227/followers",
        "following_url": "https://api.github.com/users/IsJn-227/following{/other_user}",
        "gists_url": "https://api.github.com/users/IsJn-227/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/IsJn-227/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IsJn-227/subscriptions",
        "organizations_url": "https://api.github.com/users/IsJn-227/orgs",
        "repos_url": "https://api.github.com/users/IsJn-227/repos",
        "events_url": "https://api.github.com/users/IsJn-227/events{/privacy}",
        "received_events_url": "https://api.github.com/users/IsJn-227/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "449b9f9aeeaa3a1529d2c29a9a43e87350177559",
          "url": "https://api.github.com/repos/django/django/commits/449b9f9aeeaa3a1529d2c29a9a43e87350177559",
          "html_url": "https://github.com/django/django/commit/449b9f9aeeaa3a1529d2c29a9a43e87350177559"
        }
      ]
    },
    {
      "sha": "449b9f9aeeaa3a1529d2c29a9a43e87350177559",
      "node_id": "C_kwDOAD-LgtoAKDQ0OWI5ZjlhZWVhYTNhMTUyOWQyYzI5YTlhNDNlODczNTAxNzc1NTk",
      "commit": {
        "author": {
          "name": "Clifford Gama",
          "email": "cliffygamy@gmail.com",
          "date": "2025-04-18T17:55:59Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-18T08:16:59Z"
        },
        "message": "Fixed #35728 -- Computed error messages in assertions only on test failures.\n\nPerformance regression in 1dae65dc63ae84be5002c37b4ddae0b9220e8808.\n\nThanks to Adam Johnson for the report.",
        "tree": {
          "sha": "aaac97e00a8177a1d59beb63219974bd99c34630",
          "url": "https://api.github.com/repos/django/django/git/trees/aaac97e00a8177a1d59beb63219974bd99c34630"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/449b9f9aeeaa3a1529d2c29a9a43e87350177559",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/449b9f9aeeaa3a1529d2c29a9a43e87350177559",
      "html_url": "https://github.com/django/django/commit/449b9f9aeeaa3a1529d2c29a9a43e87350177559",
      "comments_url": "https://api.github.com/repos/django/django/commits/449b9f9aeeaa3a1529d2c29a9a43e87350177559/comments",
      "author": {
        "login": "cliff688",
        "id": 53076065,
        "node_id": "MDQ6VXNlcjUzMDc2MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53076065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cliff688",
        "html_url": "https://github.com/cliff688",
        "followers_url": "https://api.github.com/users/cliff688/followers",
        "following_url": "https://api.github.com/users/cliff688/following{/other_user}",
        "gists_url": "https://api.github.com/users/cliff688/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cliff688/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cliff688/subscriptions",
        "organizations_url": "https://api.github.com/users/cliff688/orgs",
        "repos_url": "https://api.github.com/users/cliff688/repos",
        "events_url": "https://api.github.com/users/cliff688/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cliff688/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "04e813cd17484ba91e3fc25d5e5118ac25f47352",
          "url": "https://api.github.com/repos/django/django/commits/04e813cd17484ba91e3fc25d5e5118ac25f47352",
          "html_url": "https://github.com/django/django/commit/04e813cd17484ba91e3fc25d5e5118ac25f47352"
        }
      ]
    },
    {
      "sha": "04e813cd17484ba91e3fc25d5e5118ac25f47352",
      "node_id": "C_kwDOAD-LgtoAKDA0ZTgxM2NkMTc0ODRiYTkxZTNmYzI1ZDVlNTExOGFjMjVmNDczNTI",
      "commit": {
        "author": {
          "name": "Clifford Gama",
          "email": "cliffygamy@gmail.com",
          "date": "2025-06-24T20:35:45Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-17T20:36:02Z"
        },
        "message": "Refs #4476 -- Added tests for assertRedirects() when following redirect chains.\n\nThanks Natalia Bidart for the review.",
        "tree": {
          "sha": "2afcfbcd9b25cf076a3df869dee5882f4aa6e07d",
          "url": "https://api.github.com/repos/django/django/git/trees/2afcfbcd9b25cf076a3df869dee5882f4aa6e07d"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/04e813cd17484ba91e3fc25d5e5118ac25f47352",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/04e813cd17484ba91e3fc25d5e5118ac25f47352",
      "html_url": "https://github.com/django/django/commit/04e813cd17484ba91e3fc25d5e5118ac25f47352",
      "comments_url": "https://api.github.com/repos/django/django/commits/04e813cd17484ba91e3fc25d5e5118ac25f47352/comments",
      "author": {
        "login": "cliff688",
        "id": 53076065,
        "node_id": "MDQ6VXNlcjUzMDc2MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53076065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cliff688",
        "html_url": "https://github.com/cliff688",
        "followers_url": "https://api.github.com/users/cliff688/followers",
        "following_url": "https://api.github.com/users/cliff688/following{/other_user}",
        "gists_url": "https://api.github.com/users/cliff688/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cliff688/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cliff688/subscriptions",
        "organizations_url": "https://api.github.com/users/cliff688/orgs",
        "repos_url": "https://api.github.com/users/cliff688/repos",
        "events_url": "https://api.github.com/users/cliff688/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cliff688/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "024ea0f78322eda09e245b0facb8ba4296408e25",
          "url": "https://api.github.com/repos/django/django/commits/024ea0f78322eda09e245b0facb8ba4296408e25",
          "html_url": "https://github.com/django/django/commit/024ea0f78322eda09e245b0facb8ba4296408e25"
        }
      ]
    },
    {
      "sha": "024ea0f78322eda09e245b0facb8ba4296408e25",
      "node_id": "C_kwDOAD-LgtoAKDAyNGVhMGY3ODMyMmVkYTA5ZTI0NWIwZmFjYjhiYTQyOTY0MDhlMjU",
      "commit": {
        "author": {
          "name": "Clifford Gama",
          "email": "cliffygamy@gmail.com",
          "date": "2025-06-24T19:33:37Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-17T20:36:02Z"
        },
        "message": "Split monolithic AssertContainsTests.test_contains() into focused tests.\n\nAdded a local helper to test assertion messages with and without a given\nmsg_prefix.",
        "tree": {
          "sha": "5ef2ce26135430dd023ee019515a06979b1dc1d3",
          "url": "https://api.github.com/repos/django/django/git/trees/5ef2ce26135430dd023ee019515a06979b1dc1d3"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/024ea0f78322eda09e245b0facb8ba4296408e25",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/024ea0f78322eda09e245b0facb8ba4296408e25",
      "html_url": "https://github.com/django/django/commit/024ea0f78322eda09e245b0facb8ba4296408e25",
      "comments_url": "https://api.github.com/repos/django/django/commits/024ea0f78322eda09e245b0facb8ba4296408e25/comments",
      "author": {
        "login": "cliff688",
        "id": 53076065,
        "node_id": "MDQ6VXNlcjUzMDc2MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53076065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cliff688",
        "html_url": "https://github.com/cliff688",
        "followers_url": "https://api.github.com/users/cliff688/followers",
        "following_url": "https://api.github.com/users/cliff688/following{/other_user}",
        "gists_url": "https://api.github.com/users/cliff688/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cliff688/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cliff688/subscriptions",
        "organizations_url": "https://api.github.com/users/cliff688/orgs",
        "repos_url": "https://api.github.com/users/cliff688/repos",
        "events_url": "https://api.github.com/users/cliff688/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cliff688/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "6320915053bbd22bee2240b80df08ed4e25235f8",
          "url": "https://api.github.com/repos/django/django/commits/6320915053bbd22bee2240b80df08ed4e25235f8",
          "html_url": "https://github.com/django/django/commit/6320915053bbd22bee2240b80df08ed4e25235f8"
        }
      ]
    },
    {
      "sha": "6320915053bbd22bee2240b80df08ed4e25235f8",
      "node_id": "C_kwDOAD-LgtoAKDYzMjA5MTUwNTNiYmQyMmJlZTIyNDBiODBkZjA4ZWQ0ZTI1MjM1Zjg",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2025-07-16T22:41:57Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-17T17:01:16Z"
        },
        "message": "Refs #36163 -- Reordered EmailMessage options in docs/topics/email.txt.\n\nReordered the keyword-only EmailMessage parameters in the documentation\nto group similar options together and move rarely used options later.\n\nUsed keywords for *all* parameters in EmailMessage examples to improve\nclarity.",
        "tree": {
          "sha": "8ecb0b6517012f033b2e82e45b02e510f54c231b",
          "url": "https://api.github.com/repos/django/django/git/trees/8ecb0b6517012f033b2e82e45b02e510f54c231b"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/6320915053bbd22bee2240b80df08ed4e25235f8",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/6320915053bbd22bee2240b80df08ed4e25235f8",
      "html_url": "https://github.com/django/django/commit/6320915053bbd22bee2240b80df08ed4e25235f8",
      "comments_url": "https://api.github.com/repos/django/django/commits/6320915053bbd22bee2240b80df08ed4e25235f8/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fc793fc303a3d516ab51bb21aa317031caabe7b4",
          "url": "https://api.github.com/repos/django/django/commits/fc793fc303a3d516ab51bb21aa317031caabe7b4",
          "html_url": "https://github.com/django/django/commit/fc793fc303a3d516ab51bb21aa317031caabe7b4"
        }
      ]
    },
    {
      "sha": "fc793fc303a3d516ab51bb21aa317031caabe7b4",
      "node_id": "C_kwDOAD-LgtoAKGZjNzkzZmMzMDNhM2Q1MTZhYjUxYmIyMWFhMzE3MDMxY2FhYmU3YjQ",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2025-07-16T22:01:49Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-17T17:01:16Z"
        },
        "message": "Fixed #36163 -- Deprecated most positional arguments in django.core.mail.\n\nIn public mail APIs, changed less frequently used parameters from\nkeyword-or-positional to keyword-only, emitting a warning during the\nrequired deprecation period.",
        "tree": {
          "sha": "dfcb559adacc3b5dd7e276a4d3b4740a06dc7064",
          "url": "https://api.github.com/repos/django/django/git/trees/dfcb559adacc3b5dd7e276a4d3b4740a06dc7064"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/fc793fc303a3d516ab51bb21aa317031caabe7b4",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/fc793fc303a3d516ab51bb21aa317031caabe7b4",
      "html_url": "https://github.com/django/django/commit/fc793fc303a3d516ab51bb21aa317031caabe7b4",
      "comments_url": "https://api.github.com/repos/django/django/commits/fc793fc303a3d516ab51bb21aa317031caabe7b4/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5289ce65b9a1963707767cc11c476679ab445135",
          "url": "https://api.github.com/repos/django/django/commits/5289ce65b9a1963707767cc11c476679ab445135",
          "html_url": "https://github.com/django/django/commit/5289ce65b9a1963707767cc11c476679ab445135"
        }
      ]
    },
    {
      "sha": "5289ce65b9a1963707767cc11c476679ab445135",
      "node_id": "C_kwDOAD-LgtoAKDUyODljZTY1YjlhMTk2MzcwNzc2N2NjMTFjNDc2Njc5YWI0NDUxMzU",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2025-07-16T21:12:03Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-17T17:01:16Z"
        },
        "message": "Fixed get_connection() signature in docs/topics/email.txt.\n\ndjango.core.mail.get_connection() has always supported only variable\nkeyword arguments (never variable positional arguments).",
        "tree": {
          "sha": "41ae92d2f138ce613a1b06b8dbd2f975a9cc1851",
          "url": "https://api.github.com/repos/django/django/git/trees/41ae92d2f138ce613a1b06b8dbd2f975a9cc1851"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/5289ce65b9a1963707767cc11c476679ab445135",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/5289ce65b9a1963707767cc11c476679ab445135",
      "html_url": "https://github.com/django/django/commit/5289ce65b9a1963707767cc11c476679ab445135",
      "comments_url": "https://api.github.com/repos/django/django/commits/5289ce65b9a1963707767cc11c476679ab445135/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60",
          "url": "https://api.github.com/repos/django/django/commits/a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60",
          "html_url": "https://github.com/django/django/commit/a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60"
        }
      ]
    },
    {
      "sha": "a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60",
      "node_id": "C_kwDOAD-LgtoAKGE1Y2Q4NGFkMjAwMmY5YTQzMzYzYWI5ZmQ5ZDlmNmU5ZGZhNDhjNjA",
      "commit": {
        "author": {
          "name": "Salvo Polizzi",
          "email": "salvopolizzi03@gmail.com",
          "date": "2025-02-14T07:17:25Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-17T10:51:43Z"
        },
        "message": "Fixed #35680 -- Added automatic imports of common utilies to shell management command.",
        "tree": {
          "sha": "e2307cc155727fe1ecd7042a215689ef1df507b5",
          "url": "https://api.github.com/repos/django/django/git/trees/e2307cc155727fe1ecd7042a215689ef1df507b5"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60",
      "html_url": "https://github.com/django/django/commit/a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60",
      "comments_url": "https://api.github.com/repos/django/django/commits/a5cd84ad2002f9a43363ab9fd9d9f6e9dfa48c60/comments",
      "author": {
        "login": "salvo-polizzi",
        "id": 101474753,
        "node_id": "U_kgDOBgxhwQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/101474753?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/salvo-polizzi",
        "html_url": "https://github.com/salvo-polizzi",
        "followers_url": "https://api.github.com/users/salvo-polizzi/followers",
        "following_url": "https://api.github.com/users/salvo-polizzi/following{/other_user}",
        "gists_url": "https://api.github.com/users/salvo-polizzi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/salvo-polizzi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/salvo-polizzi/subscriptions",
        "organizations_url": "https://api.github.com/users/salvo-polizzi/orgs",
        "repos_url": "https://api.github.com/users/salvo-polizzi/repos",
        "events_url": "https://api.github.com/users/salvo-polizzi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/salvo-polizzi/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8499fba0e18826a77fe32cbc13a3d951d9ca8924",
          "url": "https://api.github.com/repos/django/django/commits/8499fba0e18826a77fe32cbc13a3d951d9ca8924",
          "html_url": "https://github.com/django/django/commit/8499fba0e18826a77fe32cbc13a3d951d9ca8924"
        }
      ]
    },
    {
      "sha": "8499fba0e18826a77fe32cbc13a3d951d9ca8924",
      "node_id": "C_kwDOAD-LgtoAKDg0OTlmYmEwZTE4ODI2YTc3ZmUzMmNiYzEzYTNkOTUxZDljYTg5MjQ",
      "commit": {
        "author": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-16T18:36:33Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-16T18:36:33Z"
        },
        "message": "Fixed GitHub Action that checks commit prefixes to fetch PR head correctly.",
        "tree": {
          "sha": "7a6eb41a421c24ef19ac032b50b55e3a345f6a8d",
          "url": "https://api.github.com/repos/django/django/git/trees/7a6eb41a421c24ef19ac032b50b55e3a345f6a8d"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/8499fba0e18826a77fe32cbc13a3d951d9ca8924",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJod/ExCRC1aQ7uu5UhlAAAncgQAHDNZwvOYUbjWaFB9CyK2X+q\naAAGpJdumYiT1jiP1qxzo8+ulBMvKWVKQpKw0fMMLsuvMujiKikUpOggCX1eHJ1g\nzfK1/mYdb2UEz3YMRseILj0hU0QNOWZdM9COYgdPcKJkh4C13TYOvDXGA69pPQmQ\njACUpc7EV99E1LHREoohAZorfK7BlXS5ZSvPGBb/dv2C4ALLCvvZncK0QLjdIVvP\n5P+clT5CAkM3ZPGOqUExXvFnUST9u2yadRnqGPT0cogpYd/7Mz5AT4R7NP4orWEu\nHa1iEWVHXyUsy5IeQWkMiODBltWYPoz6IrjDxRqMbdGfRX8TfDLNJiBT9INhgCCd\n3YFff73tDdiGs9noVGjTJOb7h1NzFepHtQ81sZDwFMt9MxtrzmOu7hJtgGeyo5pf\nRK12oQJ1nYJMpNRGONWcWklXQXU89mOGSsmXLclpDhNXS8MIB/kXGxriffPW1JAi\nAsVnpM1rFhiZ+fmunSJZs02KX1Z1SY5a04p/pq4OcYI2azHbQ6sfflfsU70+nQPF\n7sm0Gyny8RdobSXsspiBpm5PBdEl0JuC0/CZ2QkJ/JifMVnMU+sA2i6F5a66g6vK\nc3tVY3WtxZhzevuYQSSz8C86j1PBMLuewtRm+Zk+l84gTpah2NMZpvoTFaOcvmlU\nNXHo4wG7egFxQn1s6eqa\n=2l9F\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 7a6eb41a421c24ef19ac032b50b55e3a345f6a8d\nparent 40d6eb2c0104f2119d5260b77402737cebf3f85c\nauthor nessita <124304+nessita@users.noreply.github.com> 1752690993 -0300\ncommitter GitHub <noreply@github.com> 1752690993 -0300\n\nFixed GitHub Action that checks commit prefixes to fetch PR head correctly.\n\n",
          "verified_at": "2025-07-16T18:36:34Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/8499fba0e18826a77fe32cbc13a3d951d9ca8924",
      "html_url": "https://github.com/django/django/commit/8499fba0e18826a77fe32cbc13a3d951d9ca8924",
      "comments_url": "https://api.github.com/repos/django/django/commits/8499fba0e18826a77fe32cbc13a3d951d9ca8924/comments",
      "author": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "40d6eb2c0104f2119d5260b77402737cebf3f85c",
          "url": "https://api.github.com/repos/django/django/commits/40d6eb2c0104f2119d5260b77402737cebf3f85c",
          "html_url": "https://github.com/django/django/commit/40d6eb2c0104f2119d5260b77402737cebf3f85c"
        }
      ]
    },
    {
      "sha": "40d6eb2c0104f2119d5260b77402737cebf3f85c",
      "node_id": "C_kwDOAD-LgtoAKDQwZDZlYjJjMDEwNGYyMTE5ZDUyNjBiNzc0MDI3MzdjZWJmM2Y4NWM",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2025-06-25T01:24:41Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-16T13:33:14Z"
        },
        "message": "Refs #35581 -- Added workaround for Python bug in mail tests.\n\nSee python/cpython#128110.",
        "tree": {
          "sha": "afc5cca8089d7da6336a551f3f2b78e22871bb06",
          "url": "https://api.github.com/repos/django/django/git/trees/afc5cca8089d7da6336a551f3f2b78e22871bb06"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/40d6eb2c0104f2119d5260b77402737cebf3f85c",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/40d6eb2c0104f2119d5260b77402737cebf3f85c",
      "html_url": "https://github.com/django/django/commit/40d6eb2c0104f2119d5260b77402737cebf3f85c",
      "comments_url": "https://api.github.com/repos/django/django/commits/40d6eb2c0104f2119d5260b77402737cebf3f85c/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5ca470a52e99b84446c838416fbdac921bfb8146",
          "url": "https://api.github.com/repos/django/django/commits/5ca470a52e99b84446c838416fbdac921bfb8146",
          "html_url": "https://github.com/django/django/commit/5ca470a52e99b84446c838416fbdac921bfb8146"
        }
      ]
    },
    {
      "sha": "5ca470a52e99b84446c838416fbdac921bfb8146",
      "node_id": "C_kwDOAD-LgtoAKDVjYTQ3MGE1MmU5OWI4NDQ0NmM4Mzg0MTZmYmRhYzkyMWJmYjgxNDY",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2024-12-23T18:39:27Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-07-16T13:33:14Z"
        },
        "message": "Refs #35581 -- Reduced implementation dependencies in mail tests.\n\nUpdated mail tests in preparation for migrating from Python's legacy\nto modern email API. The updated tests will pass with either Python API,\nand focus on desired outcomes (e.g., that a message with non-ASCII\ncontent parses accurately at the receiving end) rather than specific\nimplementation details (e.g., where rfc2047 encoded-words are split).\n\nIn a few cases that are still implementation dependent, added comments\nidentifying behavior specific to the legacy email API and expected to\nchange under the modern one.\n\nAdded comments identifying tests that cover internal functions planned\nfor deprecation, and (where meaningful) added similar tests to verify\nthe equivalent behavior in non-deprecated features.\n\nRemoved obsolete tests left over from Python 2.",
        "tree": {
          "sha": "026bad00a77e9c1dc8906f448348fd3fc81e3b85",
          "url": "https://api.github.com/repos/django/django/git/trees/026bad00a77e9c1dc8906f448348fd3fc81e3b85"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/5ca470a52e99b84446c838416fbdac921bfb8146",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/5ca470a52e99b84446c838416fbdac921bfb8146",
      "html_url": "https://github.com/django/django/commit/5ca470a52e99b84446c838416fbdac921bfb8146",
      "comments_url": "https://api.github.com/repos/django/django/commits/5ca470a52e99b84446c838416fbdac921bfb8146/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "f42b89f1bf49a5b89ed852b60f79342320a81c5e",
          "url": "https://api.github.com/repos/django/django/commits/f42b89f1bf49a5b89ed852b60f79342320a81c5e",
          "html_url": "https://github.com/django/django/commit/f42b89f1bf49a5b89ed852b60f79342320a81c5e"
        }
      ]
    },
    {
      "sha": "f42b89f1bf49a5b89ed852b60f79342320a81c5e",
      "node_id": "C_kwDOAD-LgtoAKGY0MmI4OWYxYmY0OWE1Yjg5ZWQ4NTJiNjBmNzkzNDIzMjBhODFjNWU",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2025-07-16T11:49:03Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-16T11:49:03Z"
        },
        "message": "Fixed #36477, Refs #36163 -- Added @deprecate_posargs decorator to simplify deprecation of positional arguments.\n\nThis helper allows marking positional-or-keyword parameters as keyword-only with a deprecation period, in a consistent and correct manner.",
        "tree": {
          "sha": "f811ffa528b2f9fb3769b5052c53e90b0ac59878",
          "url": "https://api.github.com/repos/django/django/git/trees/f811ffa528b2f9fb3769b5052c53e90b0ac59878"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/f42b89f1bf49a5b89ed852b60f79342320a81c5e",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJod5GvCRC1aQ7uu5UhlAAAeRAQAAP/gnDqdTLV9UwkO7Kjce3G\nCTQC3YzPsh1zdHMAHOgAMdCxbJ+98kS9o/97/x49q9DcelNQpDARU1UtHiEepO05\nQdyL1TSsTyt5R50mV8ZCQjCimN+OYZpPYT0LauRtrSgU4TJt381MW9Z0f9qr7Lbx\n9TSmNOBkyOv4w7t4hyUPxtf9+9Ng+t5OBg8Q0ExkN18ufNU9l85HZ9+RqYeu4IIj\nzB6+6tdKGb34YfzKIyJsiSPT4l3mzIL0BHB8Te2BrYyF2E6yubQndxKyc2lQUwj4\nGIvoV43/MVgRSwUovYYDo3Ia7znYQA9TekyLnHHgwev+i/v9mrMXOmEm9cGQsIVb\nhu82YS4wxtUFPZjKQlQ+QQNfVpgp0hvK2NHf2M0A1ZfKWT9ixuCDxnrQWCiy2iAK\nNK9CgV51FfP1H+A0PSOmO8T17vVxA9l0tNI0hthOi6CQFHfMzbkC8sl//ZKmUWvn\n39+QZlZjruICPE2dS4BjOUeBQRMqN01IDqj49uCtPPW/Z8wLkypVS6AI3npNOeRs\n4/eO2hpilFSBgfaQcRU2PA1fTq0Rg3Lp7h5vmirNlenQVRs67ApMPvX5J8XXLxA/\naQ7gsbrqjpGrke3oZApqEChBnJz+zB1cN/LZzqesGGqRV5XfmhdWZda9yWJ5zozV\nd43hW4R07L91ShvLsBHS\n=anIh\n-----END PGP SIGNATURE-----\n",
          "payload": "tree f811ffa528b2f9fb3769b5052c53e90b0ac59878\nparent 10386fac00be55e73279459f00f1959c3ef30a1c\nauthor Mike Edmunds <medmunds@gmail.com> 1752666543 -0700\ncommitter GitHub <noreply@github.com> 1752666543 -0300\n\nFixed #36477, Refs #36163 -- Added @deprecate_posargs decorator to simplify deprecation of positional arguments.\n\nThis helper allows marking positional-or-keyword parameters as keyword-only with a deprecation period, in a consistent and correct manner.\n",
          "verified_at": "2025-07-16T11:49:04Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/f42b89f1bf49a5b89ed852b60f79342320a81c5e",
      "html_url": "https://github.com/django/django/commit/f42b89f1bf49a5b89ed852b60f79342320a81c5e",
      "comments_url": "https://api.github.com/repos/django/django/commits/f42b89f1bf49a5b89ed852b60f79342320a81c5e/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "10386fac00be55e73279459f00f1959c3ef30a1c",
          "url": "https://api.github.com/repos/django/django/commits/10386fac00be55e73279459f00f1959c3ef30a1c",
          "html_url": "https://github.com/django/django/commit/10386fac00be55e73279459f00f1959c3ef30a1c"
        }
      ]
    },
    {
      "sha": "10386fac00be55e73279459f00f1959c3ef30a1c",
      "node_id": "C_kwDOAD-LgtoAKDEwMzg2ZmFjMDBiZTU1ZTczMjc5NDU5ZjAwZjE5NTljM2VmMzBhMWM",
      "commit": {
        "author": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-16T11:38:13Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-16T11:38:13Z"
        },
        "message": "Added GitHub Action to enforce stable branch commit message prefix.",
        "tree": {
          "sha": "284e8c442d3e0ec95f608b0b099effcab702b049",
          "url": "https://api.github.com/repos/django/django/git/trees/284e8c442d3e0ec95f608b0b099effcab702b049"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/10386fac00be55e73279459f00f1959c3ef30a1c",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJod48lCRC1aQ7uu5UhlAAAw+sQAK6OaNCfCOAwsrDlV93hIs+B\nwdKdPg4Hq3rQ6kvMaRj5uFm7JKvrRLgQbKyLIzkGzFc1BWINyfA70WQgXfZmtRXM\nTOrhvq79EuN95RrLP7CYBeEeVl62MIp2BvGbvFC9NIQJIl5d+ja9aSA8pntJrSZp\nANOL2hl5jEDdn0207ToMYM3wWjHR0hlWjUb/pU/xqtTkpmNr6GCgWwkJQBdhFkQO\nlQs4CZ6zk2mO1wWc8FrW0D14XjoCN2I13CnqMs6VX9kLqQb5wofAAFVVRfGhWSil\nwgi3lFpN2eLzkGOWiwrJRgLY7UDxVvhuZlIfvf9q9Hm7bmTmw9t0JVwwvTKIb220\nubNMP599dl2Uyu42n/fiPA72JMz1prGJHLXLKFLKnUYVw8YQlS0WpEjaKe9xs1k6\nkrJMzvI9z+8HZLSkkbg5k0bO/YH+xH7BPS0nq5jYyW94pvyAXr33KZYvKWbLsWiR\nbZNqfpzs8XQTILRjZyJTiVUt/RjrRC1Tr1KtSCO5/h72TkORuLRpVHHnqmiZayxz\nj+X//kYG7YX+j4dAGvETX9P0BOPye/bkiNa0jHEjEBu9tJYqGBpebEtn9PRbvket\n/lDVJXPzMOVK8MF9KaqypvJUY1vFIFLhjXX0gjprBTVPy7Bk0a3QtCVqQuKWJp9N\nZQgUylU0XaP4OhhJvUSM\n=JOYi\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 284e8c442d3e0ec95f608b0b099effcab702b049\nparent ac2d907f459b2cb7ddea7451764e7020ffee08e6\nauthor nessita <124304+nessita@users.noreply.github.com> 1752665893 -0300\ncommitter GitHub <noreply@github.com> 1752665893 -0300\n\nAdded GitHub Action to enforce stable branch commit message prefix.\n\n",
          "verified_at": "2025-07-16T11:38:14Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/10386fac00be55e73279459f00f1959c3ef30a1c",
      "html_url": "https://github.com/django/django/commit/10386fac00be55e73279459f00f1959c3ef30a1c",
      "comments_url": "https://api.github.com/repos/django/django/commits/10386fac00be55e73279459f00f1959c3ef30a1c/comments",
      "author": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ac2d907f459b2cb7ddea7451764e7020ffee08e6",
          "url": "https://api.github.com/repos/django/django/commits/ac2d907f459b2cb7ddea7451764e7020ffee08e6",
          "html_url": "https://github.com/django/django/commit/ac2d907f459b2cb7ddea7451764e7020ffee08e6"
        }
      ]
    },
    {
      "sha": "ac2d907f459b2cb7ddea7451764e7020ffee08e6",
      "node_id": "C_kwDOAD-LgtoAKGFjMmQ5MDdmNDU5YjJjYjdkZGVhNzQ1MTc2NGU3MDIwZmZlZTA4ZTY",
      "commit": {
        "author": {
          "name": "Clifford Gama",
          "email": "53076065+cliff688@users.noreply.github.com",
          "date": "2025-07-13T17:38:23Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-13T17:38:23Z"
        },
        "message": "Fixed typo in docs/ref/utils.txt.",
        "tree": {
          "sha": "6e1b91fe6a5d59ef5a626e7e60288becaebcebda",
          "url": "https://api.github.com/repos/django/django/git/trees/6e1b91fe6a5d59ef5a626e7e60288becaebcebda"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/ac2d907f459b2cb7ddea7451764e7020ffee08e6",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoc+8PCRC1aQ7uu5UhlAAAb5AQAIWsir7p95hMpoJNnU7zWQkE\nWwBDK0fOHj4h2LXwNk2c3jQHeRe4PDGda0BzOWTheO1WCVsdUFOhWnmf5C7T//dI\nS+P7g1+YpKIg1WoHwryssvakFC8212bGjkJe0NgtZ9h3Pm2RsGH9bKYcsKVljwHW\nwcLLdDNoA2Zw0BvW+V2MrHDIV2hAqej2YiIoo5HwxSKglFGNSfl+bb7IMEl9V5aZ\nWJXnF4PSinGRB5/INnZo7AOwQyfEYF7URDfF66Wk0bH0HA4I/J5lJx7Iu7bd5lCs\nJzQ38Zy1ygpbJbkqMgit7IRlG3jWWW+xYpgfR6yFHBad+wm0MHmCXfVC0TkTMRY2\n/6dTM6xmT8Jk7F7woZCyFeKkrHqGRwxEHNEh8bqc5zZurXWAV3NbH7P6nppEJhpo\n9/FR6e2W1q9coKv5X9Ok/n5f9VkGut9egFL+kPefxBIpKZjcOQSek5trdIuEP01G\nVmnV0G3HfXR1BrKC7LGM3W1woS5CHT5X7S8gnJHydOgzYS0upr8a8A5e4c6xkckB\nSQYE+J/IOWw0ntw7eK0xRDxUjRz23l1TPwIxjiKDktRyHNZNgchCj84j76up3Ooq\nibh1WumSvWbOSwuRYOJeryx0CSToIdUWA67SnMTr1uOApkIr1xGkx+Dv1eJKmsxt\nps5UlFWZDqNHxGyEZFor\n=0I2V\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 6e1b91fe6a5d59ef5a626e7e60288becaebcebda\nparent 43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9\nauthor Clifford Gama <53076065+cliff688@users.noreply.github.com> 1752428303 +0200\ncommitter GitHub <noreply@github.com> 1752428303 +0200\n\nFixed typo in docs/ref/utils.txt.\n\n",
          "verified_at": "2025-07-13T17:38:24Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/ac2d907f459b2cb7ddea7451764e7020ffee08e6",
      "html_url": "https://github.com/django/django/commit/ac2d907f459b2cb7ddea7451764e7020ffee08e6",
      "comments_url": "https://api.github.com/repos/django/django/commits/ac2d907f459b2cb7ddea7451764e7020ffee08e6/comments",
      "author": {
        "login": "cliff688",
        "id": 53076065,
        "node_id": "MDQ6VXNlcjUzMDc2MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53076065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cliff688",
        "html_url": "https://github.com/cliff688",
        "followers_url": "https://api.github.com/users/cliff688/followers",
        "following_url": "https://api.github.com/users/cliff688/following{/other_user}",
        "gists_url": "https://api.github.com/users/cliff688/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cliff688/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cliff688/subscriptions",
        "organizations_url": "https://api.github.com/users/cliff688/orgs",
        "repos_url": "https://api.github.com/users/cliff688/repos",
        "events_url": "https://api.github.com/users/cliff688/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cliff688/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9",
          "url": "https://api.github.com/repos/django/django/commits/43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9",
          "html_url": "https://github.com/django/django/commit/43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9"
        }
      ]
    },
    {
      "sha": "43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9",
      "node_id": "C_kwDOAD-LgtoAKDQzYzY4MDQyYzljZmJmNTFjZWIzYWQ4ZGQzYTVmMDIyMGEyYTEzZTk",
      "commit": {
        "author": {
          "name": "Jacob Walls",
          "email": "jacobtylerwalls@gmail.com",
          "date": "2025-07-13T16:29:34Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-13T16:29:34Z"
        },
        "message": "Skipped test_no_logs_without_debug test when the runner is invoked with --debug-sql.",
        "tree": {
          "sha": "dd41f7490a606780637ce90bd72999e4d3075c63",
          "url": "https://api.github.com/repos/django/django/git/trees/dd41f7490a606780637ce90bd72999e4d3075c63"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoc97uCRC1aQ7uu5UhlAAAZokQAGtGqS0U8E8wEq9pfXc6yy6j\nrsZecLCVVlp4zNm3qnCXaXK30QPvADhxPTGjt39sIf8VTXTubhYircoJ3iP01BGx\np8XW25k0LNSl4q4ocaacShw+zypH/87ywtuzcY7LDJAATqlVgE6hWC2Il0fGMb2Y\nB7iJuzmrI1T8uch6/2ahvcrOqT1EAeezrk6wDhSioDzlhH6EnHOgP4QF/rC83aU8\nXI9e2shuLDRiGU1pTgoeMuKCFqLRnl2d2npJLO/9ifRCmJZKXMyD9QqFv7J7qF1z\nU5dV7Dbn3u+SjxNaWNRZMt4A8uTyrcbIJR2z7icVQPX5Ml9ZnE4Z7i31SrF2MddC\nk7PMCxtNlF9zlzG/ZySY49tTaUZjFT9xtWIzRbEORVD+SRyJ77x6GCHaLyeLfX4U\nPbpl9vfpgDcfoZhirfgcm0BzSoI4qOV3M+m68pSaqUkTPzHlbB+9FCFIg3/Gd9MI\nsVm11LKX1O97t47tpUk1Wa0YeoNsKtzG2lRUgxp77EihBqcOrJouWAovk8E8At5L\nA+ZNlbI/M1FJKb/9KYW3n4KfiLngKWDC46yrIaBmAl8hUBaj7xKcp935OMZNHSGF\necX7nb8dfecT5WZKu2Dpnpq/bgKP9MZdB27I3ezjF7gcw77De3lCLWFLFAzwVqOa\n5ppuL+Gmz+6WIwUv2Yur\n=1NdL\n-----END PGP SIGNATURE-----\n",
          "payload": "tree dd41f7490a606780637ce90bd72999e4d3075c63\nparent 395e498553e4e01da1ba0ddb5c4708ad9cb8a16a\nauthor Jacob Walls <jacobtylerwalls@gmail.com> 1752424174 -0400\ncommitter GitHub <noreply@github.com> 1752424174 +0200\n\nSkipped test_no_logs_without_debug test when the runner is invoked with --debug-sql.\n\n",
          "verified_at": "2025-07-13T16:29:35Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9",
      "html_url": "https://github.com/django/django/commit/43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9",
      "comments_url": "https://api.github.com/repos/django/django/commits/43c68042c9cfbf51ceb3ad8dd3a5f0220a2a13e9/comments",
      "author": {
        "login": "jacobtylerwalls",
        "id": 38668450,
        "node_id": "MDQ6VXNlcjM4NjY4NDUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jacobtylerwalls",
        "html_url": "https://github.com/jacobtylerwalls",
        "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
        "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
        "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
        "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
        "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
        "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "395e498553e4e01da1ba0ddb5c4708ad9cb8a16a",
          "url": "https://api.github.com/repos/django/django/commits/395e498553e4e01da1ba0ddb5c4708ad9cb8a16a",
          "html_url": "https://github.com/django/django/commit/395e498553e4e01da1ba0ddb5c4708ad9cb8a16a"
        }
      ]
    },
    {
      "sha": "395e498553e4e01da1ba0ddb5c4708ad9cb8a16a",
      "node_id": "C_kwDOAD-LgtoAKDM5NWU0OTg1NTNlNGUwMWRhMWJhMGRkYjVjNDcwOGFkOWNiOGExNmE",
      "commit": {
        "author": {
          "name": "Tim Schilling",
          "email": "schillingt@better-simple.com",
          "date": "2025-07-11T21:57:24Z"
        },
        "committer": {
          "name": "Mariusz Felisiak",
          "email": "felisiak.mariusz@gmail.com",
          "date": "2025-07-13T12:09:47Z"
        },
        "message": "Added Django ecosystem page to the documentation.",
        "tree": {
          "sha": "00e78b7e1057ba52fdb36c8aa33bc2cbc781efcd",
          "url": "https://api.github.com/repos/django/django/git/trees/00e78b7e1057ba52fdb36c8aa33bc2cbc781efcd"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/395e498553e4e01da1ba0ddb5c4708ad9cb8a16a",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/395e498553e4e01da1ba0ddb5c4708ad9cb8a16a",
      "html_url": "https://github.com/django/django/commit/395e498553e4e01da1ba0ddb5c4708ad9cb8a16a",
      "comments_url": "https://api.github.com/repos/django/django/commits/395e498553e4e01da1ba0ddb5c4708ad9cb8a16a/comments",
      "author": {
        "login": "tim-schilling",
        "id": 1281215,
        "node_id": "MDQ6VXNlcjEyODEyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1281215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tim-schilling",
        "html_url": "https://github.com/tim-schilling",
        "followers_url": "https://api.github.com/users/tim-schilling/followers",
        "following_url": "https://api.github.com/users/tim-schilling/following{/other_user}",
        "gists_url": "https://api.github.com/users/tim-schilling/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tim-schilling/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tim-schilling/subscriptions",
        "organizations_url": "https://api.github.com/users/tim-schilling/orgs",
        "repos_url": "https://api.github.com/users/tim-schilling/repos",
        "events_url": "https://api.github.com/users/tim-schilling/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tim-schilling/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0fe218842e0e396e3ab3982bd21227968a9e7fd8",
          "url": "https://api.github.com/repos/django/django/commits/0fe218842e0e396e3ab3982bd21227968a9e7fd8",
          "html_url": "https://github.com/django/django/commit/0fe218842e0e396e3ab3982bd21227968a9e7fd8"
        }
      ]
    },
    {
      "sha": "0fe218842e0e396e3ab3982bd21227968a9e7fd8",
      "node_id": "C_kwDOAD-LgtoAKDBmZTIxODg0MmUwZTM5NmUzYWIzOTgyYmQyMTIyNzk2OGE5ZTdmZDg",
      "commit": {
        "author": {
          "name": "Simon Charette",
          "email": "charette.s@gmail.com",
          "date": "2025-07-10T16:33:00Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-10T16:33:00Z"
        },
        "message": "Fixed #36502 -- Restored UNNEST strategy for foreign key bulk inserts on PostgreSQL.\n\nRegression in 764af7a3d6c0b543dcf659a2c327f214da768fe4.",
        "tree": {
          "sha": "7e8ff33c5c282ffc91ed4f59ecf9dee7cbd35a3f",
          "url": "https://api.github.com/repos/django/django/git/trees/7e8ff33c5c282ffc91ed4f59ecf9dee7cbd35a3f"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/0fe218842e0e396e3ab3982bd21227968a9e7fd8",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJob+s8CRC1aQ7uu5UhlAAAabwQAF8jb6CEgWQ9rCeE8dSrPhZw\nLs+ndwdmMHhd13h/c4tEMsaTP7dweCmVhugm8TPlx9evVwiHI4Js6lo+a29nEv2y\n6tYKLIq65+AjQKGclPwf3O0OKvW4iZQtysmzwcUkbKiTfgxz8qdG+Hai7+dxl/ea\nNdvDJLUfcmxaiZrklR2JGnuU4R+fYO6XJn2xn/Fs2MWoqg5MSqO+N391pC3nmXXW\nj0dZovRS2vokkiO138Pl/ekVpeViRzV8QBH46yQmlnj81GpM9uKfJsXxQF1Aawvv\n5Jdw4G0eTpKEbi1Idc6186heWz8ZZjhjIir9ARy0P7yyyWMHuvWIjcO8CQQg5sdb\nxArXsKIUofO7ajlCmSmVBqhp7O8z+Y8JzWEE4TdMgfgSOHXHsmAPOG0WxOe+xTek\nqUUcKXLpSXylSqdlU1kogn+x4WlGeLFVoihWOKqWF/FnY1U7Av6YDdWBjoEOpsdz\n6Tgd7h1+4K5JBqz770Vi38qOg8nBZknZC0w4iEcsYyKhgzFthMZ3Q/ug89S7sJyG\nv4CDJrUJioplL9tgCPz6pHFc0bTYlLZ1+L7zdmrrKZdHPqKlYbSYu/NXLObBKG3H\nqR19DmONTnxeYScvQgmO3/ZyfxRi+bTuLWv183knd6oItHIo6yzyOSsEakq2WCrn\nR8RDc9a2Fm450fSMZmIa\n=MEW8\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 7e8ff33c5c282ffc91ed4f59ecf9dee7cbd35a3f\nparent 994950e886ea861aa862bff25a6865baa302bd32\nauthor Simon Charette <charette.s@gmail.com> 1752165180 -0400\ncommitter GitHub <noreply@github.com> 1752165180 +0200\n\nFixed #36502 -- Restored UNNEST strategy for foreign key bulk inserts on PostgreSQL.\n\nRegression in 764af7a3d6c0b543dcf659a2c327f214da768fe4.",
          "verified_at": "2025-07-10T16:33:01Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/0fe218842e0e396e3ab3982bd21227968a9e7fd8",
      "html_url": "https://github.com/django/django/commit/0fe218842e0e396e3ab3982bd21227968a9e7fd8",
      "comments_url": "https://api.github.com/repos/django/django/commits/0fe218842e0e396e3ab3982bd21227968a9e7fd8/comments",
      "author": {
        "login": "charettes",
        "id": 9293,
        "node_id": "MDQ6VXNlcjkyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/charettes",
        "html_url": "https://github.com/charettes",
        "followers_url": "https://api.github.com/users/charettes/followers",
        "following_url": "https://api.github.com/users/charettes/following{/other_user}",
        "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
        "organizations_url": "https://api.github.com/users/charettes/orgs",
        "repos_url": "https://api.github.com/users/charettes/repos",
        "events_url": "https://api.github.com/users/charettes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/charettes/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "994950e886ea861aa862bff25a6865baa302bd32",
          "url": "https://api.github.com/repos/django/django/commits/994950e886ea861aa862bff25a6865baa302bd32",
          "html_url": "https://github.com/django/django/commit/994950e886ea861aa862bff25a6865baa302bd32"
        }
      ]
    },
    {
      "sha": "994950e886ea861aa862bff25a6865baa302bd32",
      "node_id": "C_kwDOAD-LgtoAKDk5NDk1MGU4ODZlYTg2MWFhODYyYmZmMjVhNjg2NWJhYTMwMmJkMzI",
      "commit": {
        "author": {
          "name": "tinmarbusir",
          "email": "47275281+tinmarbusir@users.noreply.github.com",
          "date": "2025-07-09T16:10:04Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-09T16:10:04Z"
        },
        "message": "Fixed typo in ReverseManyToOneDescriptor docstring.",
        "tree": {
          "sha": "cfea6593cd1af4bec5aa790066ef53d12edff0cd",
          "url": "https://api.github.com/repos/django/django/git/trees/cfea6593cd1af4bec5aa790066ef53d12edff0cd"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/994950e886ea861aa862bff25a6865baa302bd32",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJobpRcCRC1aQ7uu5UhlAAAvkUQAGbV1P1woZIyP5KGIMYEXzfU\ntQIJu1BPubxAy3rPBnNM1UvedGdUMXx+Zq60mqInRKlF9nEfQOOQGTYXzNeObn4G\nnSIctDnDDbBnLwwfLslS8C0ZyviNikna8CKRz0nYzqxKFK40JIjJIyrdhSh65qSb\nK4at5QegC9Mx8FIgm4iKYVrKWKp0NFqVLFG9R58y1fYHySL5KK/P/Jze9z09sz/E\nalfYonYJkd7Crgrl0W++aim7sAmCMoNlCbsTcrlypnY/n6kN4h+uWqcbuoG6JpBo\nIZ7rhH83WEzq8RYLBSiIdpNdmcenK+C5m/lnYLb2QFoEFtOD1DCZURwA9Ma83NUh\nVYQRtx8cx6PFEoJB8sEXSBeyjYtFu9mj6JUdYakdOFVlb19Eli4X/uNAqzK9kPC2\n5KcjE63k0JM00idPyt6wkfCcrHxhEa4faXyIpabCuyxIBOCgofsyhtAjy7PnCVLv\nn8dBtMEMKL+JBF8sMHce1QaXQ+ss+r1HcorQDRkgGcJXLJUAPaCy3awGNwMi2sEO\nGswz0aL+bGZGMudid4Fv0+KVK+ZSDfydrKWJpgxZHK2kJMyAel/u40pGoA0HXgdE\nN/qsxVw7Kae6gKnkUI5ZQvg4fEPtlXhip3gANKhj+AdPOFt4cHIYG3grcf4WEpja\nJeAHv11pTd1oS8GWbHEj\n=+BXi\n-----END PGP SIGNATURE-----\n",
          "payload": "tree cfea6593cd1af4bec5aa790066ef53d12edff0cd\nparent a8912e43836289efe479810f360d62c4c92f060a\nauthor tinmarbusir <47275281+tinmarbusir@users.noreply.github.com> 1752077404 +0200\ncommitter GitHub <noreply@github.com> 1752077404 +0200\n\nFixed typo in ReverseManyToOneDescriptor docstring.\n\n",
          "verified_at": "2025-07-09T16:10:04Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/994950e886ea861aa862bff25a6865baa302bd32",
      "html_url": "https://github.com/django/django/commit/994950e886ea861aa862bff25a6865baa302bd32",
      "comments_url": "https://api.github.com/repos/django/django/commits/994950e886ea861aa862bff25a6865baa302bd32/comments",
      "author": {
        "login": "tinmarbusir",
        "id": 47275281,
        "node_id": "MDQ6VXNlcjQ3Mjc1Mjgx",
        "avatar_url": "https://avatars.githubusercontent.com/u/47275281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tinmarbusir",
        "html_url": "https://github.com/tinmarbusir",
        "followers_url": "https://api.github.com/users/tinmarbusir/followers",
        "following_url": "https://api.github.com/users/tinmarbusir/following{/other_user}",
        "gists_url": "https://api.github.com/users/tinmarbusir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tinmarbusir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tinmarbusir/subscriptions",
        "organizations_url": "https://api.github.com/users/tinmarbusir/orgs",
        "repos_url": "https://api.github.com/users/tinmarbusir/repos",
        "events_url": "https://api.github.com/users/tinmarbusir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tinmarbusir/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a8912e43836289efe479810f360d62c4c92f060a",
          "url": "https://api.github.com/repos/django/django/commits/a8912e43836289efe479810f360d62c4c92f060a",
          "html_url": "https://github.com/django/django/commit/a8912e43836289efe479810f360d62c4c92f060a"
        }
      ]
    },
    {
      "sha": "a8912e43836289efe479810f360d62c4c92f060a",
      "node_id": "C_kwDOAD-LgtoAKGE4OTEyZTQzODM2Mjg5ZWZlNDc5ODEwZjM2MGQ2MmM0YzkyZjA2MGE",
      "commit": {
        "author": {
          "name": "Carlton Gibson",
          "email": "carlton.gibson@noumenal.es",
          "date": "2025-07-09T16:06:49Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-09T16:06:49Z"
        },
        "message": "Updated asgiref dependency.",
        "tree": {
          "sha": "b9e3102611839626e9cbf0e7ddd1f03127bce80b",
          "url": "https://api.github.com/repos/django/django/git/trees/b9e3102611839626e9cbf0e7ddd1f03127bce80b"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/a8912e43836289efe479810f360d62c4c92f060a",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJobpOZCRC1aQ7uu5UhlAAAQP8QADxcyLROyYWQHISw6TxqqJxF\nULUSBj1zADoaZrBkeQkRBeSjuykq0fXRw8fXRDh9tmr2a/XX/FCz/mw6DJUMabg7\nCrA6C4BSxRdQIJiqjndGglL1WHig8S5BWU6QtU3zS/zz11dej7OS6d2SKfur9+if\nHyS9iRhZmYt8CfrcJBovKdtwDEJtnsRy5oCKHUK1vwSJyuxmOhGtJBlKNwBbQRH2\nOmTINiYGGmB4wSFUv9g3CHI6Ye1w8+Pq3pkckZQuy3NgYoADwVSiWI+UqRtCryvI\n826EO8C7hiDZSQRqK30l2t7Zs07SPUMMN868Cw5YJE+0oPQXqI2UfTdY/BCu95Tp\nOpio5qO9kCbJGt/qhrHPSAl+cTyrVRhQH2iw3yzhq5/ZMLXHT7znEWF9wfrJedcv\nB4ueIrAaWrHoNKztLo/tzmUGwLdjRgKDE+3bgyHepAyKT42skGOBMxs3SSayWYUi\nTC1tu2+DQ7VzIqHrwGc7a2NEUqkVI4ys51fBy0b6sDZg2z7hivaIBjXXqwpSD3kA\nlX0KmTRv+Xi28weV93PAzwqLJzZy+RGDXyNxRx1qu3jOUGDkCzdIVuZgflHKFTTC\npu9Ef8C0a2bGP/6DYiNTSe17p63yHsCgko9DxJXjyHXKsjfoN7kuuoAG0VgJjVdh\n9MQ4IYoshY34v+aTdPWs\n=ngaM\n-----END PGP SIGNATURE-----\n",
          "payload": "tree b9e3102611839626e9cbf0e7ddd1f03127bce80b\nparent 426be74022ec31d571858a5b8155300c07a4bdbf\nauthor Carlton Gibson <carlton.gibson@noumenal.es> 1752077209 +0200\ncommitter GitHub <noreply@github.com> 1752077209 +0200\n\nUpdated asgiref dependency.\n\n",
          "verified_at": "2025-07-09T16:06:50Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/a8912e43836289efe479810f360d62c4c92f060a",
      "html_url": "https://github.com/django/django/commit/a8912e43836289efe479810f360d62c4c92f060a",
      "comments_url": "https://api.github.com/repos/django/django/commits/a8912e43836289efe479810f360d62c4c92f060a/comments",
      "author": {
        "login": "carltongibson",
        "id": 64686,
        "node_id": "MDQ6VXNlcjY0Njg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/64686?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/carltongibson",
        "html_url": "https://github.com/carltongibson",
        "followers_url": "https://api.github.com/users/carltongibson/followers",
        "following_url": "https://api.github.com/users/carltongibson/following{/other_user}",
        "gists_url": "https://api.github.com/users/carltongibson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/carltongibson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/carltongibson/subscriptions",
        "organizations_url": "https://api.github.com/users/carltongibson/orgs",
        "repos_url": "https://api.github.com/users/carltongibson/repos",
        "events_url": "https://api.github.com/users/carltongibson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/carltongibson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "426be74022ec31d571858a5b8155300c07a4bdbf",
          "url": "https://api.github.com/repos/django/django/commits/426be74022ec31d571858a5b8155300c07a4bdbf",
          "html_url": "https://github.com/django/django/commit/426be74022ec31d571858a5b8155300c07a4bdbf"
        }
      ]
    },
    {
      "sha": "426be74022ec31d571858a5b8155300c07a4bdbf",
      "node_id": "C_kwDOAD-LgtoAKDQyNmJlNzQwMjJlYzMxZDU3MTg1OGE1YjgxNTUzMDBjMDdhNGJkYmY",
      "commit": {
        "author": {
          "name": "Mariusz Felisiak",
          "email": "felisiak.mariusz@gmail.com",
          "date": "2025-07-09T16:01:44Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-09T16:01:44Z"
        },
        "message": "Refs #35844, #35945 -- Used asgiref.sync.iscoroutinefunction() instead of deprecated asyncio.iscoroutinefunction().\n\nFollow up to bd3b1dfa2422e02ced3a894adb7544e42540c97d.\nIntroduced in 2ae3044d9d4dfb8371055513e440e0384f211963.\n\nFixes DeprecationWarning:\n\n'asyncio.iscoroutinefunction' is deprecated and slated for removal\nin Python 3.16; use inspect.iscoroutinefunction() instead.",
        "tree": {
          "sha": "76935f8094deab6aec2f6965c25961f7165e8a71",
          "url": "https://api.github.com/repos/django/django/git/trees/76935f8094deab6aec2f6965c25961f7165e8a71"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/426be74022ec31d571858a5b8155300c07a4bdbf",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJobpJoCRC1aQ7uu5UhlAAA8kYQACwcWiZTggTQ2s4pWKjZYYTx\nxLLEek6coLgkThE+c+V/JVWWFa42Nmu43pbf3vKR0WNfmGN4gJi9d6UbTueYPqVD\nW5oBX70rWxGa28gJsKs2HU0bHw7V71vosZSFyTl6ovrWsbJRJ2Jz5sBWnRC3Bu6a\nGKB9Ceo0+yBEWDAwfk7L2l3+XRzdC4TDw1MyH6hy2w+a0yJg5ViZSaUGFCZ5ohUv\nl0J0B+S4+dqG6zSeE1MB29ND6JhUJiSYvA/MXt8n8qSUUTrorcK6TS2QEeThw2sA\nTDq0tI8uI7vEdBUOrp5WYChZKY3MJO1jdw263vPEi9y8cQBqx6rBZerhpL0eqHGx\n6oea6ouW9rBP413k/l9N1jUeZfowCfWUw/1/0TCumz6f2+rYdPEOs7+NYIVEcZIc\nmv0ke64zbG2zW/+TDyL3TYRZ1Ira3wFtGXxb09dfpT7q9BTowmyCJOr7A81Pl0ys\nd0oMbt55SCg4X+MGjQNB8W4UtkiBC0Pcer5FEi8oSNC4BVtaLEHU9mrTbHFxvhCl\npCSdKw6Czgd5ydbLrbOjiQGFOnvN0CCAqs6IdBtI3fZpggX19ax1CypOFZZ05EcK\n1vR7NBU1vArjnSWO769UYyYuudlBlsbEezRVlp7hodOQiUkO+UBHIDVxLFlxvSMk\nO67IOUGpv4BmYNuh6dA1\n=Z1K7\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 76935f8094deab6aec2f6965c25961f7165e8a71\nparent 6df19412aabb7d969f5eab4b2ff41269de89b233\nauthor Mariusz Felisiak <felisiak.mariusz@gmail.com> 1752076904 +0200\ncommitter GitHub <noreply@github.com> 1752076904 +0200\n\nRefs #35844, #35945 -- Used asgiref.sync.iscoroutinefunction() instead of deprecated asyncio.iscoroutinefunction().\n\nFollow up to bd3b1dfa2422e02ced3a894adb7544e42540c97d.\nIntroduced in 2ae3044d9d4dfb8371055513e440e0384f211963.\n\nFixes DeprecationWarning:\n\n'asyncio.iscoroutinefunction' is deprecated and slated for removal\nin Python 3.16; use inspect.iscoroutinefunction() instead.",
          "verified_at": "2025-07-09T16:01:45Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/426be74022ec31d571858a5b8155300c07a4bdbf",
      "html_url": "https://github.com/django/django/commit/426be74022ec31d571858a5b8155300c07a4bdbf",
      "comments_url": "https://api.github.com/repos/django/django/commits/426be74022ec31d571858a5b8155300c07a4bdbf/comments",
      "author": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "6df19412aabb7d969f5eab4b2ff41269de89b233",
          "url": "https://api.github.com/repos/django/django/commits/6df19412aabb7d969f5eab4b2ff41269de89b233",
          "html_url": "https://github.com/django/django/commit/6df19412aabb7d969f5eab4b2ff41269de89b233"
        }
      ]
    },
    {
      "sha": "6df19412aabb7d969f5eab4b2ff41269de89b233",
      "node_id": "C_kwDOAD-LgtoAKDZkZjE5NDEyYWFiYjdkOTY5ZjVlYWI0YjJmZjQxMjY5ZGU4OWIyMzM",
      "commit": {
        "author": {
          "name": "Clifford Gama",
          "email": "53076065+cliff688@users.noreply.github.com",
          "date": "2025-07-03T13:23:25Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-07-03T13:23:25Z"
        },
        "message": "Refs #27236 -- Removed references to removed index_together migration methods.",
        "tree": {
          "sha": "4e0fe824e210bf79af3f7e496372c1dca4c4683c",
          "url": "https://api.github.com/repos/django/django/git/trees/4e0fe824e210bf79af3f7e496372c1dca4c4683c"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/6df19412aabb7d969f5eab4b2ff41269de89b233",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoZoRNCRC1aQ7uu5UhlAAA+a4QAKoMY9GEMkYg1AafT2DOasG+\nA7n2SdBcWXAiklWE+IgjH4vLGHj2YXgOrw9u0fCKuxiYvGyM7QxXQwQwxzrHmJah\nt+Vhiv57noicAPCgGTJRFixxWKbMmwMJWXNMokKQAavxDNYY4ZmWLd6yBqfGoW+r\nHzZq5XFV9YSrNgE53T6mZG82Bsw7+KadcL36caCrx0JSPMarONKOAlY57YCgbR9Z\nq3Cr3Gw9PGyTLgvA4nR+1NbMlYxSxzlhUi0+j7kF/ZhzsQrdohoVuuw7ltDsOu6o\nZch0w5z288PwuhESjbJOGM38yvncv6/JFdvY6uxgQ/SZH+Kc9sKJ/L/XzqZZD+fd\nx40GJCiCX18IXPDydA2TRiKpM3J7UUBS2ufO50S3PDvsrydV5dOnFD+4Q3zQKQTX\n/UtWKfUs6JZyzC7iamMPS3ME27QQ0xFSqhw4qP0DLc6qyxbT2Ioc8Jz5AHmz9KtO\nd7WGU0T2fgFLazt/jTu08vT5t2Zj7daQxL4LuVykPp8mXon0IY6aO+2YOtZC1dRq\n6Ngb8vYtp9X38/QI1IQF4MVVg/xepXoFwwD2mVl3w9k8sX8d23ZhDJxbRSBLj9+c\n9/x+KDZOeS+RVDNr/iKaeeJfuAUipkyv+h2z1up5EETEp+dHVWnqo3Nm9wWWtErf\nV89EU9/TIT47dZkAS7nc\n=auyj\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 4e0fe824e210bf79af3f7e496372c1dca4c4683c\nparent 94ebcf8366d62f6360851b40e9c4dfe3f71d202f\nauthor Clifford Gama <53076065+cliff688@users.noreply.github.com> 1751549005 +0200\ncommitter GitHub <noreply@github.com> 1751549005 +0200\n\nRefs #27236 -- Removed references to removed index_together migration methods.\n\n",
          "verified_at": "2025-07-03T13:23:26Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/6df19412aabb7d969f5eab4b2ff41269de89b233",
      "html_url": "https://github.com/django/django/commit/6df19412aabb7d969f5eab4b2ff41269de89b233",
      "comments_url": "https://api.github.com/repos/django/django/commits/6df19412aabb7d969f5eab4b2ff41269de89b233/comments",
      "author": {
        "login": "cliff688",
        "id": 53076065,
        "node_id": "MDQ6VXNlcjUzMDc2MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53076065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cliff688",
        "html_url": "https://github.com/cliff688",
        "followers_url": "https://api.github.com/users/cliff688/followers",
        "following_url": "https://api.github.com/users/cliff688/following{/other_user}",
        "gists_url": "https://api.github.com/users/cliff688/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cliff688/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cliff688/subscriptions",
        "organizations_url": "https://api.github.com/users/cliff688/orgs",
        "repos_url": "https://api.github.com/users/cliff688/repos",
        "events_url": "https://api.github.com/users/cliff688/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cliff688/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "94ebcf8366d62f6360851b40e9c4dfe3f71d202f",
          "url": "https://api.github.com/repos/django/django/commits/94ebcf8366d62f6360851b40e9c4dfe3f71d202f",
          "html_url": "https://github.com/django/django/commit/94ebcf8366d62f6360851b40e9c4dfe3f71d202f"
        }
      ]
    },
    {
      "sha": "94ebcf8366d62f6360851b40e9c4dfe3f71d202f",
      "node_id": "C_kwDOAD-LgtoAKDk0ZWJjZjgzNjZkNjJmNjM2MDg1MWI0MGU5YzRkZmUzZjcxZDIwMmY",
      "commit": {
        "author": {
          "name": "Natalia",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-02T18:55:14Z"
        },
        "committer": {
          "name": "Natalia",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-02T18:55:14Z"
        },
        "message": "Added release date for 5.2.4.",
        "tree": {
          "sha": "25380cb9d731703969ababf0cc28fc4f7fb4434d",
          "url": "https://api.github.com/repos/django/django/git/trees/25380cb9d731703969ababf0cc28fc4f7fb4434d"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/94ebcf8366d62f6360851b40e9c4dfe3f71d202f",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/94ebcf8366d62f6360851b40e9c4dfe3f71d202f",
      "html_url": "https://github.com/django/django/commit/94ebcf8366d62f6360851b40e9c4dfe3f71d202f",
      "comments_url": "https://api.github.com/repos/django/django/commits/94ebcf8366d62f6360851b40e9c4dfe3f71d202f/comments",
      "author": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd",
          "url": "https://api.github.com/repos/django/django/commits/7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd",
          "html_url": "https://github.com/django/django/commit/7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd"
        }
      ]
    },
    {
      "sha": "7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd",
      "node_id": "C_kwDOAD-LgtoAKDdhYjZiODYzZGE5YzhjNDFkZDg2YmZkMWVkZTFlNDhlNzljNzE5YmQ",
      "commit": {
        "author": {
          "name": "Natalia",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-02T18:51:02Z"
        },
        "committer": {
          "name": "Natalia",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-02T18:51:02Z"
        },
        "message": "Added stub release notes for 5.2.5.",
        "tree": {
          "sha": "a060aaf5385579ded4eaa300414b8526fc4f9100",
          "url": "https://api.github.com/repos/django/django/git/trees/a060aaf5385579ded4eaa300414b8526fc4f9100"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd",
      "html_url": "https://github.com/django/django/commit/7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd",
      "comments_url": "https://api.github.com/repos/django/django/commits/7ab6b863da9c8c41dd86bfd1ede1e48e79c719bd/comments",
      "author": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7feafd79a481216cdd85b4828e749fc5efacb8db",
          "url": "https://api.github.com/repos/django/django/commits/7feafd79a481216cdd85b4828e749fc5efacb8db",
          "html_url": "https://github.com/django/django/commit/7feafd79a481216cdd85b4828e749fc5efacb8db"
        }
      ]
    },
    {
      "sha": "7feafd79a481216cdd85b4828e749fc5efacb8db",
      "node_id": "C_kwDOAD-LgtoAKDdmZWFmZDc5YTQ4MTIxNmNkZDg1YjQ4MjhlNzQ5ZmM1ZWZhY2I4ZGI",
      "commit": {
        "author": {
          "name": "Matthew Stell",
          "email": "matthewb@noriker.co.uk",
          "date": "2025-06-24T06:27:52Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-01T18:24:34Z"
        },
        "message": "Fixed #35846 -- Ensured consistent path ordering in ManifestStaticFilesStorage manifest files.\n\nThis change reuses the existing sorting of `hashed_files` in\n`ManifestStaticFilesStorage.save_manifest` to also store a sorted\n`paths` mapping in the manifest file. This ensures stable manifest\noutput that does not change unnecessarily.",
        "tree": {
          "sha": "b7f2aa9a5394bbbc46f0c02d04b515779e7d9247",
          "url": "https://api.github.com/repos/django/django/git/trees/b7f2aa9a5394bbbc46f0c02d04b515779e7d9247"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/7feafd79a481216cdd85b4828e749fc5efacb8db",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/7feafd79a481216cdd85b4828e749fc5efacb8db",
      "html_url": "https://github.com/django/django/commit/7feafd79a481216cdd85b4828e749fc5efacb8db",
      "comments_url": "https://api.github.com/repos/django/django/commits/7feafd79a481216cdd85b4828e749fc5efacb8db/comments",
      "author": null,
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "58fc40427f2928190c8d273ceff2121b738e768b",
          "url": "https://api.github.com/repos/django/django/commits/58fc40427f2928190c8d273ceff2121b738e768b",
          "html_url": "https://github.com/django/django/commit/58fc40427f2928190c8d273ceff2121b738e768b"
        }
      ]
    },
    {
      "sha": "58fc40427f2928190c8d273ceff2121b738e768b",
      "node_id": "C_kwDOAD-LgtoAKDU4ZmM0MDQyN2YyOTI4MTkwYzhkMjczY2VmZjIxMjFiNzM4ZTc2OGI",
      "commit": {
        "author": {
          "name": "Roel Delos Reyes",
          "email": "roel.delosreyes@finqle.com",
          "date": "2025-06-25T17:26:58Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-07-01T18:24:07Z"
        },
        "message": "Fixed #36479 -- Improved how FileNotFoundError is triggered in code formatter tests.\n\nEnsured the test for formatter subprocess FileNotFoundError doesn't rely\non platform-specific behavior, improving reliability on macOS and other\nsystems by consistently using pathlib to build test paths.",
        "tree": {
          "sha": "c13164eeda5ff98ab852ee8d009d0ec7814dcc44",
          "url": "https://api.github.com/repos/django/django/git/trees/c13164eeda5ff98ab852ee8d009d0ec7814dcc44"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/58fc40427f2928190c8d273ceff2121b738e768b",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/58fc40427f2928190c8d273ceff2121b738e768b",
      "html_url": "https://github.com/django/django/commit/58fc40427f2928190c8d273ceff2121b738e768b",
      "comments_url": "https://api.github.com/repos/django/django/commits/58fc40427f2928190c8d273ceff2121b738e768b/comments",
      "author": null,
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "192bc7a7be92e20cc250907fb4083df689715679",
          "url": "https://api.github.com/repos/django/django/commits/192bc7a7be92e20cc250907fb4083df689715679",
          "html_url": "https://github.com/django/django/commit/192bc7a7be92e20cc250907fb4083df689715679"
        }
      ]
    },
    {
      "sha": "192bc7a7be92e20cc250907fb4083df689715679",
      "node_id": "C_kwDOAD-LgtoAKDE5MmJjN2E3YmU5MmUyMGNjMjUwOTA3ZmI0MDgzZGY2ODk3MTU2Nzk",
      "commit": {
        "author": {
          "name": "Simon Charette",
          "email": "charette.s@gmail.com",
          "date": "2025-06-14T15:04:17Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-06-30T23:15:25Z"
        },
        "message": "Fixed #36464 -- Fixed \"__in\" tuple lookup on backends lacking native support.\n\nWhen native support for tuple lookups is missing in a DB backend, it can\nbe emulated with an EXISTS clause. This is controlled by the backend\nfeature flag \"supports_tuple_lookups\".\n\nThe mishandling of subquery right-hand side in `TupleIn` (added to\nsupport `CompositePrimaryKey` in Refs #373) was likely missed because\nthe only core backend we test with the feature flag disabled\n(Oracle < 23.4) supports it natively.\n\nThanks to Nandana Raol for the report, and to Sarah Boyce, Jacob Walls,\nand Natalia Bidart for reviews.",
        "tree": {
          "sha": "fce1eb3bd023873a28abde83b557dd83e65fe46a",
          "url": "https://api.github.com/repos/django/django/git/trees/fce1eb3bd023873a28abde83b557dd83e65fe46a"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/192bc7a7be92e20cc250907fb4083df689715679",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/192bc7a7be92e20cc250907fb4083df689715679",
      "html_url": "https://github.com/django/django/commit/192bc7a7be92e20cc250907fb4083df689715679",
      "comments_url": "https://api.github.com/repos/django/django/commits/192bc7a7be92e20cc250907fb4083df689715679/comments",
      "author": {
        "login": "charettes",
        "id": 9293,
        "node_id": "MDQ6VXNlcjkyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/charettes",
        "html_url": "https://github.com/charettes",
        "followers_url": "https://api.github.com/users/charettes/followers",
        "following_url": "https://api.github.com/users/charettes/following{/other_user}",
        "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/charettes/subscriptions",
        "organizations_url": "https://api.github.com/users/charettes/orgs",
        "repos_url": "https://api.github.com/users/charettes/repos",
        "events_url": "https://api.github.com/users/charettes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/charettes/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ff0ff98d427982b7225df59f454a86bdf66251d6",
          "url": "https://api.github.com/repos/django/django/commits/ff0ff98d427982b7225df59f454a86bdf66251d6",
          "html_url": "https://github.com/django/django/commit/ff0ff98d427982b7225df59f454a86bdf66251d6"
        }
      ]
    },
    {
      "sha": "ff0ff98d427982b7225df59f454a86bdf66251d6",
      "node_id": "C_kwDOAD-LgtoAKGZmMGZmOThkNDI3OTgyYjcyMjVkZjU5ZjQ1NGE4NmJkZjY2MjUxZDY",
      "commit": {
        "author": {
          "name": "Natalia",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-06-25T20:22:46Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-06-27T18:57:02Z"
        },
        "message": "Refs #15727 -- Updated AdminSeleniumTestCase to use ContentSecurityPolicyMiddleware.\n\nReplaced the custom CSP middleware previously used in the admin's\nAdminSeleniumTestCase with the official ContentSecurityPolicyMiddleware.\nThis change ensures alignment with Django's built-in CSP support.\n\nAlso updates the test logic to inspect browser console logs to assert\nthat no CSP violations are triggered during Selenium admin tests.",
        "tree": {
          "sha": "6af4889cfdea447484db5fc4afc447fc2315cab0",
          "url": "https://api.github.com/repos/django/django/git/trees/6af4889cfdea447484db5fc4afc447fc2315cab0"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/ff0ff98d427982b7225df59f454a86bdf66251d6",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/ff0ff98d427982b7225df59f454a86bdf66251d6",
      "html_url": "https://github.com/django/django/commit/ff0ff98d427982b7225df59f454a86bdf66251d6",
      "comments_url": "https://api.github.com/repos/django/django/commits/ff0ff98d427982b7225df59f454a86bdf66251d6/comments",
      "author": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d63241ebc7067fdebbaf704989b34fcd8f26bbe9",
          "url": "https://api.github.com/repos/django/django/commits/d63241ebc7067fdebbaf704989b34fcd8f26bbe9",
          "html_url": "https://github.com/django/django/commit/d63241ebc7067fdebbaf704989b34fcd8f26bbe9"
        }
      ]
    },
    {
      "sha": "d63241ebc7067fdebbaf704989b34fcd8f26bbe9",
      "node_id": "C_kwDOAD-LgtoAKGQ2MzI0MWViYzcwNjdmZGViYmFmNzA0OTg5YjM0ZmNkOGYyNmJiZTk",
      "commit": {
        "author": {
          "name": "Rob Hudson",
          "email": "rob@cogit8.org",
          "date": "2025-05-03T17:01:58Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-06-27T18:57:02Z"
        },
        "message": "Fixed #15727 -- Added Content Security Policy (CSP) support.\n\nThis initial work adds a pair of settings to configure specific CSP\ndirectives for enforcing or reporting policy violations, a new\n`django.middleware.csp.ContentSecurityPolicyMiddleware` to apply the\nappropriate headers to responses, and a context processor to support CSP\nnonces in templates for safely inlining assets.\n\nRelevant documentation has been added for the 6.0 release notes,\nsecurity overview, a new how-to page, and a dedicated reference section.\n\nThanks to the multiple reviewers for their precise and valuable feedback.\n\nCo-authored-by: Natalia <124304+nessita@users.noreply.github.com>",
        "tree": {
          "sha": "07b5a5cb0c70c446f5f0fb9ad2834501fc3d6544",
          "url": "https://api.github.com/repos/django/django/git/trees/07b5a5cb0c70c446f5f0fb9ad2834501fc3d6544"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/d63241ebc7067fdebbaf704989b34fcd8f26bbe9",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/d63241ebc7067fdebbaf704989b34fcd8f26bbe9",
      "html_url": "https://github.com/django/django/commit/d63241ebc7067fdebbaf704989b34fcd8f26bbe9",
      "comments_url": "https://api.github.com/repos/django/django/commits/d63241ebc7067fdebbaf704989b34fcd8f26bbe9/comments",
      "author": {
        "login": "robhudson",
        "id": 1106,
        "node_id": "MDQ6VXNlcjExMDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1106?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robhudson",
        "html_url": "https://github.com/robhudson",
        "followers_url": "https://api.github.com/users/robhudson/followers",
        "following_url": "https://api.github.com/users/robhudson/following{/other_user}",
        "gists_url": "https://api.github.com/users/robhudson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robhudson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robhudson/subscriptions",
        "organizations_url": "https://api.github.com/users/robhudson/orgs",
        "repos_url": "https://api.github.com/users/robhudson/repos",
        "events_url": "https://api.github.com/users/robhudson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robhudson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "3f59711581bd22ebd0f13fb040b15b69c0eee21f",
          "url": "https://api.github.com/repos/django/django/commits/3f59711581bd22ebd0f13fb040b15b69c0eee21f",
          "html_url": "https://github.com/django/django/commit/3f59711581bd22ebd0f13fb040b15b69c0eee21f"
        }
      ]
    },
    {
      "sha": "3f59711581bd22ebd0f13fb040b15b69c0eee21f",
      "node_id": "C_kwDOAD-LgtoAKDNmNTk3MTE1ODFiZDIyZWJkMGYxM2ZiMDQwYjE1YjY5YzBlZWUyMWY",
      "commit": {
        "author": {
          "name": "antoliny0919",
          "email": "antoliny0919@gmail.com",
          "date": "2025-05-08T10:24:07Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-27T16:03:16Z"
        },
        "message": "Fixed #36366 -- Improved accessibility of pagination in the admin.",
        "tree": {
          "sha": "7b3eea333004013bbfdd1d48b6eb4644cd164c8f",
          "url": "https://api.github.com/repos/django/django/git/trees/7b3eea333004013bbfdd1d48b6eb4644cd164c8f"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/3f59711581bd22ebd0f13fb040b15b69c0eee21f",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/3f59711581bd22ebd0f13fb040b15b69c0eee21f",
      "html_url": "https://github.com/django/django/commit/3f59711581bd22ebd0f13fb040b15b69c0eee21f",
      "comments_url": "https://api.github.com/repos/django/django/commits/3f59711581bd22ebd0f13fb040b15b69c0eee21f/comments",
      "author": {
        "login": "Antoliny0919",
        "id": 100985243,
        "node_id": "U_kgDOBgTpmw",
        "avatar_url": "https://avatars.githubusercontent.com/u/100985243?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Antoliny0919",
        "html_url": "https://github.com/Antoliny0919",
        "followers_url": "https://api.github.com/users/Antoliny0919/followers",
        "following_url": "https://api.github.com/users/Antoliny0919/following{/other_user}",
        "gists_url": "https://api.github.com/users/Antoliny0919/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Antoliny0919/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Antoliny0919/subscriptions",
        "organizations_url": "https://api.github.com/users/Antoliny0919/orgs",
        "repos_url": "https://api.github.com/users/Antoliny0919/repos",
        "events_url": "https://api.github.com/users/Antoliny0919/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Antoliny0919/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7",
          "url": "https://api.github.com/repos/django/django/commits/29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7",
          "html_url": "https://github.com/django/django/commit/29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7"
        }
      ]
    },
    {
      "sha": "29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7",
      "node_id": "C_kwDOAD-LgtoAKDI5ZjVlMWU5N2Q2NjA4NTVkMzRjMWVlNWVkYmQ1Y2ZlMDk0YjZjYTc",
      "commit": {
        "author": {
          "name": "wookkl",
          "email": "wjddnr315@gmail.com",
          "date": "2025-06-17T16:34:10Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-27T15:17:45Z"
        },
        "message": "Fixed #35595, #35962 -- Removed indexes and constraints before fields in migrations.",
        "tree": {
          "sha": "8044f0a78db1e192ab19f4ffae28678a062178e3",
          "url": "https://api.github.com/repos/django/django/git/trees/8044f0a78db1e192ab19f4ffae28678a062178e3"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7",
      "html_url": "https://github.com/django/django/commit/29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7",
      "comments_url": "https://api.github.com/repos/django/django/commits/29f5e1e97d660855d34c1ee5edbd5cfe094b6ca7/comments",
      "author": {
        "login": "wookkl",
        "id": 57362359,
        "node_id": "MDQ6VXNlcjU3MzYyMzU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57362359?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wookkl",
        "html_url": "https://github.com/wookkl",
        "followers_url": "https://api.github.com/users/wookkl/followers",
        "following_url": "https://api.github.com/users/wookkl/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookkl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wookkl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookkl/subscriptions",
        "organizations_url": "https://api.github.com/users/wookkl/orgs",
        "repos_url": "https://api.github.com/users/wookkl/repos",
        "events_url": "https://api.github.com/users/wookkl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wookkl/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a3882876927a819ca982ea61353945e9d86f3659",
          "url": "https://api.github.com/repos/django/django/commits/a3882876927a819ca982ea61353945e9d86f3659",
          "html_url": "https://github.com/django/django/commit/a3882876927a819ca982ea61353945e9d86f3659"
        }
      ]
    },
    {
      "sha": "a3882876927a819ca982ea61353945e9d86f3659",
      "node_id": "C_kwDOAD-LgtoAKGEzODgyODc2OTI3YTgxOWNhOTgyZWE2MTM1Mzk0NWU5ZDg2ZjM2NTk",
      "commit": {
        "author": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-26T10:42:04Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-06-27T12:46:17Z"
        },
        "message": "Fixed indentation in docs/internals/howto-release-django.txt.",
        "tree": {
          "sha": "7c7ecb8e429cb038b584576703b3c170f52cde72",
          "url": "https://api.github.com/repos/django/django/git/trees/7c7ecb8e429cb038b584576703b3c170f52cde72"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/a3882876927a819ca982ea61353945e9d86f3659",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/a3882876927a819ca982ea61353945e9d86f3659",
      "html_url": "https://github.com/django/django/commit/a3882876927a819ca982ea61353945e9d86f3659",
      "comments_url": "https://api.github.com/repos/django/django/commits/a3882876927a819ca982ea61353945e9d86f3659/comments",
      "author": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0",
          "url": "https://api.github.com/repos/django/django/commits/af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0",
          "html_url": "https://github.com/django/django/commit/af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0"
        }
      ]
    },
    {
      "sha": "af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0",
      "node_id": "C_kwDOAD-LgtoAKGFmNmVkNTVmY2RiMGNkMGMwY2E5NWU0NmI3ZDA4MWQwMzBhODYxZTA",
      "commit": {
        "author": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-26T10:39:55Z"
        },
        "committer": {
          "name": "nessita",
          "email": "124304+nessita@users.noreply.github.com",
          "date": "2025-06-27T12:46:17Z"
        },
        "message": "Separated creating the release and setting it as default in Trac in the post-release steps.",
        "tree": {
          "sha": "42f47afacc77e7b95a79586e87fe4c3be4cad153",
          "url": "https://api.github.com/repos/django/django/git/trees/42f47afacc77e7b95a79586e87fe4c3be4cad153"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0",
      "html_url": "https://github.com/django/django/commit/af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0",
      "comments_url": "https://api.github.com/repos/django/django/commits/af6ed55fcdb0cd0c0ca95e46b7d081d030a861e0/comments",
      "author": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "nessita",
        "id": 124304,
        "node_id": "MDQ6VXNlcjEyNDMwNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/124304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nessita",
        "html_url": "https://github.com/nessita",
        "followers_url": "https://api.github.com/users/nessita/followers",
        "following_url": "https://api.github.com/users/nessita/following{/other_user}",
        "gists_url": "https://api.github.com/users/nessita/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nessita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nessita/subscriptions",
        "organizations_url": "https://api.github.com/users/nessita/orgs",
        "repos_url": "https://api.github.com/users/nessita/repos",
        "events_url": "https://api.github.com/users/nessita/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nessita/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "23529b662793cdf4725d5f8ff58f0df94b343365",
          "url": "https://api.github.com/repos/django/django/commits/23529b662793cdf4725d5f8ff58f0df94b343365",
          "html_url": "https://github.com/django/django/commit/23529b662793cdf4725d5f8ff58f0df94b343365"
        }
      ]
    },
    {
      "sha": "23529b662793cdf4725d5f8ff58f0df94b343365",
      "node_id": "C_kwDOAD-LgtoAKDIzNTI5YjY2Mjc5M2NkZjQ3MjVkNWY4ZmY1OGYwZGY5NGIzNDMzNjU",
      "commit": {
        "author": {
          "name": "Mike Edmunds",
          "email": "medmunds@gmail.com",
          "date": "2025-06-19T03:34:34Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-26T06:54:01Z"
        },
        "message": "Fixed #36478 -- Fixed inconsistent mail attachment handling.\n\nFixed an inconsistency between EmailMessage.attach() and .attachments\nwhen attaching bytes content with a text/* mimetype. The attach()\nfunction decodes UTF-8 bytes if possible and otherwise changes the\nmimetype to application/octet-stream to preserve the content's unknown\nencoding (refs #27007). Providing equivalent content directly in\nEmailMessage.attachments did not apply the same logic, leading\nto an \"AttributeError: 'bytes' object has no attribute 'encode'\"\nin SafeMIMEText.set_payload().\n\nUpdated EmailMessage._create_mime_attachment() to match attach()'s\nhandling for text/* mimetypes with bytes content. Updated test cases\nto accurately cover behavior on both paths.",
        "tree": {
          "sha": "4d7d62237ce8f57c64e7d7c9f77e89fec3cdb59a",
          "url": "https://api.github.com/repos/django/django/git/trees/4d7d62237ce8f57c64e7d7c9f77e89fec3cdb59a"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/23529b662793cdf4725d5f8ff58f0df94b343365",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/23529b662793cdf4725d5f8ff58f0df94b343365",
      "html_url": "https://github.com/django/django/commit/23529b662793cdf4725d5f8ff58f0df94b343365",
      "comments_url": "https://api.github.com/repos/django/django/commits/23529b662793cdf4725d5f8ff58f0df94b343365/comments",
      "author": {
        "login": "medmunds",
        "id": 639984,
        "node_id": "MDQ6VXNlcjYzOTk4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/639984?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/medmunds",
        "html_url": "https://github.com/medmunds",
        "followers_url": "https://api.github.com/users/medmunds/followers",
        "following_url": "https://api.github.com/users/medmunds/following{/other_user}",
        "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions",
        "organizations_url": "https://api.github.com/users/medmunds/orgs",
        "repos_url": "https://api.github.com/users/medmunds/repos",
        "events_url": "https://api.github.com/users/medmunds/events{/privacy}",
        "received_events_url": "https://api.github.com/users/medmunds/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "68a45d9a8078db642f0aca7ddab33af6df7ebeb3",
          "url": "https://api.github.com/repos/django/django/commits/68a45d9a8078db642f0aca7ddab33af6df7ebeb3",
          "html_url": "https://github.com/django/django/commit/68a45d9a8078db642f0aca7ddab33af6df7ebeb3"
        }
      ]
    },
    {
      "sha": "68a45d9a8078db642f0aca7ddab33af6df7ebeb3",
      "node_id": "C_kwDOAD-LgtoAKDY4YTQ1ZDlhODA3OGRiNjQyZjBhY2E3ZGRhYjMzYWY2ZGY3ZWJlYjM",
      "commit": {
        "author": {
          "name": "michalpokusa",
          "email": "72110769+michalpokusa@users.noreply.github.com",
          "date": "2025-06-18T09:37:35Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-25T10:46:58Z"
        },
        "message": "Fixed #36386 -- Added styles and icons for INFO and DEBUG messages in the admin.",
        "tree": {
          "sha": "8ab629d01f25d041aaced45035e37b4c1d33530a",
          "url": "https://api.github.com/repos/django/django/git/trees/8ab629d01f25d041aaced45035e37b4c1d33530a"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/68a45d9a8078db642f0aca7ddab33af6df7ebeb3",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/68a45d9a8078db642f0aca7ddab33af6df7ebeb3",
      "html_url": "https://github.com/django/django/commit/68a45d9a8078db642f0aca7ddab33af6df7ebeb3",
      "comments_url": "https://api.github.com/repos/django/django/commits/68a45d9a8078db642f0aca7ddab33af6df7ebeb3/comments",
      "author": {
        "login": "michalpokusa",
        "id": 72110769,
        "node_id": "MDQ6VXNlcjcyMTEwNzY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/72110769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michalpokusa",
        "html_url": "https://github.com/michalpokusa",
        "followers_url": "https://api.github.com/users/michalpokusa/followers",
        "following_url": "https://api.github.com/users/michalpokusa/following{/other_user}",
        "gists_url": "https://api.github.com/users/michalpokusa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/michalpokusa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/michalpokusa/subscriptions",
        "organizations_url": "https://api.github.com/users/michalpokusa/orgs",
        "repos_url": "https://api.github.com/users/michalpokusa/repos",
        "events_url": "https://api.github.com/users/michalpokusa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/michalpokusa/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7091801e046dc85dba2238ed4eaf0b3f62bcfc7f",
          "url": "https://api.github.com/repos/django/django/commits/7091801e046dc85dba2238ed4eaf0b3f62bcfc7f",
          "html_url": "https://github.com/django/django/commit/7091801e046dc85dba2238ed4eaf0b3f62bcfc7f"
        }
      ]
    },
    {
      "sha": "7091801e046dc85dba2238ed4eaf0b3f62bcfc7f",
      "node_id": "C_kwDOAD-LgtoAKDcwOTE4MDFlMDQ2ZGM4NWRiYTIyMzhlZDRlYWYwYjNmNjJiY2ZjN2Y",
      "commit": {
        "author": {
          "name": "Mariusz Felisiak",
          "email": "felisiak.mariusz@gmail.com",
          "date": "2025-06-18T15:51:08Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-25T06:58:22Z"
        },
        "message": "Fixed #36471 -- Added support for __coveredby GIS lookup and Collect, GeoHash, IsValid on MariaDB 12.0.1+.",
        "tree": {
          "sha": "e788679445d7ff0c854806631a99646c6226dc1d",
          "url": "https://api.github.com/repos/django/django/git/trees/e788679445d7ff0c854806631a99646c6226dc1d"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/7091801e046dc85dba2238ed4eaf0b3f62bcfc7f",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/7091801e046dc85dba2238ed4eaf0b3f62bcfc7f",
      "html_url": "https://github.com/django/django/commit/7091801e046dc85dba2238ed4eaf0b3f62bcfc7f",
      "comments_url": "https://api.github.com/repos/django/django/commits/7091801e046dc85dba2238ed4eaf0b3f62bcfc7f/comments",
      "author": {
        "login": "felixxm",
        "id": 2865885,
        "node_id": "MDQ6VXNlcjI4NjU4ODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2865885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/felixxm",
        "html_url": "https://github.com/felixxm",
        "followers_url": "https://api.github.com/users/felixxm/followers",
        "following_url": "https://api.github.com/users/felixxm/following{/other_user}",
        "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions",
        "organizations_url": "https://api.github.com/users/felixxm/orgs",
        "repos_url": "https://api.github.com/users/felixxm/repos",
        "events_url": "https://api.github.com/users/felixxm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/felixxm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21",
          "url": "https://api.github.com/repos/django/django/commits/b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21",
          "html_url": "https://github.com/django/django/commit/b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21"
        }
      ]
    },
    {
      "sha": "b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21",
      "node_id": "C_kwDOAD-LgtoAKGIyNDA3ZTRkN2QyNWU0YTU4MzliYjUxMmNiMmZkZjcxZTllMzBhMjE",
      "commit": {
        "author": {
          "name": "Jacob Walls",
          "email": "jacobtylerwalls@gmail.com",
          "date": "2025-06-08T20:56:46Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-23T12:06:14Z"
        },
        "message": "Fixed #35305 -- Avoided recreating constraints on fields renamed via db_column.",
        "tree": {
          "sha": "17f342173f8d492389d05f1ca6b75ab3ed960ce5",
          "url": "https://api.github.com/repos/django/django/git/trees/17f342173f8d492389d05f1ca6b75ab3ed960ce5"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21",
      "html_url": "https://github.com/django/django/commit/b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21",
      "comments_url": "https://api.github.com/repos/django/django/commits/b2407e4d7d25e4a5839bb512cb2fdf71e9e30a21/comments",
      "author": {
        "login": "jacobtylerwalls",
        "id": 38668450,
        "node_id": "MDQ6VXNlcjM4NjY4NDUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jacobtylerwalls",
        "html_url": "https://github.com/jacobtylerwalls",
        "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
        "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
        "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
        "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
        "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
        "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "54402a75296909b1b00df41ff4dbd95e3d8a87e6",
          "url": "https://api.github.com/repos/django/django/commits/54402a75296909b1b00df41ff4dbd95e3d8a87e6",
          "html_url": "https://github.com/django/django/commit/54402a75296909b1b00df41ff4dbd95e3d8a87e6"
        }
      ]
    },
    {
      "sha": "54402a75296909b1b00df41ff4dbd95e3d8a87e6",
      "node_id": "C_kwDOAD-LgtoAKDU0NDAyYTc1Mjk2OTA5YjFiMDBkZjQxZmY0ZGJkOTVlM2Q4YTg3ZTY",
      "commit": {
        "author": {
          "name": "Tim Graham",
          "email": "timograham@gmail.com",
          "date": "2025-06-21T12:51:34Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-06-21T12:51:34Z"
        },
        "message": "Removed @skipIfDBFeature silencing of nonexistent features.\n\nFollow up to f5df7ed7e62585c7d0289a88a327dab8d608efcf.",
        "tree": {
          "sha": "8edd3559ca103e839488310605852c7098172f62",
          "url": "https://api.github.com/repos/django/django/git/trees/8edd3559ca103e839488310605852c7098172f62"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/54402a75296909b1b00df41ff4dbd95e3d8a87e6",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoVqrWCRC1aQ7uu5UhlAAA6BoQAKZ+Tn0q04naYlBg8NE+PPUK\nN1hU3s/brU/u7a1nMeIh07qj9eGbUjn3mwERO1LukeYLrONlajPB3/QJ8qBWWswy\nUhKjX5QGD2jgoIFoG/lW1KBrCgM24mIPp4zgnf3hvuUKzpsgOVk8dkGI0FtI53h6\nKyikeOqLX5AnebV8w2BLtv+WiUZ4UqePhgVjf+Z2HH5Xi2qwiRkKCUZ5TmZX85aa\ntaz1mo9n8/W38fOChGpfu0P0qYLCFKq4PN6QfosVUB65dMwSJarhUNaZu7I6eU3X\nLm/0boVi8o7Ur8My2RhweK7vbSco8LWq0yITCXVRDg4ZTjugm2awuW8pj2wNN0z5\n1YfqklgvjDOUzTWepq6KKnbuq/iBb9URqScFOwDce2c3KUXQqZpuTIsPt7lz9cDa\nFPJtKcmMR+DQ+iRIJmeSkFweyS6PQfZGsUHDoEVFdlymdoxL5JnRyATrk2BIqzwT\nxBh+nvb0bAhnHHkqymaejsrssFkJCI0QHne2LB29wlVd+aFIm02hxx7nVIGkWiF7\nZaV6j0zdhhe8ZfFnFgedcLutyj5pb06bxRg+kMxgp35jLd9Hp/JLjgtXxFGXh7yT\nvhH0rgFuoUYc0BWrVTq225ecaYn1ahGzSJrp6MrppEeZnudPDGTBeELijrRWQHSC\n5ooRRKkkGAmB4PawN/I4\n=D3W9\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 8edd3559ca103e839488310605852c7098172f62\nparent f5df7ed7e62585c7d0289a88a327dab8d608efcf\nauthor Tim Graham <timograham@gmail.com> 1750510294 -0400\ncommitter GitHub <noreply@github.com> 1750510294 +0200\n\nRemoved @skipIfDBFeature silencing of nonexistent features.\n\nFollow up to f5df7ed7e62585c7d0289a88a327dab8d608efcf.",
          "verified_at": "2025-06-21T12:51:35Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/54402a75296909b1b00df41ff4dbd95e3d8a87e6",
      "html_url": "https://github.com/django/django/commit/54402a75296909b1b00df41ff4dbd95e3d8a87e6",
      "comments_url": "https://api.github.com/repos/django/django/commits/54402a75296909b1b00df41ff4dbd95e3d8a87e6/comments",
      "author": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "f5df7ed7e62585c7d0289a88a327dab8d608efcf",
          "url": "https://api.github.com/repos/django/django/commits/f5df7ed7e62585c7d0289a88a327dab8d608efcf",
          "html_url": "https://github.com/django/django/commit/f5df7ed7e62585c7d0289a88a327dab8d608efcf"
        }
      ]
    },
    {
      "sha": "f5df7ed7e62585c7d0289a88a327dab8d608efcf",
      "node_id": "C_kwDOAD-LgtoAKGY1ZGY3ZWQ3ZTYyNTg1YzdkMDI4OWE4OGEzMjdkYWI4ZDYwOGVmY2Y",
      "commit": {
        "author": {
          "name": "Tim Graham",
          "email": "timograham@gmail.com",
          "date": "2025-06-20T00:53:18Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-20T15:16:22Z"
        },
        "message": "Removed @skipUnlessDBFeature silencing of nonexistent features.\n\nThis was added in 46c7707e50400e237cbd774a31ad801669ca3905 but is\nobsolete now that gis_tests are discovered separately. It's\nerror-prone to ignore mistyped names.",
        "tree": {
          "sha": "ae7ecfd0ba0a4dd08cb43c0e78d95ade06e9aaff",
          "url": "https://api.github.com/repos/django/django/git/trees/ae7ecfd0ba0a4dd08cb43c0e78d95ade06e9aaff"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/f5df7ed7e62585c7d0289a88a327dab8d608efcf",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/f5df7ed7e62585c7d0289a88a327dab8d608efcf",
      "html_url": "https://github.com/django/django/commit/f5df7ed7e62585c7d0289a88a327dab8d608efcf",
      "comments_url": "https://api.github.com/repos/django/django/commits/f5df7ed7e62585c7d0289a88a327dab8d608efcf/comments",
      "author": {
        "login": "timgraham",
        "id": 411869,
        "node_id": "MDQ6VXNlcjQxMTg2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/411869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/timgraham",
        "html_url": "https://github.com/timgraham",
        "followers_url": "https://api.github.com/users/timgraham/followers",
        "following_url": "https://api.github.com/users/timgraham/following{/other_user}",
        "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions",
        "organizations_url": "https://api.github.com/users/timgraham/orgs",
        "repos_url": "https://api.github.com/users/timgraham/repos",
        "events_url": "https://api.github.com/users/timgraham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/timgraham/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8ede411a81b40ca53362e6788601193c7e56a0cf",
          "url": "https://api.github.com/repos/django/django/commits/8ede411a81b40ca53362e6788601193c7e56a0cf",
          "html_url": "https://github.com/django/django/commit/8ede411a81b40ca53362e6788601193c7e56a0cf"
        }
      ]
    },
    {
      "sha": "8ede411a81b40ca53362e6788601193c7e56a0cf",
      "node_id": "C_kwDOAD-LgtoAKDhlZGU0MTFhODFiNDBjYTUzMzYyZTY3ODg2MDExOTNjN2U1NmEwY2Y",
      "commit": {
        "author": {
          "name": "Jacob Walls",
          "email": "jacobtylerwalls@gmail.com",
          "date": "2025-02-18T00:27:21Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-20T06:25:22Z"
        },
        "message": "Fixed #36152 -- Deprecated use of \"%\" in column aliases.\n\nUnintentional support existed only on SQLite and Oracle.",
        "tree": {
          "sha": "fa68d8f108d56fcdbcc7ad29ae1a0442260bb50e",
          "url": "https://api.github.com/repos/django/django/git/trees/fa68d8f108d56fcdbcc7ad29ae1a0442260bb50e"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/8ede411a81b40ca53362e6788601193c7e56a0cf",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/8ede411a81b40ca53362e6788601193c7e56a0cf",
      "html_url": "https://github.com/django/django/commit/8ede411a81b40ca53362e6788601193c7e56a0cf",
      "comments_url": "https://api.github.com/repos/django/django/commits/8ede411a81b40ca53362e6788601193c7e56a0cf/comments",
      "author": {
        "login": "jacobtylerwalls",
        "id": 38668450,
        "node_id": "MDQ6VXNlcjM4NjY4NDUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jacobtylerwalls",
        "html_url": "https://github.com/jacobtylerwalls",
        "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
        "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
        "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
        "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
        "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
        "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "56f468681aaedefcdada1b86c441c12ae96e7fea",
          "url": "https://api.github.com/repos/django/django/commits/56f468681aaedefcdada1b86c441c12ae96e7fea",
          "html_url": "https://github.com/django/django/commit/56f468681aaedefcdada1b86c441c12ae96e7fea"
        }
      ]
    },
    {
      "sha": "56f468681aaedefcdada1b86c441c12ae96e7fea",
      "node_id": "C_kwDOAD-LgtoAKDU2ZjQ2ODY4MWFhZWRlZmNkYWRhMWI4NmM0NDFjMTJhZTk2ZTdmZWE",
      "commit": {
        "author": {
          "name": "Jacob Walls",
          "email": "jacobtylerwalls@gmail.com",
          "date": "2025-06-19T10:22:23Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-06-19T10:22:23Z"
        },
        "message": "Refs #35038 -- Reduced CreateModel/AlterConstraint operations when optimizing migrations.",
        "tree": {
          "sha": "5203a04706794d2da757e835c926ce377a6882d1",
          "url": "https://api.github.com/repos/django/django/git/trees/5203a04706794d2da757e835c926ce377a6882d1"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/56f468681aaedefcdada1b86c441c12ae96e7fea",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoU+TfCRC1aQ7uu5UhlAAAhMQQAAK7Xvs9GehX+jhTYPKSgk7f\nM+gkG2jLn304J37/V4nujCJkJ2bcfEyblqB5P1gF1yNRRrwZTPVI8HWVdajKRVbh\nIsRhYCGQcOLX+yZ3pXHStc8ykPCDvA1ZOlqKYLjOG4QkFX7MMoyQt05LZbwRzmXL\nJ1WRmCB4rFfvJgMuJVQCWqh/3M/ZCU1dQ2t1VcsQSd1ZFrAmlI/uVgCmLd9FmvvI\nbcBdTyBoJh8Vnc51k+iQe+3ibn4pC38hhb0CVCk2sMglpGnrobzhUMZtoqhRlzsM\nn6Odh/pHXU7zqkeQvg/RWaikytIWUfzIo9JVHNwDPObRrXmyMnibN+4hO6Ge+O6b\nVz9R/87gP4us76NgGOQDZwHLuI/Q7hApd7AVNf72xX5HQRUuno9Akod+VSnZqFt/\ng/tCPiOmc3pcU684GsRAKp36mdRZ6fd4FziqChEGCoXMHGCITJzQaKJL7DPcKvLO\nb/8g52NckbIcuFYGkonHdVJfO5ye0+Nyo4C8ATDFLQrqafsUyLCBxdiOaBBuPAGG\nATHgsaiFvtTfDSbeA27rwjRkk0U+lxGXYwDIYtuEL3Sj9JKKVpfpvhUNv1jaT2wb\nMEpfXlVB0cSz+VR9pL7RPZTZl5aI1NTeEA/BZtFo4pmj+VIfgf0VmXjZ7dcv4Unr\nm0YnAO8cIg9T3hn5lR5w\n=+6wD\n-----END PGP SIGNATURE-----\n",
          "payload": "tree 5203a04706794d2da757e835c926ce377a6882d1\nparent bc1bfe12b613334bd625aeb36fd44af96d186c10\nauthor Jacob Walls <jacobtylerwalls@gmail.com> 1750328543 -0400\ncommitter GitHub <noreply@github.com> 1750328543 +0200\n\nRefs #35038 -- Reduced CreateModel/AlterConstraint operations when optimizing migrations.\n\n",
          "verified_at": "2025-06-19T10:22:23Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/56f468681aaedefcdada1b86c441c12ae96e7fea",
      "html_url": "https://github.com/django/django/commit/56f468681aaedefcdada1b86c441c12ae96e7fea",
      "comments_url": "https://api.github.com/repos/django/django/commits/56f468681aaedefcdada1b86c441c12ae96e7fea/comments",
      "author": {
        "login": "jacobtylerwalls",
        "id": 38668450,
        "node_id": "MDQ6VXNlcjM4NjY4NDUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/38668450?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jacobtylerwalls",
        "html_url": "https://github.com/jacobtylerwalls",
        "followers_url": "https://api.github.com/users/jacobtylerwalls/followers",
        "following_url": "https://api.github.com/users/jacobtylerwalls/following{/other_user}",
        "gists_url": "https://api.github.com/users/jacobtylerwalls/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jacobtylerwalls/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jacobtylerwalls/subscriptions",
        "organizations_url": "https://api.github.com/users/jacobtylerwalls/orgs",
        "repos_url": "https://api.github.com/users/jacobtylerwalls/repos",
        "events_url": "https://api.github.com/users/jacobtylerwalls/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jacobtylerwalls/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "bc1bfe12b613334bd625aeb36fd44af96d186c10",
          "url": "https://api.github.com/repos/django/django/commits/bc1bfe12b613334bd625aeb36fd44af96d186c10",
          "html_url": "https://github.com/django/django/commit/bc1bfe12b613334bd625aeb36fd44af96d186c10"
        }
      ]
    },
    {
      "sha": "bc1bfe12b613334bd625aeb36fd44af96d186c10",
      "node_id": "C_kwDOAD-LgtoAKGJjMWJmZTEyYjYxMzMzNGJkNjI1YWViMzZmZDQ0YWY5NmQxODZjMTA",
      "commit": {
        "author": {
          "name": "Jake Howard",
          "email": "6527489+RealOrangeOne@users.noreply.github.com",
          "date": "2025-06-18T14:04:34Z"
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "date": "2025-06-18T14:04:34Z"
        },
        "message": "Clarified that only latest dependency versions are valid for security reports.",
        "tree": {
          "sha": "d914b968339d7f0a170232f9a200af02f1e7898c",
          "url": "https://api.github.com/repos/django/django/git/trees/d914b968339d7f0a170232f9a200af02f1e7898c"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/bc1bfe12b613334bd625aeb36fd44af96d186c10",
        "comment_count": 0,
        "verification": {
          "verified": true,
          "reason": "valid",
          "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoUsdyCRC1aQ7uu5UhlAAAtowQAIYt03RS/N1yJsV2SKzB9ba8\nzlisLQXnvLhC2cpKB8dmTtyQ6r6NGn6+nO2vWn/LVJs93hIGdgX4mgaDKervWuxm\nRVrGEFGbRD4S8RcVAh6rs5TTytc4RY73eO6XeVO9pAVL/trxN/yTofTxKbcrfnCQ\nSojRq6XatDmyIX7zocr9G2mvsBKv3rdzQpO7iv9bCdtBnK4PcaH/LkGqOC0TDq+b\nLf3Za7VmG1NwPcKuvxtMpqjWCEMTs4ohIkEvR/9qdw6cTs7BHLWcKnlln4SJPKME\nyRGF+T/lew14/vjLzTOK7fFQFT94On0DYnNWrZD9vudE8Auir93SdNYXMC2XZACv\npK1z5TohNpq+rQl9sRzVXiimK9WsXQ0J1ER/H905S56ZVjogAKnYv6DMyz/dWJK2\nEfQVupeXrMvGI+HpELZVliI9zhNRhiW1w4zy6LAA0kpCLurd2Q2xoir4plTa4vr/\nPTh2ylwKXSsmG89+fSCw1cl2o9nISWpznZcpsadsT2ybHpOBX1rJrsHhAaDX7liZ\ngyDtKIJAyHvCEZ88QQJ4HvIB7Mu9W1RJ4OUlgdkrzydEajzWkSt7XVFXuYfk3CX1\naYEcgpKkMC0+QfUcPfTbplmXlFoH4lzqsyudbDOPXvoIP9RQ/+iCAYV0BM5FbZ9A\nhEqDC5FqqA0h6v9iNNQR\n=Iwo0\n-----END PGP SIGNATURE-----\n",
          "payload": "tree d914b968339d7f0a170232f9a200af02f1e7898c\nparent 22506b2c162b34c4c45f748cf11ede75824a40cd\nauthor Jake Howard <6527489+RealOrangeOne@users.noreply.github.com> 1750255474 +0100\ncommitter GitHub <noreply@github.com> 1750255474 -0300\n\nClarified that only latest dependency versions are valid for security reports.\n\n",
          "verified_at": "2025-06-18T14:04:35Z"
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/bc1bfe12b613334bd625aeb36fd44af96d186c10",
      "html_url": "https://github.com/django/django/commit/bc1bfe12b613334bd625aeb36fd44af96d186c10",
      "comments_url": "https://api.github.com/repos/django/django/commits/bc1bfe12b613334bd625aeb36fd44af96d186c10/comments",
      "author": {
        "login": "RealOrangeOne",
        "id": 6527489,
        "node_id": "MDQ6VXNlcjY1Mjc0ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6527489?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RealOrangeOne",
        "html_url": "https://github.com/RealOrangeOne",
        "followers_url": "https://api.github.com/users/RealOrangeOne/followers",
        "following_url": "https://api.github.com/users/RealOrangeOne/following{/other_user}",
        "gists_url": "https://api.github.com/users/RealOrangeOne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RealOrangeOne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RealOrangeOne/subscriptions",
        "organizations_url": "https://api.github.com/users/RealOrangeOne/orgs",
        "repos_url": "https://api.github.com/users/RealOrangeOne/repos",
        "events_url": "https://api.github.com/users/RealOrangeOne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RealOrangeOne/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "22506b2c162b34c4c45f748cf11ede75824a40cd",
          "url": "https://api.github.com/repos/django/django/commits/22506b2c162b34c4c45f748cf11ede75824a40cd",
          "html_url": "https://github.com/django/django/commit/22506b2c162b34c4c45f748cf11ede75824a40cd"
        }
      ]
    },
    {
      "sha": "22506b2c162b34c4c45f748cf11ede75824a40cd",
      "node_id": "C_kwDOAD-LgtoAKDIyNTA2YjJjMTYyYjM0YzRjNDVmNzQ4Y2YxMWVkZTc1ODI0YTQwY2Q",
      "commit": {
        "author": {
          "name": "haileyajohnson",
          "email": "haj022@ucsd.edu",
          "date": "2025-06-16T21:22:34Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-18T12:04:39Z"
        },
        "message": "Fixed #36465, Refs #35816 -- Disallowed '+' and '-' characters in template variable names.\n\nRegression in 5183f7c287a9a5d61ca1103b55166cda52d9c647.\n\nThank you to Jon Banafato and Baptiste Mispelon for the report.",
        "tree": {
          "sha": "48649b38164cf002291db5b881038ea78e6943bd",
          "url": "https://api.github.com/repos/django/django/git/trees/48649b38164cf002291db5b881038ea78e6943bd"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/22506b2c162b34c4c45f748cf11ede75824a40cd",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/22506b2c162b34c4c45f748cf11ede75824a40cd",
      "html_url": "https://github.com/django/django/commit/22506b2c162b34c4c45f748cf11ede75824a40cd",
      "comments_url": "https://api.github.com/repos/django/django/commits/22506b2c162b34c4c45f748cf11ede75824a40cd/comments",
      "author": {
        "login": "haileyajohnson",
        "id": 21203790,
        "node_id": "MDQ6VXNlcjIxMjAzNzkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/21203790?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/haileyajohnson",
        "html_url": "https://github.com/haileyajohnson",
        "followers_url": "https://api.github.com/users/haileyajohnson/followers",
        "following_url": "https://api.github.com/users/haileyajohnson/following{/other_user}",
        "gists_url": "https://api.github.com/users/haileyajohnson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/haileyajohnson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/haileyajohnson/subscriptions",
        "organizations_url": "https://api.github.com/users/haileyajohnson/orgs",
        "repos_url": "https://api.github.com/users/haileyajohnson/repos",
        "events_url": "https://api.github.com/users/haileyajohnson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/haileyajohnson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "db4d65f8be1627223707185edac7181584425149",
          "url": "https://api.github.com/repos/django/django/commits/db4d65f8be1627223707185edac7181584425149",
          "html_url": "https://github.com/django/django/commit/db4d65f8be1627223707185edac7181584425149"
        }
      ]
    },
    {
      "sha": "db4d65f8be1627223707185edac7181584425149",
      "node_id": "C_kwDOAD-LgtoAKGRiNGQ2NWY4YmUxNjI3MjIzNzA3MTg1ZWRhYzcxODE1ODQ0MjUxNDk",
      "commit": {
        "author": {
          "name": "Lukas Komischke",
          "email": "lukas.komischke@ameos.de",
          "date": "2025-06-18T07:02:01Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-18T09:25:14Z"
        },
        "message": "Fixed #36467 -- Removed leading whitespaces from Set-Cookie header values in WSGIHandler.\n\nThis also aligned the Set-Cookie logic in the WSGIHandler and ASGIHandler.\n\nCo-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",
        "tree": {
          "sha": "f79ec7a0fcf9f2af7ce9ef8840e40c924bbc5e12",
          "url": "https://api.github.com/repos/django/django/git/trees/f79ec7a0fcf9f2af7ce9ef8840e40c924bbc5e12"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/db4d65f8be1627223707185edac7181584425149",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/db4d65f8be1627223707185edac7181584425149",
      "html_url": "https://github.com/django/django/commit/db4d65f8be1627223707185edac7181584425149",
      "comments_url": "https://api.github.com/repos/django/django/commits/db4d65f8be1627223707185edac7181584425149/comments",
      "author": {
        "login": "lukas-komischke-ameos",
        "id": 85482653,
        "node_id": "MDQ6VXNlcjg1NDgyNjUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/85482653?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lukas-komischke-ameos",
        "html_url": "https://github.com/lukas-komischke-ameos",
        "followers_url": "https://api.github.com/users/lukas-komischke-ameos/followers",
        "following_url": "https://api.github.com/users/lukas-komischke-ameos/following{/other_user}",
        "gists_url": "https://api.github.com/users/lukas-komischke-ameos/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lukas-komischke-ameos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lukas-komischke-ameos/subscriptions",
        "organizations_url": "https://api.github.com/users/lukas-komischke-ameos/orgs",
        "repos_url": "https://api.github.com/users/lukas-komischke-ameos/repos",
        "events_url": "https://api.github.com/users/lukas-komischke-ameos/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lukas-komischke-ameos/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1cd91d5d4bfb65ea7b5c7177310f849d05037609",
          "url": "https://api.github.com/repos/django/django/commits/1cd91d5d4bfb65ea7b5c7177310f849d05037609",
          "html_url": "https://github.com/django/django/commit/1cd91d5d4bfb65ea7b5c7177310f849d05037609"
        }
      ]
    },
    {
      "sha": "1cd91d5d4bfb65ea7b5c7177310f849d05037609",
      "node_id": "C_kwDOAD-LgtoAKDFjZDkxZDVkNGJmYjY1ZWE3YjVjNzE3NzMxMGY4NDlkMDUwMzc2MDk",
      "commit": {
        "author": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-18T06:55:15Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-18T09:25:14Z"
        },
        "message": "Refs #36467 -- Added test for Set-Cookie header values in ASGIHandler.",
        "tree": {
          "sha": "388b8080198f341ad1744c4ce31e57ad048599e9",
          "url": "https://api.github.com/repos/django/django/git/trees/388b8080198f341ad1744c4ce31e57ad048599e9"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/1cd91d5d4bfb65ea7b5c7177310f849d05037609",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/1cd91d5d4bfb65ea7b5c7177310f849d05037609",
      "html_url": "https://github.com/django/django/commit/1cd91d5d4bfb65ea7b5c7177310f849d05037609",
      "comments_url": "https://api.github.com/repos/django/django/commits/1cd91d5d4bfb65ea7b5c7177310f849d05037609/comments",
      "author": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1520870c4a6c47df3ed2f597785a8d35a1710bc4",
          "url": "https://api.github.com/repos/django/django/commits/1520870c4a6c47df3ed2f597785a8d35a1710bc4",
          "html_url": "https://github.com/django/django/commit/1520870c4a6c47df3ed2f597785a8d35a1710bc4"
        }
      ]
    },
    {
      "sha": "1520870c4a6c47df3ed2f597785a8d35a1710bc4",
      "node_id": "C_kwDOAD-LgtoAKDE1MjA4NzBjNGE2YzQ3ZGYzZWQyZjU5Nzc4NWE4ZDM1YTE3MTBiYzQ",
      "commit": {
        "author": {
          "name": "michalpokusa",
          "email": "72110769+michalpokusa@users.noreply.github.com",
          "date": "2025-06-05T11:04:00Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-18T06:37:44Z"
        },
        "message": "Fixed #36437 -- Improved accessibility of messages in admin.",
        "tree": {
          "sha": "3ecb5b0afbcd312239e8f9438edea1cdadca22d9",
          "url": "https://api.github.com/repos/django/django/git/trees/3ecb5b0afbcd312239e8f9438edea1cdadca22d9"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/1520870c4a6c47df3ed2f597785a8d35a1710bc4",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/1520870c4a6c47df3ed2f597785a8d35a1710bc4",
      "html_url": "https://github.com/django/django/commit/1520870c4a6c47df3ed2f597785a8d35a1710bc4",
      "comments_url": "https://api.github.com/repos/django/django/commits/1520870c4a6c47df3ed2f597785a8d35a1710bc4/comments",
      "author": {
        "login": "michalpokusa",
        "id": 72110769,
        "node_id": "MDQ6VXNlcjcyMTEwNzY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/72110769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michalpokusa",
        "html_url": "https://github.com/michalpokusa",
        "followers_url": "https://api.github.com/users/michalpokusa/followers",
        "following_url": "https://api.github.com/users/michalpokusa/following{/other_user}",
        "gists_url": "https://api.github.com/users/michalpokusa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/michalpokusa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/michalpokusa/subscriptions",
        "organizations_url": "https://api.github.com/users/michalpokusa/orgs",
        "repos_url": "https://api.github.com/users/michalpokusa/repos",
        "events_url": "https://api.github.com/users/michalpokusa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/michalpokusa/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "74b31cd26b9ad4ad85f131850a734f02aae988bb",
          "url": "https://api.github.com/repos/django/django/commits/74b31cd26b9ad4ad85f131850a734f02aae988bb",
          "html_url": "https://github.com/django/django/commit/74b31cd26b9ad4ad85f131850a734f02aae988bb"
        }
      ]
    },
    {
      "sha": "74b31cd26b9ad4ad85f131850a734f02aae988bb",
      "node_id": "C_kwDOAD-LgtoAKDc0YjMxY2QyNmI5YWQ0YWQ4NWYxMzE4NTBhNzM0ZjAyYWFlOTg4YmI",
      "commit": {
        "author": {
          "name": "Clifford Gama",
          "email": "cliffygamy@gmail.com",
          "date": "2025-05-16T21:48:38Z"
        },
        "committer": {
          "name": "Sarah Boyce",
          "email": "42296566+sarahboyce@users.noreply.github.com",
          "date": "2025-06-18T06:36:49Z"
        },
        "message": "Fixed #32770 -- Added system check to ensure django.contrib.postgres is installed when using its features.\n\nAdded postgres.E005 to validate 'django.contrib.postgres' is in INSTALLED_APPS\nwhen using:\n* PostgreSQL-specific fields (ArrayField, HStoreField, range fields, SearchVectorField),\n* PostgreSQL indexes (PostgresIndex and all subclasses), and\n* ExclusionConstraint\n\nThe check provides immediate feedback during system checks rather than failing\nlater with obscure runtime and database errors.\n\nThanks to Simon Charette and Sarah Boyce for reviews.",
        "tree": {
          "sha": "ceabf0b4c985ae8159d44cf969e17c31bd38a337",
          "url": "https://api.github.com/repos/django/django/git/trees/ceabf0b4c985ae8159d44cf969e17c31bd38a337"
        },
        "url": "https://api.github.com/repos/django/django/git/commits/74b31cd26b9ad4ad85f131850a734f02aae988bb",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null,
          "verified_at": null
        }
      },
      "url": "https://api.github.com/repos/django/django/commits/74b31cd26b9ad4ad85f131850a734f02aae988bb",
      "html_url": "https://github.com/django/django/commit/74b31cd26b9ad4ad85f131850a734f02aae988bb",
      "comments_url": "https://api.github.com/repos/django/django/commits/74b31cd26b9ad4ad85f131850a734f02aae988bb/comments",
      "author": {
        "login": "cliff688",
        "id": 53076065,
        "node_id": "MDQ6VXNlcjUzMDc2MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/53076065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cliff688",
        "html_url": "https://github.com/cliff688",
        "followers_url": "https://api.github.com/users/cliff688/followers",
        "following_url": "https://api.github.com/users/cliff688/following{/other_user}",
        "gists_url": "https://api.github.com/users/cliff688/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cliff688/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cliff688/subscriptions",
        "organizations_url": "https://api.github.com/users/cliff688/orgs",
        "repos_url": "https://api.github.com/users/cliff688/repos",
        "events_url": "https://api.github.com/users/cliff688/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cliff688/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "sarahboyce",
        "id": 42296566,
        "node_id": "MDQ6VXNlcjQyMjk2NTY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/42296566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sarahboyce",
        "html_url": "https://github.com/sarahboyce",
        "followers_url": "https://api.github.com/users/sarahboyce/followers",
        "following_url": "https://api.github.com/users/sarahboyce/following{/other_user}",
        "gists_url": "https://api.github.com/users/sarahboyce/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sarahboyce/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sarahboyce/subscriptions",
        "organizations_url": "https://api.github.com/users/sarahboyce/orgs",
        "repos_url": "https://api.github.com/users/sarahboyce/repos",
        "events_url": "https://api.github.com/users/sarahboyce/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sarahboyce/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8c56e939750ae785b806dfa4e043590760c90ab6",
          "url": "https://api.github.com/repos/django/django/commits/8c56e939750ae785b806dfa4e043590760c90ab6",
          "html_url": "https://github.com/django/django/commit/8c56e939750ae785b806dfa4e043590760c90ab6"
        }
      ]
    }
  ]
}